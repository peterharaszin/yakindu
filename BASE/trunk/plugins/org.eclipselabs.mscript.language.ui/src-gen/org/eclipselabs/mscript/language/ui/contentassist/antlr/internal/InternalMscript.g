/*
* generated by Xtext
*/
grammar InternalMscript;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipselabs.mscript.language.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipselabs.mscript.language.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipselabs.mscript.language.services.MscriptGrammarAccess;

}

@parser::members {
 
 	private MscriptGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MscriptGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getDefinitionsAssignment()); }
(rule__Module__DefinitionsAssignment)*
{ after(grammarAccess.getModuleAccess().getDefinitionsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefinition
entryRuleDefinition 
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefinitionAccess().getAlternatives()); }
(rule__Definition__Alternatives)
{ after(grammarAccess.getDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeDefinition
entryRuleDataTypeDefinition 
:
{ before(grammarAccess.getDataTypeDefinitionRule()); }
	 ruleDataTypeDefinition
{ after(grammarAccess.getDataTypeDefinitionRule()); } 
	 EOF 
;

// Rule DataTypeDefinition
ruleDataTypeDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getAlternatives()); }
(rule__DataTypeDefinition__Alternatives)
{ after(grammarAccess.getDataTypeDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationDefinition
entryRuleEnumerationDefinition 
:
{ before(grammarAccess.getEnumerationDefinitionRule()); }
	 ruleEnumerationDefinition
{ after(grammarAccess.getEnumerationDefinitionRule()); } 
	 EOF 
;

// Rule EnumerationDefinition
ruleEnumerationDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getGroup()); }
(rule__EnumerationDefinition__Group__0)
{ after(grammarAccess.getEnumerationDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationLiteralDeclaration
entryRuleEnumerationLiteralDeclaration 
:
{ before(grammarAccess.getEnumerationLiteralDeclarationRule()); }
	 ruleEnumerationLiteralDeclaration
{ after(grammarAccess.getEnumerationLiteralDeclarationRule()); } 
	 EOF 
;

// Rule EnumerationLiteralDeclaration
ruleEnumerationLiteralDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationLiteralDeclarationAccess().getNameAssignment()); }
(rule__EnumerationLiteralDeclaration__NameAssignment)
{ after(grammarAccess.getEnumerationLiteralDeclarationAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeAliasDefinition
entryRuleTypeAliasDefinition 
:
{ before(grammarAccess.getTypeAliasDefinitionRule()); }
	 ruleTypeAliasDefinition
{ after(grammarAccess.getTypeAliasDefinitionRule()); } 
	 EOF 
;

// Rule TypeAliasDefinition
ruleTypeAliasDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAliasDefinitionAccess().getGroup()); }
(rule__TypeAliasDefinition__Group__0)
{ after(grammarAccess.getTypeAliasDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordDefinition
entryRuleRecordDefinition 
:
{ before(grammarAccess.getRecordDefinitionRule()); }
	 ruleRecordDefinition
{ after(grammarAccess.getRecordDefinitionRule()); } 
	 EOF 
;

// Rule RecordDefinition
ruleRecordDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordDefinitionAccess().getGroup()); }
(rule__RecordDefinition__Group__0)
{ after(grammarAccess.getRecordDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRecordFieldDeclaration
entryRuleRecordFieldDeclaration 
:
{ before(grammarAccess.getRecordFieldDeclarationRule()); }
	 ruleRecordFieldDeclaration
{ after(grammarAccess.getRecordFieldDeclarationRule()); } 
	 EOF 
;

// Rule RecordFieldDeclaration
ruleRecordFieldDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRecordFieldDeclarationAccess().getGroup()); }
(rule__RecordFieldDeclaration__Group__0)
{ after(grammarAccess.getRecordFieldDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDefinition
entryRuleFunctionDefinition 
:
{ before(grammarAccess.getFunctionDefinitionRule()); }
	 ruleFunctionDefinition
{ after(grammarAccess.getFunctionDefinitionRule()); } 
	 EOF 
;

// Rule FunctionDefinition
ruleFunctionDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
(rule__FunctionDefinition__Group__0)
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterDeclaration
entryRuleParameterDeclaration 
:
{ before(grammarAccess.getParameterDeclarationRule()); }
	 ruleParameterDeclaration
{ after(grammarAccess.getParameterDeclarationRule()); } 
	 EOF 
;

// Rule ParameterDeclaration
ruleParameterDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterDeclarationAccess().getNameAssignment()); }
(rule__ParameterDeclaration__NameAssignment)
{ after(grammarAccess.getParameterDeclarationAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssertionStatement
entryRuleAssertionStatement 
:
{ before(grammarAccess.getAssertionStatementRule()); }
	 ruleAssertionStatement
{ after(grammarAccess.getAssertionStatementRule()); } 
	 EOF 
;

// Rule AssertionStatement
ruleAssertionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssertionStatementAccess().getGroup()); }
(rule__AssertionStatement__Group__0)
{ after(grammarAccess.getAssertionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStateVariableDeclaration
entryRuleStateVariableDeclaration 
:
{ before(grammarAccess.getStateVariableDeclarationRule()); }
	 ruleStateVariableDeclaration
{ after(grammarAccess.getStateVariableDeclarationRule()); } 
	 EOF 
;

// Rule StateVariableDeclaration
ruleStateVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getGroup()); }
(rule__StateVariableDeclaration__Group__0)
{ after(grammarAccess.getStateVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctorDeclaration
entryRuleFunctorDeclaration 
:
{ before(grammarAccess.getFunctorDeclarationRule()); }
	 ruleFunctorDeclaration
{ after(grammarAccess.getFunctorDeclarationRule()); } 
	 EOF 
;

// Rule FunctorDeclaration
ruleFunctorDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getGroup()); }
(rule__FunctorDeclaration__Group__0)
{ after(grammarAccess.getFunctorDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgumentDeclaration
entryRuleArgumentDeclaration 
:
{ before(grammarAccess.getArgumentDeclarationRule()); }
	 ruleArgumentDeclaration
{ after(grammarAccess.getArgumentDeclarationRule()); } 
	 EOF 
;

// Rule ArgumentDeclaration
ruleArgumentDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentDeclarationAccess().getNameAssignment()); }
(rule__ArgumentDeclaration__NameAssignment)
{ after(grammarAccess.getArgumentDeclarationAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEquationStatement
entryRuleEquationStatement 
:
{ before(grammarAccess.getEquationStatementRule()); }
	 ruleEquationStatement
{ after(grammarAccess.getEquationStatementRule()); } 
	 EOF 
;

// Rule EquationStatement
ruleEquationStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEquationStatementAccess().getGroup()); }
(rule__EquationStatement__Group__0)
{ after(grammarAccess.getEquationStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeSpecifier
entryRuleDataTypeSpecifier 
:
{ before(grammarAccess.getDataTypeSpecifierRule()); }
	 ruleDataTypeSpecifier
{ after(grammarAccess.getDataTypeSpecifierRule()); } 
	 EOF 
;

// Rule DataTypeSpecifier
ruleDataTypeSpecifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeSpecifierAccess().getAlternatives()); }
(rule__DataTypeSpecifier__Alternatives)
{ after(grammarAccess.getDataTypeSpecifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitiveTypeSpecifier
entryRulePrimitiveTypeSpecifier 
:
{ before(grammarAccess.getPrimitiveTypeSpecifierRule()); }
	 rulePrimitiveTypeSpecifier
{ after(grammarAccess.getPrimitiveTypeSpecifierRule()); } 
	 EOF 
;

// Rule PrimitiveTypeSpecifier
rulePrimitiveTypeSpecifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimitiveTypeSpecifierAccess().getAlternatives()); }
(rule__PrimitiveTypeSpecifier__Alternatives)
{ after(grammarAccess.getPrimitiveTypeSpecifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericTypeSpecifier
entryRuleNumericTypeSpecifier 
:
{ before(grammarAccess.getNumericTypeSpecifierRule()); }
	 ruleNumericTypeSpecifier
{ after(grammarAccess.getNumericTypeSpecifierRule()); } 
	 EOF 
;

// Rule NumericTypeSpecifier
ruleNumericTypeSpecifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumericTypeSpecifierAccess().getAlternatives()); }
(rule__NumericTypeSpecifier__Alternatives)
{ after(grammarAccess.getNumericTypeSpecifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealTypeSpecifier
entryRuleRealTypeSpecifier 
:
{ before(grammarAccess.getRealTypeSpecifierRule()); }
	 ruleRealTypeSpecifier
{ after(grammarAccess.getRealTypeSpecifierRule()); } 
	 EOF 
;

// Rule RealTypeSpecifier
ruleRealTypeSpecifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getGroup()); }
(rule__RealTypeSpecifier__Group__0)
{ after(grammarAccess.getRealTypeSpecifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerTypeSpecifier
entryRuleIntegerTypeSpecifier 
:
{ before(grammarAccess.getIntegerTypeSpecifierRule()); }
	 ruleIntegerTypeSpecifier
{ after(grammarAccess.getIntegerTypeSpecifierRule()); } 
	 EOF 
;

// Rule IntegerTypeSpecifier
ruleIntegerTypeSpecifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getGroup()); }
(rule__IntegerTypeSpecifier__Group__0)
{ after(grammarAccess.getIntegerTypeSpecifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComplexTypeSpecifier
entryRuleComplexTypeSpecifier 
:
{ before(grammarAccess.getComplexTypeSpecifierRule()); }
	 ruleComplexTypeSpecifier
{ after(grammarAccess.getComplexTypeSpecifierRule()); } 
	 EOF 
;

// Rule ComplexTypeSpecifier
ruleComplexTypeSpecifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getGroup()); }
(rule__ComplexTypeSpecifier__Group__0)
{ after(grammarAccess.getComplexTypeSpecifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGaussianTypeSpecifier
entryRuleGaussianTypeSpecifier 
:
{ before(grammarAccess.getGaussianTypeSpecifierRule()); }
	 ruleGaussianTypeSpecifier
{ after(grammarAccess.getGaussianTypeSpecifierRule()); } 
	 EOF 
;

// Rule GaussianTypeSpecifier
ruleGaussianTypeSpecifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getGroup()); }
(rule__GaussianTypeSpecifier__Group__0)
{ after(grammarAccess.getGaussianTypeSpecifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanTypeSpecifier
entryRuleBooleanTypeSpecifier 
:
{ before(grammarAccess.getBooleanTypeSpecifierRule()); }
	 ruleBooleanTypeSpecifier
{ after(grammarAccess.getBooleanTypeSpecifierRule()); } 
	 EOF 
;

// Rule BooleanTypeSpecifier
ruleBooleanTypeSpecifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanTypeSpecifierAccess().getGroup()); }
(rule__BooleanTypeSpecifier__Group__0)
{ after(grammarAccess.getBooleanTypeSpecifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringTypeSpecifier
entryRuleStringTypeSpecifier 
:
{ before(grammarAccess.getStringTypeSpecifierRule()); }
	 ruleStringTypeSpecifier
{ after(grammarAccess.getStringTypeSpecifierRule()); } 
	 EOF 
;

// Rule StringTypeSpecifier
ruleStringTypeSpecifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringTypeSpecifierAccess().getGroup()); }
(rule__StringTypeSpecifier__Group__0)
{ after(grammarAccess.getStringTypeSpecifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedTypeSpecifier
entryRuleNamedTypeSpecifier 
:
{ before(grammarAccess.getNamedTypeSpecifierRule()); }
	 ruleNamedTypeSpecifier
{ after(grammarAccess.getNamedTypeSpecifierRule()); } 
	 EOF 
;

// Rule NamedTypeSpecifier
ruleNamedTypeSpecifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedTypeSpecifierAccess().getGroup()); }
(rule__NamedTypeSpecifier__Group__0)
{ after(grammarAccess.getNamedTypeSpecifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayDimensionSpecification
entryRuleArrayDimensionSpecification 
:
{ before(grammarAccess.getArrayDimensionSpecificationRule()); }
	 ruleArrayDimensionSpecification
{ after(grammarAccess.getArrayDimensionSpecificationRule()); } 
	 EOF 
;

// Rule ArrayDimensionSpecification
ruleArrayDimensionSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayDimensionSpecificationAccess().getGroup()); }
(rule__ArrayDimensionSpecification__Group__0)
{ after(grammarAccess.getArrayDimensionSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLetExpression
entryRuleLetExpression 
:
{ before(grammarAccess.getLetExpressionRule()); }
	 ruleLetExpression
{ after(grammarAccess.getLetExpressionRule()); } 
	 EOF 
;

// Rule LetExpression
ruleLetExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLetExpressionAccess().getGroup()); }
(rule__LetExpression__Group__0)
{ after(grammarAccess.getLetExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLetExpressionVariable
entryRuleLetExpressionVariable 
:
{ before(grammarAccess.getLetExpressionVariableRule()); }
	 ruleLetExpressionVariable
{ after(grammarAccess.getLetExpressionVariableRule()); } 
	 EOF 
;

// Rule LetExpressionVariable
ruleLetExpressionVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLetExpressionVariableAccess().getGroup()); }
(rule__LetExpressionVariable__Group__0)
{ after(grammarAccess.getLetExpressionVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfExpression
entryRuleIfExpression 
:
{ before(grammarAccess.getIfExpressionRule()); }
	 ruleIfExpression
{ after(grammarAccess.getIfExpressionRule()); } 
	 EOF 
;

// Rule IfExpression
ruleIfExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfExpressionAccess().getGroup()); }
(rule__IfExpression__Group__0)
{ after(grammarAccess.getIfExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchExpression
entryRuleSwitchExpression 
:
{ before(grammarAccess.getSwitchExpressionRule()); }
	 ruleSwitchExpression
{ after(grammarAccess.getSwitchExpressionRule()); } 
	 EOF 
;

// Rule SwitchExpression
ruleSwitchExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchExpressionAccess().getGroup()); }
(rule__SwitchExpression__Group__0)
{ after(grammarAccess.getSwitchExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchCase
entryRuleSwitchCase 
:
{ before(grammarAccess.getSwitchCaseRule()); }
	 ruleSwitchCase
{ after(grammarAccess.getSwitchCaseRule()); } 
	 EOF 
;

// Rule SwitchCase
ruleSwitchCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchCaseAccess().getGroup()); }
(rule__SwitchCase__Group__0)
{ after(grammarAccess.getSwitchCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRangeExpression
entryRuleRangeExpression 
:
{ before(grammarAccess.getRangeExpressionRule()); }
	 ruleRangeExpression
{ after(grammarAccess.getRangeExpressionRule()); } 
	 EOF 
;

// Rule RangeExpression
ruleRangeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRangeExpressionAccess().getGroup()); }
(rule__RangeExpression__Group__0)
{ after(grammarAccess.getRangeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImpliesExpression
entryRuleImpliesExpression 
:
{ before(grammarAccess.getImpliesExpressionRule()); }
	 ruleImpliesExpression
{ after(grammarAccess.getImpliesExpressionRule()); } 
	 EOF 
;

// Rule ImpliesExpression
ruleImpliesExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImpliesExpressionAccess().getGroup()); }
(rule__ImpliesExpression__Group__0)
{ after(grammarAccess.getImpliesExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicalOrExpression
entryRuleLogicalOrExpression 
:
{ before(grammarAccess.getLogicalOrExpressionRule()); }
	 ruleLogicalOrExpression
{ after(grammarAccess.getLogicalOrExpressionRule()); } 
	 EOF 
;

// Rule LogicalOrExpression
ruleLogicalOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
(rule__LogicalOrExpression__Group__0)
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression 
:
{ before(grammarAccess.getLogicalAndExpressionRule()); }
	 ruleLogicalAndExpression
{ after(grammarAccess.getLogicalAndExpressionRule()); } 
	 EOF 
;

// Rule LogicalAndExpression
ruleLogicalAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
(rule__LogicalAndExpression__Group__0)
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression 
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
(rule__EqualityExpression__Group__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression 
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpressionPart
entryRuleAdditiveExpressionPart 
:
{ before(grammarAccess.getAdditiveExpressionPartRule()); }
	 ruleAdditiveExpressionPart
{ after(grammarAccess.getAdditiveExpressionPartRule()); } 
	 EOF 
;

// Rule AdditiveExpressionPart
ruleAdditiveExpressionPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionPartAccess().getGroup()); }
(rule__AdditiveExpressionPart__Group__0)
{ after(grammarAccess.getAdditiveExpressionPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression 
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpressionPart
entryRuleMultiplicativeExpressionPart 
:
{ before(grammarAccess.getMultiplicativeExpressionPartRule()); }
	 ruleMultiplicativeExpressionPart
{ after(grammarAccess.getMultiplicativeExpressionPartRule()); } 
	 EOF 
;

// Rule MultiplicativeExpressionPart
ruleMultiplicativeExpressionPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionPartAccess().getGroup()); }
(rule__MultiplicativeExpressionPart__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePowerExpression
entryRulePowerExpression 
:
{ before(grammarAccess.getPowerExpressionRule()); }
	 rulePowerExpression
{ after(grammarAccess.getPowerExpressionRule()); } 
	 EOF 
;

// Rule PowerExpression
rulePowerExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPowerExpressionAccess().getGroup()); }
(rule__PowerExpression__Group__0)
{ after(grammarAccess.getPowerExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
(rule__UnaryExpression__Alternatives)
{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostfixExpression
entryRulePostfixExpression 
:
{ before(grammarAccess.getPostfixExpressionRule()); }
	 rulePostfixExpression
{ after(grammarAccess.getPostfixExpressionRule()); } 
	 EOF 
;

// Rule PostfixExpression
rulePostfixExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostfixExpressionAccess().getGroup()); }
(rule__PostfixExpression__Group__0)
{ after(grammarAccess.getPostfixExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCallablePrimaryExpression
entryRuleCallablePrimaryExpression 
:
{ before(grammarAccess.getCallablePrimaryExpressionRule()); }
	 ruleCallablePrimaryExpression
{ after(grammarAccess.getCallablePrimaryExpressionRule()); } 
	 EOF 
;

// Rule CallablePrimaryExpression
ruleCallablePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallablePrimaryExpressionAccess().getAlternatives()); }
(rule__CallablePrimaryExpression__Alternatives)
{ after(grammarAccess.getCallablePrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericLiteral
entryRuleNumericLiteral 
:
{ before(grammarAccess.getNumericLiteralRule()); }
	 ruleNumericLiteral
{ after(grammarAccess.getNumericLiteralRule()); } 
	 EOF 
;

// Rule NumericLiteral
ruleNumericLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumericLiteralAccess().getAlternatives()); }
(rule__NumericLiteral__Alternatives)
{ after(grammarAccess.getNumericLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRealLiteral
entryRuleRealLiteral 
:
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealLiteralAccess().getGroup()); }
(rule__RealLiteral__Group__0)
{ after(grammarAccess.getRealLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral 
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerLiteralAccess().getGroup()); }
(rule__IntegerLiteral__Group__0)
{ after(grammarAccess.getIntegerLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
(rule__BooleanLiteral__ValueAssignment)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
(rule__StringLiteral__ValueAssignment)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleName
entryRuleSimpleName 
:
{ before(grammarAccess.getSimpleNameRule()); }
	 ruleSimpleName
{ after(grammarAccess.getSimpleNameRule()); } 
	 EOF 
;

// Rule SimpleName
ruleSimpleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleNameAccess().getGroup()); }
(rule__SimpleName__Group__0)
{ after(grammarAccess.getSimpleNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureCall
entryRuleFeatureCall 
:
{ before(grammarAccess.getFeatureCallRule()); }
	 ruleFeatureCall
{ after(grammarAccess.getFeatureCallRule()); } 
	 EOF 
;

// Rule FeatureCall
ruleFeatureCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureCallAccess().getAlternatives()); }
(rule__FeatureCall__Alternatives)
{ after(grammarAccess.getFeatureCallAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureCallPart
entryRuleFeatureCallPart 
:
{ before(grammarAccess.getFeatureCallPartRule()); }
	 ruleFeatureCallPart
{ after(grammarAccess.getFeatureCallPartRule()); } 
	 EOF 
;

// Rule FeatureCallPart
ruleFeatureCallPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureCallPartAccess().getAlternatives()); }
(rule__FeatureCallPart__Alternatives)
{ after(grammarAccess.getFeatureCallPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureAccess
entryRuleFeatureAccess 
:
{ before(grammarAccess.getFeatureAccessRule()); }
	 ruleFeatureAccess
{ after(grammarAccess.getFeatureAccessRule()); } 
	 EOF 
;

// Rule FeatureAccess
ruleFeatureAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccessAccess().getGroup()); }
(rule__FeatureAccess__Group__0)
{ after(grammarAccess.getFeatureAccessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayElementAccess
entryRuleArrayElementAccess 
:
{ before(grammarAccess.getArrayElementAccessRule()); }
	 ruleArrayElementAccess
{ after(grammarAccess.getArrayElementAccessRule()); } 
	 EOF 
;

// Rule ArrayElementAccess
ruleArrayElementAccess
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayElementAccessAccess().getGroup()); }
(rule__ArrayElementAccess__Group__0)
{ after(grammarAccess.getArrayElementAccessAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArraySubscript
entryRuleArraySubscript 
:
{ before(grammarAccess.getArraySubscriptRule()); }
	 ruleArraySubscript
{ after(grammarAccess.getArraySubscriptRule()); } 
	 EOF 
;

// Rule ArraySubscript
ruleArraySubscript
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArraySubscriptAccess().getAlternatives()); }
(rule__ArraySubscript__Alternatives)
{ after(grammarAccess.getArraySubscriptAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationCall
entryRuleOperationCall 
:
{ before(grammarAccess.getOperationCallRule()); }
	 ruleOperationCall
{ after(grammarAccess.getOperationCallRule()); } 
	 EOF 
;

// Rule OperationCall
ruleOperationCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationCallAccess().getGroup()); }
(rule__OperationCall__Group__0)
{ after(grammarAccess.getOperationCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIterationCall
entryRuleIterationCall 
:
{ before(grammarAccess.getIterationCallRule()); }
	 ruleIterationCall
{ after(grammarAccess.getIterationCallRule()); } 
	 EOF 
;

// Rule IterationCall
ruleIterationCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIterationCallAccess().getGroup()); }
(rule__IterationCall__Group__0)
{ after(grammarAccess.getIterationCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIterationVariable
entryRuleIterationVariable 
:
{ before(grammarAccess.getIterationVariableRule()); }
	 ruleIterationVariable
{ after(grammarAccess.getIterationVariableRule()); } 
	 EOF 
;

// Rule IterationVariable
ruleIterationVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIterationVariableAccess().getNameAssignment()); }
(rule__IterationVariable__NameAssignment)
{ after(grammarAccess.getIterationVariableAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIterationAccumulator
entryRuleIterationAccumulator 
:
{ before(grammarAccess.getIterationAccumulatorRule()); }
	 ruleIterationAccumulator
{ after(grammarAccess.getIterationAccumulatorRule()); } 
	 EOF 
;

// Rule IterationAccumulator
ruleIterationAccumulator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIterationAccumulatorAccess().getGroup()); }
(rule__IterationAccumulator__Group__0)
{ after(grammarAccess.getIterationAccumulatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayConstructionOperator
entryRuleArrayConstructionOperator 
:
{ before(grammarAccess.getArrayConstructionOperatorRule()); }
	 ruleArrayConstructionOperator
{ after(grammarAccess.getArrayConstructionOperatorRule()); } 
	 EOF 
;

// Rule ArrayConstructionOperator
ruleArrayConstructionOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getGroup()); }
(rule__ArrayConstructionOperator__Group__0)
{ after(grammarAccess.getArrayConstructionOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayConstructionIterationClause
entryRuleArrayConstructionIterationClause 
:
{ before(grammarAccess.getArrayConstructionIterationClauseRule()); }
	 ruleArrayConstructionIterationClause
{ after(grammarAccess.getArrayConstructionIterationClauseRule()); } 
	 EOF 
;

// Rule ArrayConstructionIterationClause
ruleArrayConstructionIterationClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayConstructionIterationClauseAccess().getGroup()); }
(rule__ArrayConstructionIterationClause__Group__0)
{ after(grammarAccess.getArrayConstructionIterationClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArrayConcatenationOperator
entryRuleArrayConcatenationOperator 
:
{ before(grammarAccess.getArrayConcatenationOperatorRule()); }
	 ruleArrayConcatenationOperator
{ after(grammarAccess.getArrayConcatenationOperatorRule()); } 
	 EOF 
;

// Rule ArrayConcatenationOperator
ruleArrayConcatenationOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayConcatenationOperatorAccess().getGroup()); }
(rule__ArrayConcatenationOperator__Group__0)
{ after(grammarAccess.getArrayConcatenationOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionList
entryRuleExpressionList 
:
{ before(grammarAccess.getExpressionListRule()); }
	 ruleExpressionList
{ after(grammarAccess.getExpressionListRule()); } 
	 EOF 
;

// Rule ExpressionList
ruleExpressionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionListAccess().getGroup()); }
(rule__ExpressionList__Group__0)
{ after(grammarAccess.getExpressionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitConstructionOperator
entryRuleUnitConstructionOperator 
:
{ before(grammarAccess.getUnitConstructionOperatorRule()); }
	 ruleUnitConstructionOperator
{ after(grammarAccess.getUnitConstructionOperatorRule()); } 
	 EOF 
;

// Rule UnitConstructionOperator
ruleUnitConstructionOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitConstructionOperatorAccess().getGroup()); }
(rule__UnitConstructionOperator__Group__0)
{ after(grammarAccess.getUnitConstructionOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression 
:
{ before(grammarAccess.getParenthesizedExpressionRule()); }
	 ruleParenthesizedExpression
{ after(grammarAccess.getParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule ParenthesizedExpression
ruleParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
(rule__ParenthesizedExpression__Group__0)
{ after(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBeginExpression
entryRuleBeginExpression 
:
{ before(grammarAccess.getBeginExpressionRule()); }
	 ruleBeginExpression
{ after(grammarAccess.getBeginExpressionRule()); } 
	 EOF 
;

// Rule BeginExpression
ruleBeginExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBeginExpressionAccess().getGroup()); }
(rule__BeginExpression__Group__0)
{ after(grammarAccess.getBeginExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEndExpression
entryRuleEndExpression 
:
{ before(grammarAccess.getEndExpressionRule()); }
	 ruleEndExpression
{ after(grammarAccess.getEndExpressionRule()); } 
	 EOF 
;

// Rule EndExpression
ruleEndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEndExpressionAccess().getGroup()); }
(rule__EndExpression__Group__0)
{ after(grammarAccess.getEndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitExpression
entryRuleUnitExpression 
:
{ before(grammarAccess.getUnitExpressionRule()); }
	 ruleUnitExpression
{ after(grammarAccess.getUnitExpressionRule()); } 
	 EOF 
;

// Rule UnitExpression
ruleUnitExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitExpressionAccess().getGroup()); }
(rule__UnitExpression__Group__0)
{ after(grammarAccess.getUnitExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitExpressionNumerator
entryRuleUnitExpressionNumerator 
:
{ before(grammarAccess.getUnitExpressionNumeratorRule()); }
	 ruleUnitExpressionNumerator
{ after(grammarAccess.getUnitExpressionNumeratorRule()); } 
	 EOF 
;

// Rule UnitExpressionNumerator
ruleUnitExpressionNumerator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitExpressionNumeratorAccess().getAlternatives()); }
(rule__UnitExpressionNumerator__Alternatives)
{ after(grammarAccess.getUnitExpressionNumeratorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitExpressionDenominator
entryRuleUnitExpressionDenominator 
:
{ before(grammarAccess.getUnitExpressionDenominatorRule()); }
	 ruleUnitExpressionDenominator
{ after(grammarAccess.getUnitExpressionDenominatorRule()); } 
	 EOF 
;

// Rule UnitExpressionDenominator
ruleUnitExpressionDenominator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitExpressionDenominatorAccess().getAlternatives()); }
(rule__UnitExpressionDenominator__Alternatives)
{ after(grammarAccess.getUnitExpressionDenominatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitExpressionFactor
entryRuleUnitExpressionFactor 
:
{ before(grammarAccess.getUnitExpressionFactorRule()); }
	 ruleUnitExpressionFactor
{ after(grammarAccess.getUnitExpressionFactorRule()); } 
	 EOF 
;

// Rule UnitExpressionFactor
ruleUnitExpressionFactor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitExpressionFactorAccess().getGroup()); }
(rule__UnitExpressionFactor__Group__0)
{ after(grammarAccess.getUnitExpressionFactorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnitExpressionExponent
entryRuleUnitExpressionExponent 
:
{ before(grammarAccess.getUnitExpressionExponentRule()); }
	 ruleUnitExpressionExponent
{ after(grammarAccess.getUnitExpressionExponentRule()); } 
	 EOF 
;

// Rule UnitExpressionExponent
ruleUnitExpressionExponent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitExpressionExponentAccess().getGroup()); }
(rule__UnitExpressionExponent__Group__0)
{ after(grammarAccess.getUnitExpressionExponentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule AssertionStatusKind
ruleAssertionStatusKind
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionStatusKindAccess().getAlternatives()); }
(rule__AssertionStatusKind__Alternatives)
{ after(grammarAccess.getAssertionStatusKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule EqualityOperator
ruleEqualityOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
(rule__EqualityOperator__Alternatives)
{ after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule RelationalOperator
ruleRelationalOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
(rule__RelationalOperator__Alternatives)
{ after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AdditiveOperator
ruleAdditiveOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
(rule__AdditiveOperator__Alternatives)
{ after(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MultiplicativeOperator
ruleMultiplicativeOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
(rule__MultiplicativeOperator__Alternatives)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PowerOperator
rulePowerOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerOperatorAccess().getAlternatives()); }
(rule__PowerOperator__Alternatives)
{ after(grammarAccess.getPowerOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UnaryOperator
ruleUnaryOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
(rule__UnaryOperator__Alternatives)
{ after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PostfixOperator
rulePostfixOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOperatorAccess().getTransposeEnumLiteralDeclaration()); }
(	'\'' 
)
{ after(grammarAccess.getPostfixOperatorAccess().getTransposeEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BooleanKind
ruleBooleanKind
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanKindAccess().getAlternatives()); }
(rule__BooleanKind__Alternatives)
{ after(grammarAccess.getBooleanKindAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Definition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefinitionAccess().getDataTypeDefinitionParserRuleCall_0()); }
	ruleDataTypeDefinition
{ after(grammarAccess.getDefinitionAccess().getDataTypeDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDefinitionAccess().getFunctionDefinitionParserRuleCall_1()); }
	ruleFunctionDefinition
{ after(grammarAccess.getDefinitionAccess().getFunctionDefinitionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getEnumerationDefinitionParserRuleCall_0()); }
	ruleEnumerationDefinition
{ after(grammarAccess.getDataTypeDefinitionAccess().getEnumerationDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataTypeDefinitionAccess().getRecordDefinitionParserRuleCall_1()); }
	ruleRecordDefinition
{ after(grammarAccess.getDataTypeDefinitionAccess().getRecordDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDataTypeDefinitionAccess().getTypeAliasDefinitionParserRuleCall_2()); }
	ruleTypeAliasDefinition
{ after(grammarAccess.getDataTypeDefinitionAccess().getTypeAliasDefinitionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Alternatives_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getAssertionStatementsAssignment_11_0()); }
(rule__FunctionDefinition__AssertionStatementsAssignment_11_0)
{ after(grammarAccess.getFunctionDefinitionAccess().getAssertionStatementsAssignment_11_0()); }
)

    |(
{ before(grammarAccess.getFunctionDefinitionAccess().getFunctorDeclarationsAssignment_11_1()); }
(rule__FunctionDefinition__FunctorDeclarationsAssignment_11_1)
{ after(grammarAccess.getFunctionDefinitionAccess().getFunctorDeclarationsAssignment_11_1()); }
)

    |(
{ before(grammarAccess.getFunctionDefinitionAccess().getStateVariableDeclarationsAssignment_11_2()); }
(rule__FunctionDefinition__StateVariableDeclarationsAssignment_11_2)
{ after(grammarAccess.getFunctionDefinitionAccess().getStateVariableDeclarationsAssignment_11_2()); }
)

    |(
{ before(grammarAccess.getFunctionDefinitionAccess().getEquationStatementsAssignment_11_3()); }
(rule__FunctionDefinition__EquationStatementsAssignment_11_3)
{ after(grammarAccess.getFunctionDefinitionAccess().getEquationStatementsAssignment_11_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeSpecifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeSpecifierAccess().getPrimitiveTypeSpecifierParserRuleCall_0()); }
	rulePrimitiveTypeSpecifier
{ after(grammarAccess.getDataTypeSpecifierAccess().getPrimitiveTypeSpecifierParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataTypeSpecifierAccess().getNamedTypeSpecifierParserRuleCall_1()); }
	ruleNamedTypeSpecifier
{ after(grammarAccess.getDataTypeSpecifierAccess().getNamedTypeSpecifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveTypeSpecifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeSpecifierAccess().getNumericTypeSpecifierParserRuleCall_0()); }
	ruleNumericTypeSpecifier
{ after(grammarAccess.getPrimitiveTypeSpecifierAccess().getNumericTypeSpecifierParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeSpecifierAccess().getBooleanTypeSpecifierParserRuleCall_1()); }
	ruleBooleanTypeSpecifier
{ after(grammarAccess.getPrimitiveTypeSpecifierAccess().getBooleanTypeSpecifierParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimitiveTypeSpecifierAccess().getStringTypeSpecifierParserRuleCall_2()); }
	ruleStringTypeSpecifier
{ after(grammarAccess.getPrimitiveTypeSpecifierAccess().getStringTypeSpecifierParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypeSpecifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericTypeSpecifierAccess().getRealTypeSpecifierParserRuleCall_0()); }
	ruleRealTypeSpecifier
{ after(grammarAccess.getNumericTypeSpecifierAccess().getRealTypeSpecifierParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumericTypeSpecifierAccess().getIntegerTypeSpecifierParserRuleCall_1()); }
	ruleIntegerTypeSpecifier
{ after(grammarAccess.getNumericTypeSpecifierAccess().getIntegerTypeSpecifierParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNumericTypeSpecifierAccess().getComplexTypeSpecifierParserRuleCall_2()); }
	ruleComplexTypeSpecifier
{ after(grammarAccess.getNumericTypeSpecifierAccess().getComplexTypeSpecifierParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNumericTypeSpecifierAccess().getGaussianTypeSpecifierParserRuleCall_3()); }
	ruleGaussianTypeSpecifier
{ after(grammarAccess.getNumericTypeSpecifierAccess().getGaussianTypeSpecifierParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getLetExpressionParserRuleCall_0()); }
	ruleLetExpression
{ after(grammarAccess.getExpressionAccess().getLetExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_1()); }
	ruleIfExpression
{ after(grammarAccess.getExpressionAccess().getIfExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getSwitchExpressionParserRuleCall_2()); }
	ruleSwitchExpression
{ after(grammarAccess.getExpressionAccess().getSwitchExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getRangeExpressionParserRuleCall_3()); }
	ruleRangeExpression
{ after(grammarAccess.getExpressionAccess().getRangeExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_1_0()); }
(rule__RelationalExpression__Group_1_1_0__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_1_0()); }
)

    |(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_1_1()); }
(rule__RelationalExpression__Group_1_1_1__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getPostfixExpressionParserRuleCall_0()); }
	rulePostfixExpression
{ after(grammarAccess.getUnaryExpressionAccess().getPostfixExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
(rule__UnaryExpression__Group_1__0)
{ after(grammarAccess.getUnaryExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); }
	ruleLiteral
{ after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_1()); }
	ruleFeatureCall
{ after(grammarAccess.getPrimaryExpressionAccess().getFeatureCallParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getUnitConstructionOperatorParserRuleCall_2()); }
	ruleUnitConstructionOperator
{ after(grammarAccess.getPrimaryExpressionAccess().getUnitConstructionOperatorParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getBeginExpressionParserRuleCall_3()); }
	ruleBeginExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getBeginExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getEndExpressionParserRuleCall_4()); }
	ruleEndExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getEndExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallablePrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallablePrimaryExpressionAccess().getArrayConstructionOperatorParserRuleCall_0()); }
	ruleArrayConstructionOperator
{ after(grammarAccess.getCallablePrimaryExpressionAccess().getArrayConstructionOperatorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCallablePrimaryExpressionAccess().getArrayConcatenationOperatorParserRuleCall_1()); }
	ruleArrayConcatenationOperator
{ after(grammarAccess.getCallablePrimaryExpressionAccess().getArrayConcatenationOperatorParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCallablePrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_2()); }
	ruleParenthesizedExpression
{ after(grammarAccess.getCallablePrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNumericLiteralParserRuleCall_0()); }
	ruleNumericLiteral
{ after(grammarAccess.getLiteralAccess().getNumericLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericLiteralAccess().getRealLiteralParserRuleCall_0()); }
	ruleRealLiteral
{ after(grammarAccess.getNumericLiteralAccess().getRealLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumericLiteralAccess().getIntegerLiteralParserRuleCall_1()); }
	ruleIntegerLiteral
{ after(grammarAccess.getNumericLiteralAccess().getIntegerLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getGroup_0()); }
(rule__FeatureCall__Group_0__0)
{ after(grammarAccess.getFeatureCallAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFeatureCallAccess().getGroup_1()); }
(rule__FeatureCall__Group_1__0)
{ after(grammarAccess.getFeatureCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCallPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallPartAccess().getFeatureAccessParserRuleCall_0()); }
	ruleFeatureAccess
{ after(grammarAccess.getFeatureCallPartAccess().getFeatureAccessParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureCallPartAccess().getArrayElementAccessParserRuleCall_1()); }
	ruleArrayElementAccess
{ after(grammarAccess.getFeatureCallPartAccess().getArrayElementAccessParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFeatureCallPartAccess().getOperationCallParserRuleCall_2()); }
	ruleOperationCall
{ after(grammarAccess.getFeatureCallPartAccess().getOperationCallParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getFeatureCallPartAccess().getIterationCallParserRuleCall_3()); }
	ruleIterationCall
{ after(grammarAccess.getFeatureCallPartAccess().getIterationCallParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureAccess__NameAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccessAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID
{ after(grammarAccess.getFeatureAccessAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getFeatureAccessAccess().getNameUnitKeyword_1_0_1()); }

	'unit' 

{ after(grammarAccess.getFeatureAccessAccess().getNameUnitKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscript__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArraySubscriptAccess().getSliceAssignment_0()); }
(rule__ArraySubscript__SliceAssignment_0)
{ after(grammarAccess.getArraySubscriptAccess().getSliceAssignment_0()); }
)

    |(
{ before(grammarAccess.getArraySubscriptAccess().getExpressionAssignment_1()); }
(rule__ArraySubscript__ExpressionAssignment_1)
{ after(grammarAccess.getArraySubscriptAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getGroup_2_0()); }
(rule__ArrayConstructionOperator__Group_2_0__0)*
{ after(grammarAccess.getArrayConstructionOperatorAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getGroup_2_1()); }
(rule__ArrayConstructionOperator__Group_2_1__0)
{ after(grammarAccess.getArrayConstructionOperatorAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionNumerator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionNumeratorAccess().getOneAssignment_0()); }
(rule__UnitExpressionNumerator__OneAssignment_0)
{ after(grammarAccess.getUnitExpressionNumeratorAccess().getOneAssignment_0()); }
)

    |(
{ before(grammarAccess.getUnitExpressionNumeratorAccess().getGroup_1()); }
(rule__UnitExpressionNumerator__Group_1__0)
{ after(grammarAccess.getUnitExpressionNumeratorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionDenominator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionDenominatorAccess().getFactorsAssignment_0()); }
(rule__UnitExpressionDenominator__FactorsAssignment_0)
{ after(grammarAccess.getUnitExpressionDenominatorAccess().getFactorsAssignment_0()); }
)

    |(
{ before(grammarAccess.getUnitExpressionDenominatorAccess().getGroup_1()); }
(rule__UnitExpressionDenominator__Group_1__0)
{ after(grammarAccess.getUnitExpressionDenominatorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionStatusKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionStatusKindAccess().getInfoEnumLiteralDeclaration_0()); }
(	'info' 
)
{ after(grammarAccess.getAssertionStatusKindAccess().getInfoEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAssertionStatusKindAccess().getWarningEnumLiteralDeclaration_1()); }
(	'warning' 
)
{ after(grammarAccess.getAssertionStatusKindAccess().getWarningEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getAssertionStatusKindAccess().getErrorEnumLiteralDeclaration_2()); }
(	'error' 
)
{ after(grammarAccess.getAssertionStatusKindAccess().getErrorEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getAssertionStatusKindAccess().getFatalEnumLiteralDeclaration_3()); }
(	'fatal' 
)
{ after(grammarAccess.getAssertionStatusKindAccess().getFatalEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityOperatorAccess().getEqualToEnumLiteralDeclaration_0()); }
(	'==' 
)
{ after(grammarAccess.getEqualityOperatorAccess().getEqualToEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEqualityOperatorAccess().getNotEqualToEnumLiteralDeclaration_1()); }
(	'!=' 
)
{ after(grammarAccess.getEqualityOperatorAccess().getNotEqualToEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalOperatorAccess().getLessThanEnumLiteralDeclaration_0()); }
(	'<' 
)
{ after(grammarAccess.getRelationalOperatorAccess().getLessThanEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getLessThanOrEqualToEnumLiteralDeclaration_1()); }
(	'<=' 
)
{ after(grammarAccess.getRelationalOperatorAccess().getLessThanOrEqualToEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getGreaterThanEnumLiteralDeclaration_2()); }
(	'>' 
)
{ after(grammarAccess.getRelationalOperatorAccess().getGreaterThanEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getGreaterThanOrEqualToEnumLiteralDeclaration_3()); }
(	'>=' 
)
{ after(grammarAccess.getRelationalOperatorAccess().getGreaterThanOrEqualToEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOperatorAccess().getAdditionEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getAdditiveOperatorAccess().getAdditionEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getAdditiveOperatorAccess().getSubtractionEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getAdditiveOperatorAccess().getSubtractionEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getMultiplicationEnumLiteralDeclaration_0()); }
(	'*' 
)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getMultiplicationEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getDivisionEnumLiteralDeclaration_1()); }
(	'/' 
)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getDivisionEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getElementWiseMultiplicationEnumLiteralDeclaration_2()); }
(	'.*' 
)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getElementWiseMultiplicationEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getElementWiseDivisionEnumLiteralDeclaration_3()); }
(	'./' 
)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getElementWiseDivisionEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PowerOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerOperatorAccess().getPowerEnumLiteralDeclaration_0()); }
(	'^' 
)
{ after(grammarAccess.getPowerOperatorAccess().getPowerEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPowerOperatorAccess().getElementWisePowerEnumLiteralDeclaration_1()); }
(	'.^' 
)
{ after(grammarAccess.getPowerOperatorAccess().getElementWisePowerEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getMinusEnumLiteralDeclaration_0()); }
(	'-' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getMinusEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getUnaryOperatorAccess().getLogicalNotEnumLiteralDeclaration_1()); }
(	'!' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getLogicalNotEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanKind__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanKindAccess().getFalseEnumLiteralDeclaration_0()); }
(	'false' 
)
{ after(grammarAccess.getBooleanKindAccess().getFalseEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBooleanKindAccess().getTrueEnumLiteralDeclaration_1()); }
(	'true' 
)
{ after(grammarAccess.getBooleanKindAccess().getTrueEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__EnumerationDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group__0__Impl
	rule__EnumerationDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumerationDefinitionAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group__1__Impl
	rule__EnumerationDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getNameAssignment_1()); }
(rule__EnumerationDefinition__NameAssignment_1)
{ after(grammarAccess.getEnumerationDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group__2__Impl
	rule__EnumerationDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEnumerationDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group__3__Impl
	rule__EnumerationDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getGroup_3()); }
(rule__EnumerationDefinition__Group_3__0)?
{ after(grammarAccess.getEnumerationDefinitionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getEnumerationDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EnumerationDefinition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group_3__0__Impl
	rule__EnumerationDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getLiteralDeclarationsAssignment_3_0()); }
(rule__EnumerationDefinition__LiteralDeclarationsAssignment_3_0)
{ after(grammarAccess.getEnumerationDefinitionAccess().getLiteralDeclarationsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getGroup_3_1()); }
(rule__EnumerationDefinition__Group_3_1__0)*
{ after(grammarAccess.getEnumerationDefinitionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumerationDefinition__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group_3_1__0__Impl
	rule__EnumerationDefinition__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getEnumerationDefinitionAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinition__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getLiteralDeclarationsAssignment_3_1_1()); }
(rule__EnumerationDefinition__LiteralDeclarationsAssignment_3_1_1)
{ after(grammarAccess.getEnumerationDefinitionAccess().getLiteralDeclarationsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeAliasDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAliasDefinition__Group__0__Impl
	rule__TypeAliasDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAliasDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAliasDefinitionAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getTypeAliasDefinitionAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAliasDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAliasDefinition__Group__1__Impl
	rule__TypeAliasDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAliasDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAliasDefinitionAccess().getNameAssignment_1()); }
(rule__TypeAliasDefinition__NameAssignment_1)
{ after(grammarAccess.getTypeAliasDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAliasDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAliasDefinition__Group__2__Impl
	rule__TypeAliasDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAliasDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAliasDefinitionAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getTypeAliasDefinitionAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAliasDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAliasDefinition__Group__3__Impl
	rule__TypeAliasDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAliasDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAliasDefinitionAccess().getTypeAssignment_3()); }
(rule__TypeAliasDefinition__TypeAssignment_3)
{ after(grammarAccess.getTypeAliasDefinitionAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAliasDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAliasDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAliasDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAliasDefinitionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getTypeAliasDefinitionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RecordDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordDefinition__Group__0__Impl
	rule__RecordDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordDefinitionAccess().getRecordKeyword_0()); }

	'record' 

{ after(grammarAccess.getRecordDefinitionAccess().getRecordKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordDefinition__Group__1__Impl
	rule__RecordDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordDefinitionAccess().getNameAssignment_1()); }
(rule__RecordDefinition__NameAssignment_1)
{ after(grammarAccess.getRecordDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordDefinition__Group__2__Impl
	rule__RecordDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getRecordDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordDefinition__Group__3__Impl
	rule__RecordDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordDefinitionAccess().getFieldDeclarationsAssignment_3()); }
(rule__RecordDefinition__FieldDeclarationsAssignment_3)*
{ after(grammarAccess.getRecordDefinitionAccess().getFieldDeclarationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordDefinitionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getRecordDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RecordFieldDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldDeclaration__Group__0__Impl
	rule__RecordFieldDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDeclarationAccess().getNameAssignment_0()); }
(rule__RecordFieldDeclaration__NameAssignment_0)
{ after(grammarAccess.getRecordFieldDeclarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordFieldDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldDeclaration__Group__1__Impl
	rule__RecordFieldDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getRecordFieldDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordFieldDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldDeclaration__Group__2__Impl
	rule__RecordFieldDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDeclarationAccess().getTypeAssignment_2()); }
(rule__RecordFieldDeclaration__TypeAssignment_2)
{ after(grammarAccess.getRecordFieldDeclarationAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RecordFieldDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RecordFieldDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDeclarationAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getRecordFieldDeclarationAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__0__Impl
	rule__FunctionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getStatefulAssignment_0()); }
(rule__FunctionDefinition__StatefulAssignment_0)?
{ after(grammarAccess.getFunctionDefinitionAccess().getStatefulAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__1__Impl
	rule__FunctionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getFuncKeyword_1()); }

	'func' 

{ after(grammarAccess.getFunctionDefinitionAccess().getFuncKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__2__Impl
	rule__FunctionDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_2()); }
(rule__FunctionDefinition__NameAssignment_2)
{ after(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__3__Impl
	rule__FunctionDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_3()); }
(rule__FunctionDefinition__Group_3__0)?
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__4__Impl
	rule__FunctionDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getFunctionDefinitionAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__5__Impl
	rule__FunctionDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_5()); }
(rule__FunctionDefinition__Group_5__0)?
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__6__Impl
	rule__FunctionDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getFunctionDefinitionAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__7__Impl
	rule__FunctionDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getHyphenMinusGreaterThanSignKeyword_7()); }

	'->' 

{ after(grammarAccess.getFunctionDefinitionAccess().getHyphenMinusGreaterThanSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__8__Impl
	rule__FunctionDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getOutputParameterDeclarationsAssignment_8()); }
(rule__FunctionDefinition__OutputParameterDeclarationsAssignment_8)
{ after(grammarAccess.getFunctionDefinitionAccess().getOutputParameterDeclarationsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__9__Impl
	rule__FunctionDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_9()); }
(rule__FunctionDefinition__Group_9__0)*
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__10__Impl
	rule__FunctionDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getLeftCurlyBracketKeyword_10()); }

	'{' 

{ after(grammarAccess.getFunctionDefinitionAccess().getLeftCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__11__Impl
	rule__FunctionDefinition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getAlternatives_11()); }
(rule__FunctionDefinition__Alternatives_11)*
{ after(grammarAccess.getFunctionDefinitionAccess().getAlternatives_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getRightCurlyBracketKeyword_12()); }

	'}' 

{ after(grammarAccess.getFunctionDefinitionAccess().getRightCurlyBracketKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__FunctionDefinition__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_3__0__Impl
	rule__FunctionDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getLessThanSignKeyword_3_0()); }

	'<' 

{ after(grammarAccess.getFunctionDefinitionAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_3__1__Impl
	rule__FunctionDefinition__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getTemplateParameterDeclarationsAssignment_3_1()); }
(rule__FunctionDefinition__TemplateParameterDeclarationsAssignment_3_1)
{ after(grammarAccess.getFunctionDefinitionAccess().getTemplateParameterDeclarationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_3__2__Impl
	rule__FunctionDefinition__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_3_2()); }
(rule__FunctionDefinition__Group_3_2__0)*
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGreaterThanSignKeyword_3_3()); }

	'>' 

{ after(grammarAccess.getFunctionDefinitionAccess().getGreaterThanSignKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionDefinition__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_3_2__0__Impl
	rule__FunctionDefinition__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getTemplateParameterDeclarationsAssignment_3_2_1()); }
(rule__FunctionDefinition__TemplateParameterDeclarationsAssignment_3_2_1)
{ after(grammarAccess.getFunctionDefinitionAccess().getTemplateParameterDeclarationsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDefinition__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_5__0__Impl
	rule__FunctionDefinition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getInputParameterDeclarationsAssignment_5_0()); }
(rule__FunctionDefinition__InputParameterDeclarationsAssignment_5_0)
{ after(grammarAccess.getFunctionDefinitionAccess().getInputParameterDeclarationsAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getGroup_5_1()); }
(rule__FunctionDefinition__Group_5_1__0)*
{ after(grammarAccess.getFunctionDefinitionAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDefinition__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_5_1__0__Impl
	rule__FunctionDefinition__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getInputParameterDeclarationsAssignment_5_1_1()); }
(rule__FunctionDefinition__InputParameterDeclarationsAssignment_5_1_1)
{ after(grammarAccess.getFunctionDefinitionAccess().getInputParameterDeclarationsAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDefinition__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_9__0__Impl
	rule__FunctionDefinition__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_9_0()); }

	',' 

{ after(grammarAccess.getFunctionDefinitionAccess().getCommaKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDefinition__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDefinition__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getOutputParameterDeclarationsAssignment_9_1()); }
(rule__FunctionDefinition__OutputParameterDeclarationsAssignment_9_1)
{ after(grammarAccess.getFunctionDefinitionAccess().getOutputParameterDeclarationsAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssertionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertionStatement__Group__0__Impl
	rule__AssertionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionStatementAccess().getStaticAssignment_0()); }
(rule__AssertionStatement__StaticAssignment_0)?
{ after(grammarAccess.getAssertionStatementAccess().getStaticAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertionStatement__Group__1__Impl
	rule__AssertionStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionStatementAccess().getAssertKeyword_1()); }

	'assert' 

{ after(grammarAccess.getAssertionStatementAccess().getAssertKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertionStatement__Group__2__Impl
	rule__AssertionStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionStatementAccess().getConditionAssignment_2()); }
(rule__AssertionStatement__ConditionAssignment_2)
{ after(grammarAccess.getAssertionStatementAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertionStatement__Group__3__Impl
	rule__AssertionStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionStatementAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getAssertionStatementAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertionStatement__Group__4__Impl
	rule__AssertionStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionStatementAccess().getStatusKindAssignment_4()); }
(rule__AssertionStatement__StatusKindAssignment_4)
{ after(grammarAccess.getAssertionStatementAccess().getStatusKindAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertionStatement__Group__5__Impl
	rule__AssertionStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionStatementAccess().getMessageAssignment_5()); }
(rule__AssertionStatement__MessageAssignment_5)
{ after(grammarAccess.getAssertionStatementAccess().getMessageAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssertionStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertionStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionStatementAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getAssertionStatementAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__StateVariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateVariableDeclaration__Group__0__Impl
	rule__StateVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getVarKeyword_0()); }

	'var' 

{ after(grammarAccess.getStateVariableDeclarationAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateVariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateVariableDeclaration__Group__1__Impl
	rule__StateVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getNameAssignment_1()); }
(rule__StateVariableDeclaration__NameAssignment_1)
{ after(grammarAccess.getStateVariableDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateVariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateVariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getStateVariableDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctorDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctorDeclaration__Group__0__Impl
	rule__FunctorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getFunctorKeyword_0()); }

	'functor' 

{ after(grammarAccess.getFunctorDeclarationAccess().getFunctorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctorDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctorDeclaration__Group__1__Impl
	rule__FunctorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getNameAssignment_1()); }
(rule__FunctorDeclaration__NameAssignment_1)
{ after(grammarAccess.getFunctorDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctorDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctorDeclaration__Group__2__Impl
	rule__FunctorDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getFunctorDeclarationAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctorDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctorDeclaration__Group__3__Impl
	rule__FunctorDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getFunctionNameAssignment_3()); }
(rule__FunctorDeclaration__FunctionNameAssignment_3)
{ after(grammarAccess.getFunctorDeclarationAccess().getFunctionNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctorDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctorDeclaration__Group__4__Impl
	rule__FunctorDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getGroup_4()); }
(rule__FunctorDeclaration__Group_4__0)?
{ after(grammarAccess.getFunctorDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctorDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctorDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getFunctorDeclarationAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FunctorDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctorDeclaration__Group_4__0__Impl
	rule__FunctorDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getLessThanSignKeyword_4_0()); }

	'<' 

{ after(grammarAccess.getFunctorDeclarationAccess().getLessThanSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctorDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctorDeclaration__Group_4__1__Impl
	rule__FunctorDeclaration__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getTemplateArgumentDeclarationsAssignment_4_1()); }
(rule__FunctorDeclaration__TemplateArgumentDeclarationsAssignment_4_1)
{ after(grammarAccess.getFunctorDeclarationAccess().getTemplateArgumentDeclarationsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctorDeclaration__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctorDeclaration__Group_4__2__Impl
	rule__FunctorDeclaration__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getGroup_4_2()); }
(rule__FunctorDeclaration__Group_4_2__0)*
{ after(grammarAccess.getFunctorDeclarationAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctorDeclaration__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctorDeclaration__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getGreaterThanSignKeyword_4_3()); }

	'>' 

{ after(grammarAccess.getFunctorDeclarationAccess().getGreaterThanSignKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctorDeclaration__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctorDeclaration__Group_4_2__0__Impl
	rule__FunctorDeclaration__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getFunctorDeclarationAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctorDeclaration__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctorDeclaration__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getTemplateArgumentDeclarationsAssignment_4_2_1()); }
(rule__FunctorDeclaration__TemplateArgumentDeclarationsAssignment_4_2_1)
{ after(grammarAccess.getFunctorDeclarationAccess().getTemplateArgumentDeclarationsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EquationStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquationStatement__Group__0__Impl
	rule__EquationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationStatementAccess().getLeftHandSideAssignment_0()); }
(rule__EquationStatement__LeftHandSideAssignment_0)
{ after(grammarAccess.getEquationStatementAccess().getLeftHandSideAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EquationStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquationStatement__Group__1__Impl
	rule__EquationStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getEquationStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EquationStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquationStatement__Group__2__Impl
	rule__EquationStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationStatementAccess().getRightHandSideAssignment_2()); }
(rule__EquationStatement__RightHandSideAssignment_2)
{ after(grammarAccess.getEquationStatementAccess().getRightHandSideAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EquationStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EquationStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EquationStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationStatementAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getEquationStatementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RealTypeSpecifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTypeSpecifier__Group__0__Impl
	rule__RealTypeSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getRealTypeSpecifierAction_0()); }
(

)
{ after(grammarAccess.getRealTypeSpecifierAccess().getRealTypeSpecifierAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTypeSpecifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTypeSpecifier__Group__1__Impl
	rule__RealTypeSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getRealKeyword_1()); }

	'real' 

{ after(grammarAccess.getRealTypeSpecifierAccess().getRealKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTypeSpecifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTypeSpecifier__Group__2__Impl
	rule__RealTypeSpecifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getGroup_2()); }
(rule__RealTypeSpecifier__Group_2__0)?
{ after(grammarAccess.getRealTypeSpecifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTypeSpecifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTypeSpecifier__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getGroup_3()); }
(rule__RealTypeSpecifier__Group_3__0)?
{ after(grammarAccess.getRealTypeSpecifierAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RealTypeSpecifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTypeSpecifier__Group_2__0__Impl
	rule__RealTypeSpecifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getRealTypeSpecifierAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTypeSpecifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTypeSpecifier__Group_2__1__Impl
	rule__RealTypeSpecifier__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getUnitAssignment_2_1()); }
(rule__RealTypeSpecifier__UnitAssignment_2_1)
{ after(grammarAccess.getRealTypeSpecifierAccess().getUnitAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTypeSpecifier__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTypeSpecifier__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getRealTypeSpecifierAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RealTypeSpecifier__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTypeSpecifier__Group_3__0__Impl
	rule__RealTypeSpecifier__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getRealTypeSpecifierAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTypeSpecifier__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTypeSpecifier__Group_3__1__Impl
	rule__RealTypeSpecifier__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getDimensionsAssignment_3_1()); }
(rule__RealTypeSpecifier__DimensionsAssignment_3_1)
{ after(grammarAccess.getRealTypeSpecifierAccess().getDimensionsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTypeSpecifier__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTypeSpecifier__Group_3__2__Impl
	rule__RealTypeSpecifier__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getGroup_3_2()); }
(rule__RealTypeSpecifier__Group_3_2__0)*
{ after(grammarAccess.getRealTypeSpecifierAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTypeSpecifier__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTypeSpecifier__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getRightSquareBracketKeyword_3_3()); }

	']' 

{ after(grammarAccess.getRealTypeSpecifierAccess().getRightSquareBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RealTypeSpecifier__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTypeSpecifier__Group_3_2__0__Impl
	rule__RealTypeSpecifier__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getRealTypeSpecifierAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealTypeSpecifier__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealTypeSpecifier__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getDimensionsAssignment_3_2_1()); }
(rule__RealTypeSpecifier__DimensionsAssignment_3_2_1)
{ after(grammarAccess.getRealTypeSpecifierAccess().getDimensionsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntegerTypeSpecifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTypeSpecifier__Group__0__Impl
	rule__IntegerTypeSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getIntegerTypeSpecifierAction_0()); }
(

)
{ after(grammarAccess.getIntegerTypeSpecifierAccess().getIntegerTypeSpecifierAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTypeSpecifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTypeSpecifier__Group__1__Impl
	rule__IntegerTypeSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getIntKeyword_1()); }

	'int' 

{ after(grammarAccess.getIntegerTypeSpecifierAccess().getIntKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTypeSpecifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTypeSpecifier__Group__2__Impl
	rule__IntegerTypeSpecifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getGroup_2()); }
(rule__IntegerTypeSpecifier__Group_2__0)?
{ after(grammarAccess.getIntegerTypeSpecifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTypeSpecifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTypeSpecifier__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getGroup_3()); }
(rule__IntegerTypeSpecifier__Group_3__0)?
{ after(grammarAccess.getIntegerTypeSpecifierAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IntegerTypeSpecifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTypeSpecifier__Group_2__0__Impl
	rule__IntegerTypeSpecifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getIntegerTypeSpecifierAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTypeSpecifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTypeSpecifier__Group_2__1__Impl
	rule__IntegerTypeSpecifier__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getUnitAssignment_2_1()); }
(rule__IntegerTypeSpecifier__UnitAssignment_2_1)
{ after(grammarAccess.getIntegerTypeSpecifierAccess().getUnitAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTypeSpecifier__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTypeSpecifier__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getIntegerTypeSpecifierAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IntegerTypeSpecifier__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTypeSpecifier__Group_3__0__Impl
	rule__IntegerTypeSpecifier__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getIntegerTypeSpecifierAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTypeSpecifier__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTypeSpecifier__Group_3__1__Impl
	rule__IntegerTypeSpecifier__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getDimensionsAssignment_3_1()); }
(rule__IntegerTypeSpecifier__DimensionsAssignment_3_1)
{ after(grammarAccess.getIntegerTypeSpecifierAccess().getDimensionsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTypeSpecifier__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTypeSpecifier__Group_3__2__Impl
	rule__IntegerTypeSpecifier__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getGroup_3_2()); }
(rule__IntegerTypeSpecifier__Group_3_2__0)*
{ after(grammarAccess.getIntegerTypeSpecifierAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTypeSpecifier__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTypeSpecifier__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getRightSquareBracketKeyword_3_3()); }

	']' 

{ after(grammarAccess.getIntegerTypeSpecifierAccess().getRightSquareBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IntegerTypeSpecifier__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTypeSpecifier__Group_3_2__0__Impl
	rule__IntegerTypeSpecifier__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getIntegerTypeSpecifierAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTypeSpecifier__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTypeSpecifier__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getDimensionsAssignment_3_2_1()); }
(rule__IntegerTypeSpecifier__DimensionsAssignment_3_2_1)
{ after(grammarAccess.getIntegerTypeSpecifierAccess().getDimensionsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComplexTypeSpecifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeSpecifier__Group__0__Impl
	rule__ComplexTypeSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getComplexTypeSpecifierAction_0()); }
(

)
{ after(grammarAccess.getComplexTypeSpecifierAccess().getComplexTypeSpecifierAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeSpecifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeSpecifier__Group__1__Impl
	rule__ComplexTypeSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getComplexKeyword_1()); }

	'complex' 

{ after(grammarAccess.getComplexTypeSpecifierAccess().getComplexKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeSpecifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeSpecifier__Group__2__Impl
	rule__ComplexTypeSpecifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getGroup_2()); }
(rule__ComplexTypeSpecifier__Group_2__0)?
{ after(grammarAccess.getComplexTypeSpecifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeSpecifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeSpecifier__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getGroup_3()); }
(rule__ComplexTypeSpecifier__Group_3__0)?
{ after(grammarAccess.getComplexTypeSpecifierAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ComplexTypeSpecifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeSpecifier__Group_2__0__Impl
	rule__ComplexTypeSpecifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getComplexTypeSpecifierAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeSpecifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeSpecifier__Group_2__1__Impl
	rule__ComplexTypeSpecifier__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getUnitAssignment_2_1()); }
(rule__ComplexTypeSpecifier__UnitAssignment_2_1)
{ after(grammarAccess.getComplexTypeSpecifierAccess().getUnitAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeSpecifier__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeSpecifier__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getComplexTypeSpecifierAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ComplexTypeSpecifier__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeSpecifier__Group_3__0__Impl
	rule__ComplexTypeSpecifier__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getComplexTypeSpecifierAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeSpecifier__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeSpecifier__Group_3__1__Impl
	rule__ComplexTypeSpecifier__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getDimensionsAssignment_3_1()); }
(rule__ComplexTypeSpecifier__DimensionsAssignment_3_1)
{ after(grammarAccess.getComplexTypeSpecifierAccess().getDimensionsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeSpecifier__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeSpecifier__Group_3__2__Impl
	rule__ComplexTypeSpecifier__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getGroup_3_2()); }
(rule__ComplexTypeSpecifier__Group_3_2__0)*
{ after(grammarAccess.getComplexTypeSpecifierAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeSpecifier__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeSpecifier__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getRightSquareBracketKeyword_3_3()); }

	']' 

{ after(grammarAccess.getComplexTypeSpecifierAccess().getRightSquareBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ComplexTypeSpecifier__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeSpecifier__Group_3_2__0__Impl
	rule__ComplexTypeSpecifier__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getComplexTypeSpecifierAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexTypeSpecifier__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ComplexTypeSpecifier__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getDimensionsAssignment_3_2_1()); }
(rule__ComplexTypeSpecifier__DimensionsAssignment_3_2_1)
{ after(grammarAccess.getComplexTypeSpecifierAccess().getDimensionsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__GaussianTypeSpecifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GaussianTypeSpecifier__Group__0__Impl
	rule__GaussianTypeSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getGaussianTypeSpecifierAction_0()); }
(

)
{ after(grammarAccess.getGaussianTypeSpecifierAccess().getGaussianTypeSpecifierAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GaussianTypeSpecifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GaussianTypeSpecifier__Group__1__Impl
	rule__GaussianTypeSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getGaussKeyword_1()); }

	'gauss' 

{ after(grammarAccess.getGaussianTypeSpecifierAccess().getGaussKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GaussianTypeSpecifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GaussianTypeSpecifier__Group__2__Impl
	rule__GaussianTypeSpecifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getGroup_2()); }
(rule__GaussianTypeSpecifier__Group_2__0)?
{ after(grammarAccess.getGaussianTypeSpecifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GaussianTypeSpecifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GaussianTypeSpecifier__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getGroup_3()); }
(rule__GaussianTypeSpecifier__Group_3__0)?
{ after(grammarAccess.getGaussianTypeSpecifierAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GaussianTypeSpecifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GaussianTypeSpecifier__Group_2__0__Impl
	rule__GaussianTypeSpecifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getGaussianTypeSpecifierAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GaussianTypeSpecifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GaussianTypeSpecifier__Group_2__1__Impl
	rule__GaussianTypeSpecifier__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getUnitAssignment_2_1()); }
(rule__GaussianTypeSpecifier__UnitAssignment_2_1)
{ after(grammarAccess.getGaussianTypeSpecifierAccess().getUnitAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GaussianTypeSpecifier__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GaussianTypeSpecifier__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getGaussianTypeSpecifierAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GaussianTypeSpecifier__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GaussianTypeSpecifier__Group_3__0__Impl
	rule__GaussianTypeSpecifier__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getGaussianTypeSpecifierAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GaussianTypeSpecifier__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GaussianTypeSpecifier__Group_3__1__Impl
	rule__GaussianTypeSpecifier__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getDimensionsAssignment_3_1()); }
(rule__GaussianTypeSpecifier__DimensionsAssignment_3_1)
{ after(grammarAccess.getGaussianTypeSpecifierAccess().getDimensionsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GaussianTypeSpecifier__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GaussianTypeSpecifier__Group_3__2__Impl
	rule__GaussianTypeSpecifier__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getGroup_3_2()); }
(rule__GaussianTypeSpecifier__Group_3_2__0)*
{ after(grammarAccess.getGaussianTypeSpecifierAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GaussianTypeSpecifier__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GaussianTypeSpecifier__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getRightSquareBracketKeyword_3_3()); }

	']' 

{ after(grammarAccess.getGaussianTypeSpecifierAccess().getRightSquareBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GaussianTypeSpecifier__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GaussianTypeSpecifier__Group_3_2__0__Impl
	rule__GaussianTypeSpecifier__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getGaussianTypeSpecifierAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GaussianTypeSpecifier__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GaussianTypeSpecifier__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getDimensionsAssignment_3_2_1()); }
(rule__GaussianTypeSpecifier__DimensionsAssignment_3_2_1)
{ after(grammarAccess.getGaussianTypeSpecifierAccess().getDimensionsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanTypeSpecifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanTypeSpecifier__Group__0__Impl
	rule__BooleanTypeSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeSpecifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanTypeSpecifierAccess().getBooleanTypeSpecifierAction_0()); }
(

)
{ after(grammarAccess.getBooleanTypeSpecifierAccess().getBooleanTypeSpecifierAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanTypeSpecifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanTypeSpecifier__Group__1__Impl
	rule__BooleanTypeSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeSpecifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanTypeSpecifierAccess().getBoolKeyword_1()); }

	'bool' 

{ after(grammarAccess.getBooleanTypeSpecifierAccess().getBoolKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanTypeSpecifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanTypeSpecifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeSpecifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanTypeSpecifierAccess().getGroup_2()); }
(rule__BooleanTypeSpecifier__Group_2__0)?
{ after(grammarAccess.getBooleanTypeSpecifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BooleanTypeSpecifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanTypeSpecifier__Group_2__0__Impl
	rule__BooleanTypeSpecifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeSpecifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanTypeSpecifierAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getBooleanTypeSpecifierAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanTypeSpecifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanTypeSpecifier__Group_2__1__Impl
	rule__BooleanTypeSpecifier__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeSpecifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanTypeSpecifierAccess().getDimensionsAssignment_2_1()); }
(rule__BooleanTypeSpecifier__DimensionsAssignment_2_1)
{ after(grammarAccess.getBooleanTypeSpecifierAccess().getDimensionsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanTypeSpecifier__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanTypeSpecifier__Group_2__2__Impl
	rule__BooleanTypeSpecifier__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeSpecifier__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanTypeSpecifierAccess().getGroup_2_2()); }
(rule__BooleanTypeSpecifier__Group_2_2__0)*
{ after(grammarAccess.getBooleanTypeSpecifierAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanTypeSpecifier__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanTypeSpecifier__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeSpecifier__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanTypeSpecifierAccess().getRightSquareBracketKeyword_2_3()); }

	']' 

{ after(grammarAccess.getBooleanTypeSpecifierAccess().getRightSquareBracketKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BooleanTypeSpecifier__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanTypeSpecifier__Group_2_2__0__Impl
	rule__BooleanTypeSpecifier__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeSpecifier__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanTypeSpecifierAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getBooleanTypeSpecifierAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanTypeSpecifier__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanTypeSpecifier__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeSpecifier__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanTypeSpecifierAccess().getDimensionsAssignment_2_2_1()); }
(rule__BooleanTypeSpecifier__DimensionsAssignment_2_2_1)
{ after(grammarAccess.getBooleanTypeSpecifierAccess().getDimensionsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringTypeSpecifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringTypeSpecifier__Group__0__Impl
	rule__StringTypeSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTypeSpecifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeSpecifierAccess().getStringTypeSpecifierAction_0()); }
(

)
{ after(grammarAccess.getStringTypeSpecifierAccess().getStringTypeSpecifierAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringTypeSpecifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringTypeSpecifier__Group__1__Impl
	rule__StringTypeSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTypeSpecifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeSpecifierAccess().getStringKeyword_1()); }

	'string' 

{ after(grammarAccess.getStringTypeSpecifierAccess().getStringKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringTypeSpecifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringTypeSpecifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTypeSpecifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeSpecifierAccess().getGroup_2()); }
(rule__StringTypeSpecifier__Group_2__0)?
{ after(grammarAccess.getStringTypeSpecifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StringTypeSpecifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringTypeSpecifier__Group_2__0__Impl
	rule__StringTypeSpecifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTypeSpecifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeSpecifierAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getStringTypeSpecifierAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringTypeSpecifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringTypeSpecifier__Group_2__1__Impl
	rule__StringTypeSpecifier__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTypeSpecifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeSpecifierAccess().getDimensionsAssignment_2_1()); }
(rule__StringTypeSpecifier__DimensionsAssignment_2_1)
{ after(grammarAccess.getStringTypeSpecifierAccess().getDimensionsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringTypeSpecifier__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringTypeSpecifier__Group_2__2__Impl
	rule__StringTypeSpecifier__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTypeSpecifier__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeSpecifierAccess().getGroup_2_2()); }
(rule__StringTypeSpecifier__Group_2_2__0)*
{ after(grammarAccess.getStringTypeSpecifierAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringTypeSpecifier__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringTypeSpecifier__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTypeSpecifier__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeSpecifierAccess().getRightSquareBracketKeyword_2_3()); }

	']' 

{ after(grammarAccess.getStringTypeSpecifierAccess().getRightSquareBracketKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StringTypeSpecifier__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringTypeSpecifier__Group_2_2__0__Impl
	rule__StringTypeSpecifier__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTypeSpecifier__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeSpecifierAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getStringTypeSpecifierAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringTypeSpecifier__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringTypeSpecifier__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTypeSpecifier__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeSpecifierAccess().getDimensionsAssignment_2_2_1()); }
(rule__StringTypeSpecifier__DimensionsAssignment_2_2_1)
{ after(grammarAccess.getStringTypeSpecifierAccess().getDimensionsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedTypeSpecifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTypeSpecifier__Group__0__Impl
	rule__NamedTypeSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeSpecifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTypeSpecifierAccess().getTypeReferenceAssignment_0()); }
(rule__NamedTypeSpecifier__TypeReferenceAssignment_0)
{ after(grammarAccess.getNamedTypeSpecifierAccess().getTypeReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTypeSpecifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTypeSpecifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeSpecifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTypeSpecifierAccess().getGroup_1()); }
(rule__NamedTypeSpecifier__Group_1__0)?
{ after(grammarAccess.getNamedTypeSpecifierAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedTypeSpecifier__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTypeSpecifier__Group_1__0__Impl
	rule__NamedTypeSpecifier__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeSpecifier__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTypeSpecifierAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getNamedTypeSpecifierAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTypeSpecifier__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTypeSpecifier__Group_1__1__Impl
	rule__NamedTypeSpecifier__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeSpecifier__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTypeSpecifierAccess().getDimensionsAssignment_1_1()); }
(rule__NamedTypeSpecifier__DimensionsAssignment_1_1)
{ after(grammarAccess.getNamedTypeSpecifierAccess().getDimensionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTypeSpecifier__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTypeSpecifier__Group_1__2__Impl
	rule__NamedTypeSpecifier__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeSpecifier__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTypeSpecifierAccess().getGroup_1_2()); }
(rule__NamedTypeSpecifier__Group_1_2__0)*
{ after(grammarAccess.getNamedTypeSpecifierAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTypeSpecifier__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTypeSpecifier__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeSpecifier__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTypeSpecifierAccess().getRightSquareBracketKeyword_1_3()); }

	']' 

{ after(grammarAccess.getNamedTypeSpecifierAccess().getRightSquareBracketKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NamedTypeSpecifier__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTypeSpecifier__Group_1_2__0__Impl
	rule__NamedTypeSpecifier__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeSpecifier__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTypeSpecifierAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getNamedTypeSpecifierAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTypeSpecifier__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTypeSpecifier__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeSpecifier__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTypeSpecifierAccess().getDimensionsAssignment_1_2_1()); }
(rule__NamedTypeSpecifier__DimensionsAssignment_1_2_1)
{ after(grammarAccess.getNamedTypeSpecifierAccess().getDimensionsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayDimensionSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDimensionSpecification__Group__0__Impl
	rule__ArrayDimensionSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensionSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDimensionSpecificationAccess().getArrayDimensionSpecificationAction_0()); }
(

)
{ after(grammarAccess.getArrayDimensionSpecificationAccess().getArrayDimensionSpecificationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayDimensionSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayDimensionSpecification__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensionSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDimensionSpecificationAccess().getSizeAssignment_1()); }
(rule__ArrayDimensionSpecification__SizeAssignment_1)?
{ after(grammarAccess.getArrayDimensionSpecificationAccess().getSizeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group__0__Impl
	rule__LetExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getLetKeyword_0()); }

	'let' 

{ after(grammarAccess.getLetExpressionAccess().getLetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group__1__Impl
	rule__LetExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getVariablesAssignment_1()); }
(rule__LetExpression__VariablesAssignment_1)
{ after(grammarAccess.getLetExpressionAccess().getVariablesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group__2__Impl
	rule__LetExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getGroup_2()); }
(rule__LetExpression__Group_2__0)*
{ after(grammarAccess.getLetExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group__3__Impl
	rule__LetExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getInKeyword_3()); }

	'in' 

{ after(grammarAccess.getLetExpressionAccess().getInKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getTargetExpressionAssignment_4()); }
(rule__LetExpression__TargetExpressionAssignment_4)
{ after(grammarAccess.getLetExpressionAccess().getTargetExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LetExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2__0__Impl
	rule__LetExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getLetExpressionAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getVariablesAssignment_2_1()); }
(rule__LetExpression__VariablesAssignment_2_1)
{ after(grammarAccess.getLetExpressionAccess().getVariablesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LetExpressionVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpressionVariable__Group__0__Impl
	rule__LetExpressionVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpressionVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionVariableAccess().getNameAssignment_0()); }
(rule__LetExpressionVariable__NameAssignment_0)
{ after(grammarAccess.getLetExpressionVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpressionVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpressionVariable__Group__1__Impl
	rule__LetExpressionVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpressionVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionVariableAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getLetExpressionVariableAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LetExpressionVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LetExpressionVariable__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpressionVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionVariableAccess().getAssignedExpressionAssignment_2()); }
(rule__LetExpressionVariable__AssignedExpressionAssignment_2)
{ after(grammarAccess.getLetExpressionVariableAccess().getAssignedExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__0__Impl
	rule__IfExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfExpressionAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__1__Impl
	rule__IfExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getConditionAssignment_1()); }
(rule__IfExpression__ConditionAssignment_1)
{ after(grammarAccess.getIfExpressionAccess().getConditionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__2__Impl
	rule__IfExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getIfExpressionAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__3__Impl
	rule__IfExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenExpressionAssignment_3()); }
(rule__IfExpression__ThenExpressionAssignment_3)
{ after(grammarAccess.getIfExpressionAccess().getThenExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__4__Impl
	rule__IfExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseKeyword_4()); }

	'else' 

{ after(grammarAccess.getIfExpressionAccess().getElseKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseExpressionAssignment_5()); }
(rule__IfExpression__ElseExpressionAssignment_5)
{ after(grammarAccess.getIfExpressionAccess().getElseExpressionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SwitchExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__0__Impl
	rule__SwitchExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getSwitchKeyword_0()); }

	'switch' 

{ after(grammarAccess.getSwitchExpressionAccess().getSwitchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__1__Impl
	rule__SwitchExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getControlExpressionAssignment_1()); }
(rule__SwitchExpression__ControlExpressionAssignment_1)
{ after(grammarAccess.getSwitchExpressionAccess().getControlExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__2__Impl
	rule__SwitchExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_2()); }
(rule__SwitchExpression__CasesAssignment_2)*
{ after(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__3__Impl
	rule__SwitchExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDefaultKeyword_3()); }

	'default' 

{ after(grammarAccess.getSwitchExpressionAccess().getDefaultKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__4__Impl
	rule__SwitchExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getSwitchExpressionAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDefaultExpressionAssignment_5()); }
(rule__SwitchExpression__DefaultExpressionAssignment_5)
{ after(grammarAccess.getSwitchExpressionAccess().getDefaultExpressionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SwitchCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group__0__Impl
	rule__SwitchCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getSwitchCaseAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group__1__Impl
	rule__SwitchCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getCaseExpressionAssignment_1()); }
(rule__SwitchCase__CaseExpressionAssignment_1)
{ after(grammarAccess.getSwitchCaseAccess().getCaseExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group__2__Impl
	rule__SwitchCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getSwitchCaseAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchCase__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getResultExpressionAssignment_3()); }
(rule__SwitchCase__ResultExpressionAssignment_3)
{ after(grammarAccess.getSwitchCaseAccess().getResultExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RangeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeExpression__Group__0__Impl
	rule__RangeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeExpressionAccess().getImpliesExpressionParserRuleCall_0()); }
	ruleImpliesExpression
{ after(grammarAccess.getRangeExpressionAccess().getImpliesExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeExpressionAccess().getGroup_1()); }
(rule__RangeExpression__Group_1__0)?
{ after(grammarAccess.getRangeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RangeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeExpression__Group_1__0__Impl
	rule__RangeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeExpressionAccess().getRangeExpressionOperandsAction_1_0()); }
(

)
{ after(grammarAccess.getRangeExpressionAccess().getRangeExpressionOperandsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeExpression__Group_1__1__Impl
	rule__RangeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeExpressionAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getRangeExpressionAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeExpression__Group_1__2__Impl
	rule__RangeExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeExpressionAccess().getOperandsAssignment_1_2()); }
(rule__RangeExpression__OperandsAssignment_1_2)
{ after(grammarAccess.getRangeExpressionAccess().getOperandsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeExpressionAccess().getGroup_1_3()); }
(rule__RangeExpression__Group_1_3__0)?
{ after(grammarAccess.getRangeExpressionAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RangeExpression__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeExpression__Group_1_3__0__Impl
	rule__RangeExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeExpressionAccess().getColonKeyword_1_3_0()); }

	':' 

{ after(grammarAccess.getRangeExpressionAccess().getColonKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RangeExpression__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RangeExpression__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeExpressionAccess().getOperandsAssignment_1_3_1()); }
(rule__RangeExpression__OperandsAssignment_1_3_1)
{ after(grammarAccess.getRangeExpressionAccess().getOperandsAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpression__Group__0__Impl
	rule__ImpliesExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExpressionAccess().getLogicalOrExpressionParserRuleCall_0()); }
	ruleLogicalOrExpression
{ after(grammarAccess.getImpliesExpressionAccess().getLogicalOrExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExpressionAccess().getGroup_1()); }
(rule__ImpliesExpression__Group_1__0)?
{ after(grammarAccess.getImpliesExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ImpliesExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpression__Group_1__0__Impl
	rule__ImpliesExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExpressionAccess().getImpliesExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getImpliesExpressionAccess().getImpliesExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpression__Group_1__1__Impl
	rule__ImpliesExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExpressionAccess().getEqualsSignGreaterThanSignKeyword_1_1()); }

	'=>' 

{ after(grammarAccess.getImpliesExpressionAccess().getEqualsSignGreaterThanSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImpliesExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImpliesExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__ImpliesExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getImpliesExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LogicalOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group__0__Impl
	rule__LogicalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
	ruleLogicalAndExpression
{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
(rule__LogicalOrExpression__Group_1__0)?
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1__0__Impl
	rule__LogicalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExpressionOperandsAction_1_0()); }
(

)
{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalOrExpressionOperandsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_1()); }
(rule__LogicalOrExpression__Group_1_1__0)
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_1()); }
(rule__LogicalOrExpression__Group_1_1__0)*
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalOrExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1_1__0__Impl
	rule__LogicalOrExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1_0()); }

	'||' 

{ after(grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getOperandsAssignment_1_1_1()); }
(rule__LogicalOrExpression__OperandsAssignment_1_1_1)
{ after(grammarAccess.getLogicalOrExpressionAccess().getOperandsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group__0__Impl
	rule__LogicalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
{ after(grammarAccess.getLogicalAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
(rule__LogicalAndExpression__Group_1__0)?
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1__0__Impl
	rule__LogicalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExpressionOperandsAction_1_0()); }
(

)
{ after(grammarAccess.getLogicalAndExpressionAccess().getLogicalAndExpressionOperandsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_1()); }
(rule__LogicalAndExpression__Group_1_1__0)
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_1()); }
(rule__LogicalAndExpression__Group_1_1__0)*
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalAndExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1_1__0__Impl
	rule__LogicalAndExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_1_0()); }

	'&&' 

{ after(grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getOperandsAssignment_1_1_1()); }
(rule__LogicalAndExpression__OperandsAssignment_1_1_1)
{ after(grammarAccess.getLogicalAndExpressionAccess().getOperandsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
{ after(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
(rule__EqualityExpression__Group_1__0)?
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__1__Impl
	rule__EqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperatorAssignment_1_1()); }
(rule__EqualityExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getEqualityExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRightOperandAssignment_1_2()); }
(rule__EqualityExpression__RightOperandAssignment_1_2)
{ after(grammarAccess.getEqualityExpressionAccess().getRightOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
{ after(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
(rule__RelationalExpression__Group_1__0)?
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getRelationalExpressionAccess().getRelationalExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getAlternatives_1_1()); }
(rule__RelationalExpression__Alternatives_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_1_0__0__Impl
	rule__RelationalExpression__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getTypeTestAssignment_1_1_0_0()); }
(rule__RelationalExpression__TypeTestAssignment_1_1_0_0)
{ after(grammarAccess.getRelationalExpressionAccess().getTypeTestAssignment_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getTypeAssignment_1_1_0_1()); }
(rule__RelationalExpression__TypeAssignment_1_1_0_1)
{ after(grammarAccess.getRelationalExpressionAccess().getTypeAssignment_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_1_1__0__Impl
	rule__RelationalExpression__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1_1_0()); }
(rule__RelationalExpression__OperatorAssignment_1_1_1_0)
{ after(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightOperandAssignment_1_1_1_1()); }
(rule__RelationalExpression__RightOperandAssignment_1_1_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getRightOperandAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
(rule__AdditiveExpression__Group_1__0)?
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getAdditiveExpressionAccess().getAdditiveExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightPartsAssignment_1_1()); }
(rule__AdditiveExpression__RightPartsAssignment_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getRightPartsAssignment_1_1()); }
)
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightPartsAssignment_1_1()); }
(rule__AdditiveExpression__RightPartsAssignment_1_1)*
{ after(grammarAccess.getAdditiveExpressionAccess().getRightPartsAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpressionPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpressionPart__Group__0__Impl
	rule__AdditiveExpressionPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionPartAccess().getOperatorAssignment_0()); }
(rule__AdditiveExpressionPart__OperatorAssignment_0)
{ after(grammarAccess.getAdditiveExpressionPartAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpressionPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpressionPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionPartAccess().getOperandAssignment_1()); }
(rule__AdditiveExpressionPart__OperandAssignment_1)
{ after(grammarAccess.getAdditiveExpressionPartAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getPowerExpressionParserRuleCall_0()); }
	rulePowerExpression
{ after(grammarAccess.getMultiplicativeExpressionAccess().getPowerExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
(rule__MultiplicativeExpression__Group_1__0)?
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftOperandAction_1_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getMultiplicativeExpressionLeftOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightPartsAssignment_1_1()); }
(rule__MultiplicativeExpression__RightPartsAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightPartsAssignment_1_1()); }
)
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightPartsAssignment_1_1()); }
(rule__MultiplicativeExpression__RightPartsAssignment_1_1)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightPartsAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpressionPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpressionPart__Group__0__Impl
	rule__MultiplicativeExpressionPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionPartAccess().getOperatorAssignment_0()); }
(rule__MultiplicativeExpressionPart__OperatorAssignment_0)
{ after(grammarAccess.getMultiplicativeExpressionPartAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpressionPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpressionPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionPartAccess().getOperandAssignment_1()); }
(rule__MultiplicativeExpressionPart__OperandAssignment_1)
{ after(grammarAccess.getMultiplicativeExpressionPartAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PowerExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowerExpression__Group__0__Impl
	rule__PowerExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
{ after(grammarAccess.getPowerExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowerExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getGroup_1()); }
(rule__PowerExpression__Group_1__0)?
{ after(grammarAccess.getPowerExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PowerExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowerExpression__Group_1__0__Impl
	rule__PowerExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getPowerExpressionOperandAction_1_0()); }
(

)
{ after(grammarAccess.getPowerExpressionAccess().getPowerExpressionOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowerExpression__Group_1__1__Impl
	rule__PowerExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getOperatorAssignment_1_1()); }
(rule__PowerExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getPowerExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PowerExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PowerExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getExponentAssignment_1_2()); }
(rule__PowerExpression__ExponentAssignment_1_2)
{ after(grammarAccess.getPowerExpressionAccess().getExponentAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__0__Impl
	rule__UnaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getUnaryExpressionAccess().getUnaryExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__1__Impl
	rule__UnaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_1_1()); }
(rule__UnaryExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperandAssignment_1_2()); }
(rule__UnaryExpression__OperandAssignment_1_2)
{ after(grammarAccess.getUnaryExpressionAccess().getOperandAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PostfixExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group__0__Impl
	rule__PostfixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getPostfixExpressionAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getGroup_1()); }
(rule__PostfixExpression__Group_1__0)?
{ after(grammarAccess.getPostfixExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_1__0__Impl
	rule__PostfixExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getPostfixExpressionOperandAction_1_0()); }
(

)
{ after(grammarAccess.getPostfixExpressionAccess().getPostfixExpressionOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getOperatorAssignment_1_1()); }
(rule__PostfixExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getPostfixExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RealLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group__0__Impl
	rule__RealLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getValueAssignment_0()); }
(rule__RealLiteral__ValueAssignment_0)
{ after(grammarAccess.getRealLiteralAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group__1__Impl
	rule__RealLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getModifierAssignment_1()); }
(rule__RealLiteral__ModifierAssignment_1)?
{ after(grammarAccess.getRealLiteralAccess().getModifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getGroup_2()); }
(rule__RealLiteral__Group_2__0)?
{ after(grammarAccess.getRealLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RealLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_2__0__Impl
	rule__RealLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getRealLiteralAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_2__1__Impl
	rule__RealLiteral__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getUnitAssignment_2_1()); }
(rule__RealLiteral__UnitAssignment_2_1)
{ after(grammarAccess.getRealLiteralAccess().getUnitAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RealLiteral__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RealLiteral__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getRealLiteralAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IntegerLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group__0__Impl
	rule__IntegerLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getValueAssignment_0()); }
(rule__IntegerLiteral__ValueAssignment_0)
{ after(grammarAccess.getIntegerLiteralAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group__1__Impl
	rule__IntegerLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getModifierAssignment_1()); }
(rule__IntegerLiteral__ModifierAssignment_1)?
{ after(grammarAccess.getIntegerLiteralAccess().getModifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getGroup_2()); }
(rule__IntegerLiteral__Group_2__0)?
{ after(grammarAccess.getIntegerLiteralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IntegerLiteral__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_2__0__Impl
	rule__IntegerLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getIntegerLiteralAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_2__1__Impl
	rule__IntegerLiteral__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getUnitAssignment_2_1()); }
(rule__IntegerLiteral__UnitAssignment_2_1)
{ after(grammarAccess.getIntegerLiteralAccess().getUnitAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerLiteral__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getIntegerLiteralAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SimpleName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleName__Group__0__Impl
	rule__SimpleName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleNameAccess().getSimpleNameAction_0()); }
(

)
{ after(grammarAccess.getSimpleNameAccess().getSimpleNameAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleNameAccess().getIdentifierAssignment_1()); }
(rule__SimpleName__IdentifierAssignment_1)
{ after(grammarAccess.getSimpleNameAccess().getIdentifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureCall__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_0__0__Impl
	rule__FeatureCall__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getCallablePrimaryExpressionParserRuleCall_0_0()); }
	ruleCallablePrimaryExpression
{ after(grammarAccess.getFeatureCallAccess().getCallablePrimaryExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getGroup_0_1()); }
(rule__FeatureCall__Group_0_1__0)?
{ after(grammarAccess.getFeatureCallAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureCall__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_0_1__0__Impl
	rule__FeatureCall__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureCallTargetAction_0_1_0()); }
(

)
{ after(grammarAccess.getFeatureCallAccess().getFeatureCallTargetAction_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFeatureCallAccess().getPartsAssignment_0_1_1()); }
(rule__FeatureCall__PartsAssignment_0_1_1)
{ after(grammarAccess.getFeatureCallAccess().getPartsAssignment_0_1_1()); }
)
(
{ before(grammarAccess.getFeatureCallAccess().getPartsAssignment_0_1_1()); }
(rule__FeatureCall__PartsAssignment_0_1_1)*
{ after(grammarAccess.getFeatureCallAccess().getPartsAssignment_0_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FeatureCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_1__0__Impl
	rule__FeatureCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getFeatureCallAction_1_0()); }
(

)
{ after(grammarAccess.getFeatureCallAccess().getFeatureCallAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_1__1__Impl
	rule__FeatureCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getTargetAssignment_1_1()); }
(rule__FeatureCall__TargetAssignment_1_1)
{ after(grammarAccess.getFeatureCallAccess().getTargetAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureCall__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getPartsAssignment_1_2()); }
(rule__FeatureCall__PartsAssignment_1_2)*
{ after(grammarAccess.getFeatureCallAccess().getPartsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FeatureAccess__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureAccess__Group__0__Impl
	rule__FeatureAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureAccess__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccessAccess().getFullStopKeyword_0()); }

	'.' 

{ after(grammarAccess.getFeatureAccessAccess().getFullStopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureAccess__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FeatureAccess__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureAccess__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccessAccess().getNameAssignment_1()); }
(rule__FeatureAccess__NameAssignment_1)
{ after(grammarAccess.getFeatureAccessAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayElementAccess__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayElementAccess__Group__0__Impl
	rule__ArrayElementAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElementAccess__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayElementAccessAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArrayElementAccessAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayElementAccess__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayElementAccess__Group__1__Impl
	rule__ArrayElementAccess__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElementAccess__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayElementAccessAccess().getSubscriptsAssignment_1()); }
(rule__ArrayElementAccess__SubscriptsAssignment_1)
{ after(grammarAccess.getArrayElementAccessAccess().getSubscriptsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayElementAccess__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayElementAccess__Group__2__Impl
	rule__ArrayElementAccess__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElementAccess__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayElementAccessAccess().getGroup_2()); }
(rule__ArrayElementAccess__Group_2__0)*
{ after(grammarAccess.getArrayElementAccessAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayElementAccess__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayElementAccess__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElementAccess__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayElementAccessAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getArrayElementAccessAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArrayElementAccess__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayElementAccess__Group_2__0__Impl
	rule__ArrayElementAccess__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElementAccess__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayElementAccessAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getArrayElementAccessAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayElementAccess__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayElementAccess__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElementAccess__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayElementAccessAccess().getSubscriptsAssignment_2_1()); }
(rule__ArrayElementAccess__SubscriptsAssignment_2_1)
{ after(grammarAccess.getArrayElementAccessAccess().getSubscriptsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group__0__Impl
	rule__OperationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getOperationCallAction_0()); }
(

)
{ after(grammarAccess.getOperationCallAccess().getOperationCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group__1__Impl
	rule__OperationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getOperationCallAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group__2__Impl
	rule__OperationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getGroup_2()); }
(rule__OperationCall__Group_2__0)?
{ after(grammarAccess.getOperationCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getOperationCallAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OperationCall__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group_2__0__Impl
	rule__OperationCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getArgumentsAssignment_2_0()); }
(rule__OperationCall__ArgumentsAssignment_2_0)
{ after(grammarAccess.getOperationCallAccess().getArgumentsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getGroup_2_1()); }
(rule__OperationCall__Group_2_1__0)*
{ after(grammarAccess.getOperationCallAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationCall__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group_2_1__0__Impl
	rule__OperationCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getOperationCallAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationCall__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getArgumentsAssignment_2_1_1()); }
(rule__OperationCall__ArgumentsAssignment_2_1_1)
{ after(grammarAccess.getOperationCallAccess().getArgumentsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IterationCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationCall__Group__0__Impl
	rule__IterationCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getIterationCallAction_0()); }
(

)
{ after(grammarAccess.getIterationCallAccess().getIterationCallAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationCall__Group__1__Impl
	rule__IterationCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIterationCallAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationCall__Group__2__Impl
	rule__IterationCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getVariablesAssignment_2()); }
(rule__IterationCall__VariablesAssignment_2)
{ after(grammarAccess.getIterationCallAccess().getVariablesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationCall__Group__3__Impl
	rule__IterationCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getGroup_3()); }
(rule__IterationCall__Group_3__0)*
{ after(grammarAccess.getIterationCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationCall__Group__4__Impl
	rule__IterationCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getGroup_4()); }
(rule__IterationCall__Group_4__0)?
{ after(grammarAccess.getIterationCallAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationCall__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationCall__Group__5__Impl
	rule__IterationCall__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getVerticalLineKeyword_5()); }

	'|' 

{ after(grammarAccess.getIterationCallAccess().getVerticalLineKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationCall__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationCall__Group__6__Impl
	rule__IterationCall__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getExpressionAssignment_6()); }
(rule__IterationCall__ExpressionAssignment_6)
{ after(grammarAccess.getIterationCallAccess().getExpressionAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationCall__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationCall__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getIterationCallAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__IterationCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationCall__Group_3__0__Impl
	rule__IterationCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getIterationCallAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getVariablesAssignment_3_1()); }
(rule__IterationCall__VariablesAssignment_3_1)
{ after(grammarAccess.getIterationCallAccess().getVariablesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IterationCall__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationCall__Group_4__0__Impl
	rule__IterationCall__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getSemicolonKeyword_4_0()); }

	';' 

{ after(grammarAccess.getIterationCallAccess().getSemicolonKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationCall__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationCall__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getAccumulatorAssignment_4_1()); }
(rule__IterationCall__AccumulatorAssignment_4_1)
{ after(grammarAccess.getIterationCallAccess().getAccumulatorAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IterationAccumulator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationAccumulator__Group__0__Impl
	rule__IterationAccumulator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationAccumulator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccumulatorAccess().getNameAssignment_0()); }
(rule__IterationAccumulator__NameAssignment_0)
{ after(grammarAccess.getIterationAccumulatorAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationAccumulator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationAccumulator__Group__1__Impl
	rule__IterationAccumulator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationAccumulator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccumulatorAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getIterationAccumulatorAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IterationAccumulator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IterationAccumulator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IterationAccumulator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccumulatorAccess().getInitializerAssignment_2()); }
(rule__IterationAccumulator__InitializerAssignment_2)
{ after(grammarAccess.getIterationAccumulatorAccess().getInitializerAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArrayConstructionOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionOperator__Group__0__Impl
	rule__ArrayConstructionOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getArrayConstructionOperatorAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayConstructionOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionOperator__Group__1__Impl
	rule__ArrayConstructionOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getExpressionsAssignment_1()); }
(rule__ArrayConstructionOperator__ExpressionsAssignment_1)
{ after(grammarAccess.getArrayConstructionOperatorAccess().getExpressionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayConstructionOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionOperator__Group__2__Impl
	rule__ArrayConstructionOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getAlternatives_2()); }
(rule__ArrayConstructionOperator__Alternatives_2)
{ after(grammarAccess.getArrayConstructionOperatorAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayConstructionOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionOperator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getArrayConstructionOperatorAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArrayConstructionOperator__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionOperator__Group_2_0__0__Impl
	rule__ArrayConstructionOperator__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getCommaKeyword_2_0_0()); }

	',' 

{ after(grammarAccess.getArrayConstructionOperatorAccess().getCommaKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayConstructionOperator__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionOperator__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getExpressionsAssignment_2_0_1()); }
(rule__ArrayConstructionOperator__ExpressionsAssignment_2_0_1)
{ after(grammarAccess.getArrayConstructionOperatorAccess().getExpressionsAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayConstructionOperator__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionOperator__Group_2_1__0__Impl
	rule__ArrayConstructionOperator__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getForKeyword_2_1_0()); }

	'for' 

{ after(grammarAccess.getArrayConstructionOperatorAccess().getForKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayConstructionOperator__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionOperator__Group_2_1__1__Impl
	rule__ArrayConstructionOperator__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getIterationClausesAssignment_2_1_1()); }
(rule__ArrayConstructionOperator__IterationClausesAssignment_2_1_1)
{ after(grammarAccess.getArrayConstructionOperatorAccess().getIterationClausesAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayConstructionOperator__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionOperator__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getGroup_2_1_2()); }
(rule__ArrayConstructionOperator__Group_2_1_2__0)*
{ after(grammarAccess.getArrayConstructionOperatorAccess().getGroup_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArrayConstructionOperator__Group_2_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionOperator__Group_2_1_2__0__Impl
	rule__ArrayConstructionOperator__Group_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__Group_2_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getCommaKeyword_2_1_2_0()); }

	',' 

{ after(grammarAccess.getArrayConstructionOperatorAccess().getCommaKeyword_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayConstructionOperator__Group_2_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionOperator__Group_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__Group_2_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getIterationClausesAssignment_2_1_2_1()); }
(rule__ArrayConstructionOperator__IterationClausesAssignment_2_1_2_1)
{ after(grammarAccess.getArrayConstructionOperatorAccess().getIterationClausesAssignment_2_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ArrayConstructionIterationClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionIterationClause__Group__0__Impl
	rule__ArrayConstructionIterationClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionIterationClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionIterationClauseAccess().getVariableNameAssignment_0()); }
(rule__ArrayConstructionIterationClause__VariableNameAssignment_0)
{ after(grammarAccess.getArrayConstructionIterationClauseAccess().getVariableNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayConstructionIterationClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionIterationClause__Group__1__Impl
	rule__ArrayConstructionIterationClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionIterationClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionIterationClauseAccess().getInKeyword_1()); }

	'in' 

{ after(grammarAccess.getArrayConstructionIterationClauseAccess().getInKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayConstructionIterationClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConstructionIterationClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionIterationClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionIterationClauseAccess().getCollectionExpressionAssignment_2()); }
(rule__ArrayConstructionIterationClause__CollectionExpressionAssignment_2)
{ after(grammarAccess.getArrayConstructionIterationClauseAccess().getCollectionExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ArrayConcatenationOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConcatenationOperator__Group__0__Impl
	rule__ArrayConcatenationOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConcatenationOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConcatenationOperatorAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArrayConcatenationOperatorAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayConcatenationOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConcatenationOperator__Group__1__Impl
	rule__ArrayConcatenationOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConcatenationOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConcatenationOperatorAccess().getRowsAssignment_1()); }
(rule__ArrayConcatenationOperator__RowsAssignment_1)
{ after(grammarAccess.getArrayConcatenationOperatorAccess().getRowsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayConcatenationOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConcatenationOperator__Group__2__Impl
	rule__ArrayConcatenationOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConcatenationOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConcatenationOperatorAccess().getGroup_2()); }
(rule__ArrayConcatenationOperator__Group_2__0)*
{ after(grammarAccess.getArrayConcatenationOperatorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayConcatenationOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConcatenationOperator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConcatenationOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConcatenationOperatorAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getArrayConcatenationOperatorAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ArrayConcatenationOperator__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConcatenationOperator__Group_2__0__Impl
	rule__ArrayConcatenationOperator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConcatenationOperator__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConcatenationOperatorAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getArrayConcatenationOperatorAccess().getSemicolonKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayConcatenationOperator__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArrayConcatenationOperator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConcatenationOperator__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConcatenationOperatorAccess().getRowsAssignment_2_1()); }
(rule__ArrayConcatenationOperator__RowsAssignment_2_1)
{ after(grammarAccess.getArrayConcatenationOperatorAccess().getRowsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group__0__Impl
	rule__ExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExpressionsAssignment_0()); }
(rule__ExpressionList__ExpressionsAssignment_0)
{ after(grammarAccess.getExpressionListAccess().getExpressionsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getGroup_1()); }
(rule__ExpressionList__Group_1__0)*
{ after(grammarAccess.getExpressionListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group_1__0__Impl
	rule__ExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getExpressionListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExpressionsAssignment_1_1()); }
(rule__ExpressionList__ExpressionsAssignment_1_1)
{ after(grammarAccess.getExpressionListAccess().getExpressionsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitConstructionOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitConstructionOperator__Group__0__Impl
	rule__UnitConstructionOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitConstructionOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitConstructionOperatorAccess().getUnitKeyword_0()); }

	'unit' 

{ after(grammarAccess.getUnitConstructionOperatorAccess().getUnitKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitConstructionOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitConstructionOperator__Group__1__Impl
	rule__UnitConstructionOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitConstructionOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitConstructionOperatorAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getUnitConstructionOperatorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitConstructionOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitConstructionOperator__Group__2__Impl
	rule__UnitConstructionOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitConstructionOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitConstructionOperatorAccess().getUnitAssignment_2()); }
(rule__UnitConstructionOperator__UnitAssignment_2)
{ after(grammarAccess.getUnitConstructionOperatorAccess().getUnitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitConstructionOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitConstructionOperator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitConstructionOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitConstructionOperatorAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getUnitConstructionOperatorAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__0__Impl
	rule__ParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__1__Impl
	rule__ParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionsAssignment_1()); }
(rule__ParenthesizedExpression__ExpressionsAssignment_1)
{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__2__Impl
	rule__ParenthesizedExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getGroup_2()); }
(rule__ParenthesizedExpression__Group_2__0)*
{ after(grammarAccess.getParenthesizedExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParenthesizedExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group_2__0__Impl
	rule__ParenthesizedExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionsAssignment_2_1()); }
(rule__ParenthesizedExpression__ExpressionsAssignment_2_1)
{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BeginExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BeginExpression__Group__0__Impl
	rule__BeginExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BeginExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeginExpressionAccess().getBeginExpressionAction_0()); }
(

)
{ after(grammarAccess.getBeginExpressionAccess().getBeginExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BeginExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BeginExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BeginExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBeginExpressionAccess().getBeginKeyword_1()); }

	'begin' 

{ after(grammarAccess.getBeginExpressionAccess().getBeginKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EndExpression__Group__0__Impl
	rule__EndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndExpressionAccess().getEndExpressionAction_0()); }
(

)
{ after(grammarAccess.getEndExpressionAccess().getEndExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndExpressionAccess().getEndKeyword_1()); }

	'end' 

{ after(grammarAccess.getEndExpressionAccess().getEndKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIdentifiersAssignment_0()); }
(rule__QualifiedName__IdentifiersAssignment_0)
{ after(grammarAccess.getQualifiedNameAccess().getIdentifiersAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIdentifiersAssignment_1_1()); }
(rule__QualifiedName__IdentifiersAssignment_1_1)
{ after(grammarAccess.getQualifiedNameAccess().getIdentifiersAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpression__Group__0__Impl
	rule__UnitExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionAccess().getUnitExpressionAction_0()); }
(

)
{ after(grammarAccess.getUnitExpressionAccess().getUnitExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionAccess().getGroup_1()); }
(rule__UnitExpression__Group_1__0)?
{ after(grammarAccess.getUnitExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpression__Group_1__0__Impl
	rule__UnitExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionAccess().getNumeratorAssignment_1_0()); }
(rule__UnitExpression__NumeratorAssignment_1_0)
{ after(grammarAccess.getUnitExpressionAccess().getNumeratorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionAccess().getGroup_1_1()); }
(rule__UnitExpression__Group_1_1__0)?
{ after(grammarAccess.getUnitExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpression__Group_1_1__0__Impl
	rule__UnitExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionAccess().getSolidusKeyword_1_1_0()); }

	'/' 

{ after(grammarAccess.getUnitExpressionAccess().getSolidusKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionAccess().getDenominatorAssignment_1_1_1()); }
(rule__UnitExpression__DenominatorAssignment_1_1_1)
{ after(grammarAccess.getUnitExpressionAccess().getDenominatorAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitExpressionNumerator__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionNumerator__Group_1__0__Impl
	rule__UnitExpressionNumerator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionNumerator__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionNumeratorAccess().getFactorsAssignment_1_0()); }
(rule__UnitExpressionNumerator__FactorsAssignment_1_0)
{ after(grammarAccess.getUnitExpressionNumeratorAccess().getFactorsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitExpressionNumerator__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionNumerator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionNumerator__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionNumeratorAccess().getGroup_1_1()); }
(rule__UnitExpressionNumerator__Group_1_1__0)*
{ after(grammarAccess.getUnitExpressionNumeratorAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitExpressionNumerator__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionNumerator__Group_1_1__0__Impl
	rule__UnitExpressionNumerator__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionNumerator__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionNumeratorAccess().getAsteriskKeyword_1_1_0()); }

	'*' 

{ after(grammarAccess.getUnitExpressionNumeratorAccess().getAsteriskKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitExpressionNumerator__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionNumerator__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionNumerator__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionNumeratorAccess().getFactorsAssignment_1_1_1()); }
(rule__UnitExpressionNumerator__FactorsAssignment_1_1_1)
{ after(grammarAccess.getUnitExpressionNumeratorAccess().getFactorsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitExpressionDenominator__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionDenominator__Group_1__0__Impl
	rule__UnitExpressionDenominator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionDenominator__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionDenominatorAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getUnitExpressionDenominatorAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitExpressionDenominator__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionDenominator__Group_1__1__Impl
	rule__UnitExpressionDenominator__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionDenominator__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionDenominatorAccess().getFactorsAssignment_1_1()); }
(rule__UnitExpressionDenominator__FactorsAssignment_1_1)
{ after(grammarAccess.getUnitExpressionDenominatorAccess().getFactorsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitExpressionDenominator__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionDenominator__Group_1__2__Impl
	rule__UnitExpressionDenominator__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionDenominator__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionDenominatorAccess().getGroup_1_2()); }
(rule__UnitExpressionDenominator__Group_1_2__0)*
{ after(grammarAccess.getUnitExpressionDenominatorAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitExpressionDenominator__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionDenominator__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionDenominator__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionDenominatorAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getUnitExpressionDenominatorAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnitExpressionDenominator__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionDenominator__Group_1_2__0__Impl
	rule__UnitExpressionDenominator__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionDenominator__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionDenominatorAccess().getAsteriskKeyword_1_2_0()); }

	'*' 

{ after(grammarAccess.getUnitExpressionDenominatorAccess().getAsteriskKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitExpressionDenominator__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionDenominator__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionDenominator__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionDenominatorAccess().getFactorsAssignment_1_2_1()); }
(rule__UnitExpressionDenominator__FactorsAssignment_1_2_1)
{ after(grammarAccess.getUnitExpressionDenominatorAccess().getFactorsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitExpressionFactor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionFactor__Group__0__Impl
	rule__UnitExpressionFactor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionFactor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionFactorAccess().getOperandAssignment_0()); }
(rule__UnitExpressionFactor__OperandAssignment_0)
{ after(grammarAccess.getUnitExpressionFactorAccess().getOperandAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitExpressionFactor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionFactor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionFactor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionFactorAccess().getGroup_1()); }
(rule__UnitExpressionFactor__Group_1__0)?
{ after(grammarAccess.getUnitExpressionFactorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitExpressionFactor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionFactor__Group_1__0__Impl
	rule__UnitExpressionFactor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionFactor__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionFactorAccess().getCircumflexAccentKeyword_1_0()); }

	'^' 

{ after(grammarAccess.getUnitExpressionFactorAccess().getCircumflexAccentKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitExpressionFactor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionFactor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionFactor__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionFactorAccess().getExponentAssignment_1_1()); }
(rule__UnitExpressionFactor__ExponentAssignment_1_1)
{ after(grammarAccess.getUnitExpressionFactorAccess().getExponentAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnitExpressionExponent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionExponent__Group__0__Impl
	rule__UnitExpressionExponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionExponent__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionExponentAccess().getNegativeAssignment_0()); }
(rule__UnitExpressionExponent__NegativeAssignment_0)?
{ after(grammarAccess.getUnitExpressionExponentAccess().getNegativeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnitExpressionExponent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnitExpressionExponent__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionExponent__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionExponentAccess().getValueAssignment_1()); }
(rule__UnitExpressionExponent__ValueAssignment_1)
{ after(grammarAccess.getUnitExpressionExponentAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Module__DefinitionsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getDefinitionsDefinitionParserRuleCall_0()); }
	ruleDefinition{ after(grammarAccess.getModuleAccess().getDefinitionsDefinitionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumerationDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__LiteralDeclarationsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getLiteralDeclarationsEnumerationLiteralDeclarationParserRuleCall_3_0_0()); }
	ruleEnumerationLiteralDeclaration{ after(grammarAccess.getEnumerationDefinitionAccess().getLiteralDeclarationsEnumerationLiteralDeclarationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__LiteralDeclarationsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getLiteralDeclarationsEnumerationLiteralDeclarationParserRuleCall_3_1_1_0()); }
	ruleEnumerationLiteralDeclaration{ after(grammarAccess.getEnumerationDefinitionAccess().getLiteralDeclarationsEnumerationLiteralDeclarationParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteralDeclaration__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralDeclarationAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getEnumerationLiteralDeclarationAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAliasDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAliasDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeAliasDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAliasDefinition__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAliasDefinitionAccess().getTypePrimitiveTypeSpecifierParserRuleCall_3_0()); }
	rulePrimitiveTypeSpecifier{ after(grammarAccess.getTypeAliasDefinitionAccess().getTypePrimitiveTypeSpecifierParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRecordDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordDefinition__FieldDeclarationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordDefinitionAccess().getFieldDeclarationsRecordFieldDeclarationParserRuleCall_3_0()); }
	ruleRecordFieldDeclaration{ after(grammarAccess.getRecordDefinitionAccess().getFieldDeclarationsRecordFieldDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDeclaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getRecordFieldDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RecordFieldDeclaration__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRecordFieldDeclarationAccess().getTypeDataTypeSpecifierParserRuleCall_2_0()); }
	ruleDataTypeSpecifier{ after(grammarAccess.getRecordFieldDeclarationAccess().getTypeDataTypeSpecifierParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__StatefulAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getStatefulStatefulKeyword_0_0()); }
(
{ before(grammarAccess.getFunctionDefinitionAccess().getStatefulStatefulKeyword_0_0()); }

	'stateful' 

{ after(grammarAccess.getFunctionDefinitionAccess().getStatefulStatefulKeyword_0_0()); }
)

{ after(grammarAccess.getFunctionDefinitionAccess().getStatefulStatefulKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__TemplateParameterDeclarationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getTemplateParameterDeclarationsParameterDeclarationParserRuleCall_3_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getFunctionDefinitionAccess().getTemplateParameterDeclarationsParameterDeclarationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__TemplateParameterDeclarationsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getTemplateParameterDeclarationsParameterDeclarationParserRuleCall_3_2_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getFunctionDefinitionAccess().getTemplateParameterDeclarationsParameterDeclarationParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__InputParameterDeclarationsAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getInputParameterDeclarationsParameterDeclarationParserRuleCall_5_0_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getFunctionDefinitionAccess().getInputParameterDeclarationsParameterDeclarationParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__InputParameterDeclarationsAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getInputParameterDeclarationsParameterDeclarationParserRuleCall_5_1_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getFunctionDefinitionAccess().getInputParameterDeclarationsParameterDeclarationParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__OutputParameterDeclarationsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getOutputParameterDeclarationsParameterDeclarationParserRuleCall_8_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getFunctionDefinitionAccess().getOutputParameterDeclarationsParameterDeclarationParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__OutputParameterDeclarationsAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getOutputParameterDeclarationsParameterDeclarationParserRuleCall_9_1_0()); }
	ruleParameterDeclaration{ after(grammarAccess.getFunctionDefinitionAccess().getOutputParameterDeclarationsParameterDeclarationParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__AssertionStatementsAssignment_11_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getAssertionStatementsAssertionStatementParserRuleCall_11_0_0()); }
	ruleAssertionStatement{ after(grammarAccess.getFunctionDefinitionAccess().getAssertionStatementsAssertionStatementParserRuleCall_11_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__FunctorDeclarationsAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getFunctorDeclarationsFunctorDeclarationParserRuleCall_11_1_0()); }
	ruleFunctorDeclaration{ after(grammarAccess.getFunctionDefinitionAccess().getFunctorDeclarationsFunctorDeclarationParserRuleCall_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__StateVariableDeclarationsAssignment_11_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getStateVariableDeclarationsStateVariableDeclarationParserRuleCall_11_2_0()); }
	ruleStateVariableDeclaration{ after(grammarAccess.getFunctionDefinitionAccess().getStateVariableDeclarationsStateVariableDeclarationParserRuleCall_11_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDefinition__EquationStatementsAssignment_11_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDefinitionAccess().getEquationStatementsEquationStatementParserRuleCall_11_3_0()); }
	ruleEquationStatement{ after(grammarAccess.getFunctionDefinitionAccess().getEquationStatementsEquationStatementParserRuleCall_11_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getParameterDeclarationAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionStatement__StaticAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionStatementAccess().getStaticStaticKeyword_0_0()); }
(
{ before(grammarAccess.getAssertionStatementAccess().getStaticStaticKeyword_0_0()); }

	'static' 

{ after(grammarAccess.getAssertionStatementAccess().getStaticStaticKeyword_0_0()); }
)

{ after(grammarAccess.getAssertionStatementAccess().getStaticStaticKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionStatement__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssertionStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionStatement__StatusKindAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionStatementAccess().getStatusKindAssertionStatusKindEnumRuleCall_4_0()); }
	ruleAssertionStatusKind{ after(grammarAccess.getAssertionStatementAccess().getStatusKindAssertionStatusKindEnumRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertionStatement__MessageAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertionStatementAccess().getMessageExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getAssertionStatementAccess().getMessageExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateVariableDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStateVariableDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFunctorDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__FunctionNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getFunctionNameQualifiedNameParserRuleCall_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getFunctorDeclarationAccess().getFunctionNameQualifiedNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__TemplateArgumentDeclarationsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getTemplateArgumentDeclarationsArgumentDeclarationParserRuleCall_4_1_0()); }
	ruleArgumentDeclaration{ after(grammarAccess.getFunctorDeclarationAccess().getTemplateArgumentDeclarationsArgumentDeclarationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctorDeclaration__TemplateArgumentDeclarationsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctorDeclarationAccess().getTemplateArgumentDeclarationsArgumentDeclarationParserRuleCall_4_2_1_0()); }
	ruleArgumentDeclaration{ after(grammarAccess.getFunctorDeclarationAccess().getTemplateArgumentDeclarationsArgumentDeclarationParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentDeclaration__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentDeclarationAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getArgumentDeclarationAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EquationStatement__LeftHandSideAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationStatementAccess().getLeftHandSideExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getEquationStatementAccess().getLeftHandSideExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EquationStatement__RightHandSideAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationStatementAccess().getRightHandSideExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getEquationStatementAccess().getRightHandSideExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__UnitAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getUnitUnitExpressionParserRuleCall_2_1_0()); }
	ruleUnitExpression{ after(grammarAccess.getRealTypeSpecifierAccess().getUnitUnitExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__DimensionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getRealTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealTypeSpecifier__DimensionsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_2_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getRealTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__UnitAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getUnitUnitExpressionParserRuleCall_2_1_0()); }
	ruleUnitExpression{ after(grammarAccess.getIntegerTypeSpecifierAccess().getUnitUnitExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__DimensionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getIntegerTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTypeSpecifier__DimensionsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_2_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getIntegerTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__UnitAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getUnitUnitExpressionParserRuleCall_2_1_0()); }
	ruleUnitExpression{ after(grammarAccess.getComplexTypeSpecifierAccess().getUnitUnitExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__DimensionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getComplexTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeSpecifier__DimensionsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_2_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getComplexTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__UnitAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getUnitUnitExpressionParserRuleCall_2_1_0()); }
	ruleUnitExpression{ after(grammarAccess.getGaussianTypeSpecifierAccess().getUnitUnitExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__DimensionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getGaussianTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GaussianTypeSpecifier__DimensionsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGaussianTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_2_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getGaussianTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeSpecifier__DimensionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_2_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getBooleanTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanTypeSpecifier__DimensionsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_2_2_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getBooleanTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringTypeSpecifier__DimensionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_2_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getStringTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringTypeSpecifier__DimensionsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_2_2_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getStringTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeSpecifier__TypeReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTypeSpecifierAccess().getTypeReferenceQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getNamedTypeSpecifierAccess().getTypeReferenceQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeSpecifier__DimensionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_1_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getNamedTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTypeSpecifier__DimensionsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_1_2_1_0()); }
	ruleArrayDimensionSpecification{ after(grammarAccess.getNamedTypeSpecifierAccess().getDimensionsArrayDimensionSpecificationParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayDimensionSpecification__SizeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayDimensionSpecificationAccess().getSizeExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getArrayDimensionSpecificationAccess().getSizeExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__VariablesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getVariablesLetExpressionVariableParserRuleCall_1_0()); }
	ruleLetExpressionVariable{ after(grammarAccess.getLetExpressionAccess().getVariablesLetExpressionVariableParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__VariablesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getVariablesLetExpressionVariableParserRuleCall_2_1_0()); }
	ruleLetExpressionVariable{ after(grammarAccess.getLetExpressionAccess().getVariablesLetExpressionVariableParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpression__TargetExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionAccess().getTargetExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getLetExpressionAccess().getTargetExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpressionVariable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getLetExpressionVariableAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LetExpressionVariable__AssignedExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLetExpressionVariableAccess().getAssignedExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getLetExpressionVariableAccess().getAssignedExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getConditionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getConditionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ThenExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getThenExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getThenExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfExpression__ElseExpressionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfExpressionAccess().getElseExpressionExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getIfExpressionAccess().getElseExpressionExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__ControlExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getControlExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getSwitchExpressionAccess().getControlExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__CasesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getCasesSwitchCaseParserRuleCall_2_0()); }
	ruleSwitchCase{ after(grammarAccess.getSwitchExpressionAccess().getCasesSwitchCaseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchExpression__DefaultExpressionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchExpressionAccess().getDefaultExpressionExpressionParserRuleCall_5_0()); }
	ruleExpression{ after(grammarAccess.getSwitchExpressionAccess().getDefaultExpressionExpressionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__CaseExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getCaseExpressionImpliesExpressionParserRuleCall_1_0()); }
	ruleImpliesExpression{ after(grammarAccess.getSwitchCaseAccess().getCaseExpressionImpliesExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__ResultExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getResultExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getSwitchCaseAccess().getResultExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__OperandsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeExpressionAccess().getOperandsImpliesExpressionParserRuleCall_1_2_0()); }
	ruleImpliesExpression{ after(grammarAccess.getRangeExpressionAccess().getOperandsImpliesExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RangeExpression__OperandsAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRangeExpressionAccess().getOperandsImpliesExpressionParserRuleCall_1_3_1_0()); }
	ruleImpliesExpression{ after(grammarAccess.getRangeExpressionAccess().getOperandsImpliesExpressionParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImpliesExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImpliesExpressionAccess().getRightOperandLogicalOrExpressionParserRuleCall_1_2_0()); }
	ruleLogicalOrExpression{ after(grammarAccess.getImpliesExpressionAccess().getRightOperandLogicalOrExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__OperandsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getOperandsLogicalAndExpressionParserRuleCall_1_1_1_0()); }
	ruleLogicalAndExpression{ after(grammarAccess.getLogicalOrExpressionAccess().getOperandsLogicalAndExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__OperandsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getOperandsEqualityExpressionParserRuleCall_1_1_1_0()); }
	ruleEqualityExpression{ after(grammarAccess.getLogicalAndExpressionAccess().getOperandsEqualityExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorEnumRuleCall_1_1_0()); }
	ruleEqualityOperator{ after(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__RightOperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getRightOperandRelationalExpressionParserRuleCall_1_2_0()); }
	ruleRelationalExpression{ after(grammarAccess.getEqualityExpressionAccess().getRightOperandRelationalExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__TypeTestAssignment_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getTypeTestIsKeyword_1_1_0_0_0()); }
(
{ before(grammarAccess.getRelationalExpressionAccess().getTypeTestIsKeyword_1_1_0_0_0()); }

	'is' 

{ after(grammarAccess.getRelationalExpressionAccess().getTypeTestIsKeyword_1_1_0_0_0()); }
)

{ after(grammarAccess.getRelationalExpressionAccess().getTypeTestIsKeyword_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__TypeAssignment_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getTypeDataTypeSpecifierParserRuleCall_1_1_0_1_0()); }
	ruleDataTypeSpecifier{ after(grammarAccess.getRelationalExpressionAccess().getTypeDataTypeSpecifierParserRuleCall_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorEnumRuleCall_1_1_1_0_0()); }
	ruleRelationalOperator{ after(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorEnumRuleCall_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__RightOperandAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRightOperandAdditiveExpressionParserRuleCall_1_1_1_1_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getRelationalExpressionAccess().getRightOperandAdditiveExpressionParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__RightPartsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getRightPartsAdditiveExpressionPartParserRuleCall_1_1_0()); }
	ruleAdditiveExpressionPart{ after(grammarAccess.getAdditiveExpressionAccess().getRightPartsAdditiveExpressionPartParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionPart__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionPartAccess().getOperatorAdditiveOperatorEnumRuleCall_0_0()); }
	ruleAdditiveOperator{ after(grammarAccess.getAdditiveExpressionPartAccess().getOperatorAdditiveOperatorEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpressionPart__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionPartAccess().getOperandMultiplicativeExpressionParserRuleCall_1_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionPartAccess().getOperandMultiplicativeExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__RightPartsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getRightPartsMultiplicativeExpressionPartParserRuleCall_1_1_0()); }
	ruleMultiplicativeExpressionPart{ after(grammarAccess.getMultiplicativeExpressionAccess().getRightPartsMultiplicativeExpressionPartParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionPart__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionPartAccess().getOperatorMultiplicativeOperatorEnumRuleCall_0_0()); }
	ruleMultiplicativeOperator{ after(grammarAccess.getMultiplicativeExpressionPartAccess().getOperatorMultiplicativeOperatorEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpressionPart__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionPartAccess().getOperandPowerExpressionParserRuleCall_1_0()); }
	rulePowerExpression{ after(grammarAccess.getMultiplicativeExpressionPartAccess().getOperandPowerExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getOperatorPowerOperatorEnumRuleCall_1_1_0()); }
	rulePowerOperator{ after(grammarAccess.getPowerExpressionAccess().getOperatorPowerOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PowerExpression__ExponentAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPowerExpressionAccess().getExponentUnaryExpressionParserRuleCall_1_2_0()); }
	ruleUnaryExpression{ after(grammarAccess.getPowerExpressionAccess().getExponentUnaryExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorEnumRuleCall_1_1_0()); }
	ruleUnaryOperator{ after(grammarAccess.getUnaryExpressionAccess().getOperatorUnaryOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__OperandAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getOperandPostfixExpressionParserRuleCall_1_2_0()); }
	rulePostfixExpression{ after(grammarAccess.getUnaryExpressionAccess().getOperandPostfixExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getOperatorPostfixOperatorEnumRuleCall_1_1_0()); }
	rulePostfixOperator{ after(grammarAccess.getPostfixExpressionAccess().getOperatorPostfixOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getValueREALTerminalRuleCall_0_0()); }
	RULE_REAL{ after(grammarAccess.getRealLiteralAccess().getValueREALTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__ModifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getModifierIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRealLiteralAccess().getModifierIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__UnitAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealLiteralAccess().getUnitUnitExpressionParserRuleCall_2_1_0()); }
	ruleUnitExpression{ after(grammarAccess.getRealLiteralAccess().getUnitUnitExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getValueINTEGERTerminalRuleCall_0_0()); }
	RULE_INTEGER{ after(grammarAccess.getIntegerLiteralAccess().getValueINTEGERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__ModifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getModifierIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getIntegerLiteralAccess().getModifierIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__UnitAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerLiteralAccess().getUnitUnitExpressionParserRuleCall_2_1_0()); }
	ruleUnitExpression{ after(grammarAccess.getIntegerLiteralAccess().getUnitUnitExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueBooleanKindEnumRuleCall_0()); }
	ruleBooleanKind{ after(grammarAccess.getBooleanLiteralAccess().getValueBooleanKindEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleName__IdentifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleNameAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSimpleNameAccess().getIdentifierIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__PartsAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getPartsFeatureCallPartParserRuleCall_0_1_1_0()); }
	ruleFeatureCallPart{ after(grammarAccess.getFeatureCallAccess().getPartsFeatureCallPartParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__TargetAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getTargetSimpleNameParserRuleCall_1_1_0()); }
	ruleSimpleName{ after(grammarAccess.getFeatureCallAccess().getTargetSimpleNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureCall__PartsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureCallAccess().getPartsFeatureCallPartParserRuleCall_1_2_0()); }
	ruleFeatureCallPart{ after(grammarAccess.getFeatureCallAccess().getPartsFeatureCallPartParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureAccess__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccessAccess().getNameAlternatives_1_0()); }
(rule__FeatureAccess__NameAlternatives_1_0)
{ after(grammarAccess.getFeatureAccessAccess().getNameAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElementAccess__SubscriptsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayElementAccessAccess().getSubscriptsArraySubscriptParserRuleCall_1_0()); }
	ruleArraySubscript{ after(grammarAccess.getArrayElementAccessAccess().getSubscriptsArraySubscriptParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayElementAccess__SubscriptsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayElementAccessAccess().getSubscriptsArraySubscriptParserRuleCall_2_1_0()); }
	ruleArraySubscript{ after(grammarAccess.getArrayElementAccessAccess().getSubscriptsArraySubscriptParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscript__SliceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArraySubscriptAccess().getSliceColonKeyword_0_0()); }
(
{ before(grammarAccess.getArraySubscriptAccess().getSliceColonKeyword_0_0()); }

	':' 

{ after(grammarAccess.getArraySubscriptAccess().getSliceColonKeyword_0_0()); }
)

{ after(grammarAccess.getArraySubscriptAccess().getSliceColonKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArraySubscript__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArraySubscriptAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getArraySubscriptAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ArgumentsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getArgumentsExpressionParserRuleCall_2_0_0()); }
	ruleExpression{ after(grammarAccess.getOperationCallAccess().getArgumentsExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationCall__ArgumentsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationCallAccess().getArgumentsExpressionParserRuleCall_2_1_1_0()); }
	ruleExpression{ after(grammarAccess.getOperationCallAccess().getArgumentsExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__VariablesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getVariablesIterationVariableParserRuleCall_2_0()); }
	ruleIterationVariable{ after(grammarAccess.getIterationCallAccess().getVariablesIterationVariableParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__VariablesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getVariablesIterationVariableParserRuleCall_3_1_0()); }
	ruleIterationVariable{ after(grammarAccess.getIterationCallAccess().getVariablesIterationVariableParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__AccumulatorAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getAccumulatorIterationAccumulatorParserRuleCall_4_1_0()); }
	ruleIterationAccumulator{ after(grammarAccess.getIterationCallAccess().getAccumulatorIterationAccumulatorParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationCall__ExpressionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationCallAccess().getExpressionExpressionParserRuleCall_6_0()); }
	ruleExpression{ after(grammarAccess.getIterationCallAccess().getExpressionExpressionParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationVariable__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationVariableAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getIterationVariableAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationAccumulator__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccumulatorAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getIterationAccumulatorAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IterationAccumulator__InitializerAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIterationAccumulatorAccess().getInitializerExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIterationAccumulatorAccess().getInitializerExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__ExpressionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getExpressionsExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getArrayConstructionOperatorAccess().getExpressionsExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__ExpressionsAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getExpressionsExpressionParserRuleCall_2_0_1_0()); }
	ruleExpression{ after(grammarAccess.getArrayConstructionOperatorAccess().getExpressionsExpressionParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__IterationClausesAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getIterationClausesArrayConstructionIterationClauseParserRuleCall_2_1_1_0()); }
	ruleArrayConstructionIterationClause{ after(grammarAccess.getArrayConstructionOperatorAccess().getIterationClausesArrayConstructionIterationClauseParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionOperator__IterationClausesAssignment_2_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionOperatorAccess().getIterationClausesArrayConstructionIterationClauseParserRuleCall_2_1_2_1_0()); }
	ruleArrayConstructionIterationClause{ after(grammarAccess.getArrayConstructionOperatorAccess().getIterationClausesArrayConstructionIterationClauseParserRuleCall_2_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionIterationClause__VariableNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionIterationClauseAccess().getVariableNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getArrayConstructionIterationClauseAccess().getVariableNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConstructionIterationClause__CollectionExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConstructionIterationClauseAccess().getCollectionExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getArrayConstructionIterationClauseAccess().getCollectionExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConcatenationOperator__RowsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConcatenationOperatorAccess().getRowsExpressionListParserRuleCall_1_0()); }
	ruleExpressionList{ after(grammarAccess.getArrayConcatenationOperatorAccess().getRowsExpressionListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayConcatenationOperator__RowsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayConcatenationOperatorAccess().getRowsExpressionListParserRuleCall_2_1_0()); }
	ruleExpressionList{ after(grammarAccess.getArrayConcatenationOperatorAccess().getRowsExpressionListParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExpressionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExpressionsExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getExpressionListAccess().getExpressionsExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionList__ExpressionsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionListAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExpressionListAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitConstructionOperator__UnitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitConstructionOperatorAccess().getUnitUnitExpressionParserRuleCall_2_0()); }
	ruleUnitExpression{ after(grammarAccess.getUnitConstructionOperatorAccess().getUnitUnitExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__ExpressionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionsExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionsExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__ExpressionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionsExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionsExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__IdentifiersAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIdentifiersIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getQualifiedNameAccess().getIdentifiersIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__IdentifiersAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIdentifiersIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getQualifiedNameAccess().getIdentifiersIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpression__NumeratorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionAccess().getNumeratorUnitExpressionNumeratorParserRuleCall_1_0_0()); }
	ruleUnitExpressionNumerator{ after(grammarAccess.getUnitExpressionAccess().getNumeratorUnitExpressionNumeratorParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpression__DenominatorAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionAccess().getDenominatorUnitExpressionDenominatorParserRuleCall_1_1_1_0()); }
	ruleUnitExpressionDenominator{ after(grammarAccess.getUnitExpressionAccess().getDenominatorUnitExpressionDenominatorParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionNumerator__OneAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionNumeratorAccess().getOneINTEGERTerminalRuleCall_0_0()); }
	RULE_INTEGER{ after(grammarAccess.getUnitExpressionNumeratorAccess().getOneINTEGERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionNumerator__FactorsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionNumeratorAccess().getFactorsUnitExpressionFactorParserRuleCall_1_0_0()); }
	ruleUnitExpressionFactor{ after(grammarAccess.getUnitExpressionNumeratorAccess().getFactorsUnitExpressionFactorParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionNumerator__FactorsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionNumeratorAccess().getFactorsUnitExpressionFactorParserRuleCall_1_1_1_0()); }
	ruleUnitExpressionFactor{ after(grammarAccess.getUnitExpressionNumeratorAccess().getFactorsUnitExpressionFactorParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionDenominator__FactorsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionDenominatorAccess().getFactorsUnitExpressionFactorParserRuleCall_0_0()); }
	ruleUnitExpressionFactor{ after(grammarAccess.getUnitExpressionDenominatorAccess().getFactorsUnitExpressionFactorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionDenominator__FactorsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionDenominatorAccess().getFactorsUnitExpressionFactorParserRuleCall_1_1_0()); }
	ruleUnitExpressionFactor{ after(grammarAccess.getUnitExpressionDenominatorAccess().getFactorsUnitExpressionFactorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionDenominator__FactorsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionDenominatorAccess().getFactorsUnitExpressionFactorParserRuleCall_1_2_1_0()); }
	ruleUnitExpressionFactor{ after(grammarAccess.getUnitExpressionDenominatorAccess().getFactorsUnitExpressionFactorParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionFactor__OperandAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionFactorAccess().getOperandIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getUnitExpressionFactorAccess().getOperandIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionFactor__ExponentAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionFactorAccess().getExponentUnitExpressionExponentParserRuleCall_1_1_0()); }
	ruleUnitExpressionExponent{ after(grammarAccess.getUnitExpressionFactorAccess().getExponentUnitExpressionExponentParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionExponent__NegativeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionExponentAccess().getNegativeHyphenMinusKeyword_0_0()); }
(
{ before(grammarAccess.getUnitExpressionExponentAccess().getNegativeHyphenMinusKeyword_0_0()); }

	'-' 

{ after(grammarAccess.getUnitExpressionExponentAccess().getNegativeHyphenMinusKeyword_0_0()); }
)

{ after(grammarAccess.getUnitExpressionExponentAccess().getNegativeHyphenMinusKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnitExpressionExponent__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitExpressionExponentAccess().getValueINTEGERTerminalRuleCall_1_0()); }
	RULE_INTEGER{ after(grammarAccess.getUnitExpressionExponentAccess().getValueINTEGERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('_'|'a'..'z'|'A'..'Z') ('0'..'9'|'_'|'a'..'z'|'A'..'Z')*;

RULE_STRING : '"' (~(('\\'|'"'))|'\\' ('\''|'"'|'?'|'\\'|'a'|'b'|'f'|'n'|'r'|'t'|'v'))* '"';

RULE_REAL : ('0'..'9')+ '.' ('0'..'9')* (('e'|'E') ('+'|'-')? ('0'..'9')+)?;

RULE_INTEGER : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


