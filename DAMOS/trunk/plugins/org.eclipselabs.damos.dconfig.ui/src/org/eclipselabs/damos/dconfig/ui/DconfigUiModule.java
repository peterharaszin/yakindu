/*
 * generated by Xtext
 */
package org.eclipselabs.damos.dconfig.ui;

import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.resource.containers.IAllContainersState;
import org.eclipse.xtext.ui.editor.syntaxcoloring.DefaultAntlrTokenToAttributeIdMapper;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.ui.editor.syntaxcoloring.ISemanticHighlightingCalculator;
import org.eclipse.xtext.ui.shared.Access;
import org.eclipselabs.damos.dconfig.ui.syntaxcoloring.DconfigHighlightingConfiguration;
import org.eclipselabs.damos.dconfig.ui.syntaxcoloring.DconfigSemanticHighlightingCalculator;
import org.eclipselabs.damos.mscript.ui.syntaxcoloring.MscriptAntlrTokenToAttributeIdMapper;

import com.google.inject.Provider;

/**
 * Use this class to register components to be used within the IDE.
 */
public class DconfigUiModule extends org.eclipselabs.damos.dconfig.ui.AbstractDconfigUiModule {
	
	public DconfigUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}
	public Class<? extends DefaultAntlrTokenToAttributeIdMapper> bindDefaultAntlrTokenToAttributeIdMapper() {
		return MscriptAntlrTokenToAttributeIdMapper.class;
	}
	
	public Class<? extends IHighlightingConfiguration> bindIHighlightingConfiguration() {
		return DconfigHighlightingConfiguration.class;
	}
	
	public Class<? extends ISemanticHighlightingCalculator> bindISemanticHighlightingCalculator() {
		return DconfigSemanticHighlightingCalculator.class;
	}
	
	@Override
	public Provider<IAllContainersState> provideIAllContainersState() {
		return Access.getWorkspaceProjectsState();
	}

}
