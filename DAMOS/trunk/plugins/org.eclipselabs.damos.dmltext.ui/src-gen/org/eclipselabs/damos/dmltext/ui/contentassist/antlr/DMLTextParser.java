/*
* generated by Xtext
*/
package org.eclipselabs.damos.dmltext.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.eclipselabs.damos.dmltext.services.DMLTextGrammarAccess;

public class DMLTextParser extends AbstractContentAssistParser {
	
	@Inject
	private DMLTextGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.eclipselabs.damos.dmltext.ui.contentassist.antlr.internal.InternalDMLTextParser createParser() {
		org.eclipselabs.damos.dmltext.ui.contentassist.antlr.internal.InternalDMLTextParser result = new org.eclipselabs.damos.dmltext.ui.contentassist.antlr.internal.InternalDMLTextParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRootAccess().getAlternatives(), "rule__Root__Alternatives");
					put(grammarAccess.getBooleanDirectFeedthroughPolicyAccess().getAlternatives_1(), "rule__BooleanDirectFeedthroughPolicy__Alternatives_1");
					put(grammarAccess.getParameterAccess().getAlternatives(), "rule__Parameter__Alternatives");
					put(grammarAccess.getUpperBoundLiteralAccess().getAlternatives(), "rule__UpperBoundLiteral__Alternatives");
					put(grammarAccess.getQualifiedNameWithWildcardAccess().getAlternatives_1(), "rule__QualifiedNameWithWildcard__Alternatives_1");
					put(grammarAccess.getDeclarationAccess().getAlternatives(), "rule__Declaration__Alternatives");
					put(grammarAccess.getDataTypeDeclarationAccess().getAlternatives(), "rule__DataTypeDeclaration__Alternatives");
					put(grammarAccess.getFunctionDeclarationAccess().getAlternatives_11(), "rule__FunctionDeclaration__Alternatives_11");
					put(grammarAccess.getDataTypeSpecifierAccess().getAlternatives(), "rule__DataTypeSpecifier__Alternatives");
					put(grammarAccess.getDataTypeSpecifierAccess().getAnonymousTypeAlternatives_0_0(), "rule__DataTypeSpecifier__AnonymousTypeAlternatives_0_0");
					put(grammarAccess.getPrimitiveTypeAccess().getAlternatives(), "rule__PrimitiveType__Alternatives");
					put(grammarAccess.getNumericTypeAccess().getAlternatives(), "rule__NumericType__Alternatives");
					put(grammarAccess.getArrayTypeAccess().getAlternatives(), "rule__ArrayType__Alternatives");
					put(grammarAccess.getArrayTypeAccess().getAlternatives_1_0_0(), "rule__ArrayType__Alternatives_1_0_0");
					put(grammarAccess.getArrayTypeAccess().getAnonymousElementTypeAlternatives_1_0_0_0_0(), "rule__ArrayType__AnonymousElementTypeAlternatives_1_0_0_0_0");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getLetExpressionAssignmentAccess().getAlternatives_0(), "rule__LetExpressionAssignment__Alternatives_0");
					put(grammarAccess.getRelationalExpressionAccess().getAlternatives_1_0(), "rule__RelationalExpression__Alternatives_1_0");
					put(grammarAccess.getUnaryExpressionAccess().getAlternatives(), "rule__UnaryExpression__Alternatives");
					put(grammarAccess.getPostfixExpressionAccess().getAlternatives_0(), "rule__PostfixExpression__Alternatives_0");
					put(grammarAccess.getMemberFeatureCallAccess().getAlternatives_1(), "rule__MemberFeatureCall__Alternatives_1");
					put(grammarAccess.getAssignableMemberFeatureCallAccess().getAlternatives_1(), "rule__AssignableMemberFeatureCall__Alternatives_1");
					put(grammarAccess.getArraySubscriptAccess().getAlternatives(), "rule__ArraySubscript__Alternatives");
					put(grammarAccess.getPrimaryExpressionAccess().getAlternatives(), "rule__PrimaryExpression__Alternatives");
					put(grammarAccess.getAssignablePrimaryExpressionAccess().getAlternatives(), "rule__AssignablePrimaryExpression__Alternatives");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getNumericLiteralAccess().getAlternatives(), "rule__NumericLiteral__Alternatives");
					put(grammarAccess.getRealDataAccess().getAlternatives_1(), "rule__RealData__Alternatives_1");
					put(grammarAccess.getRealDataAccess().getAlternatives_1_0_2(), "rule__RealData__Alternatives_1_0_2");
					put(grammarAccess.getRealDataAccess().getAlternatives_1_0_2_2_1(), "rule__RealData__Alternatives_1_0_2_2_1");
					put(grammarAccess.getRealDataAccess().getAlternatives_1_1(), "rule__RealData__Alternatives_1_1");
					put(grammarAccess.getRealDataAccess().getAlternatives_1_1_1_1(), "rule__RealData__Alternatives_1_1_1_1");
					put(grammarAccess.getBooleanLiteralAccess().getAlternatives_1(), "rule__BooleanLiteral__Alternatives_1");
					put(grammarAccess.getFeatureCallAccess().getAlternatives(), "rule__FeatureCall__Alternatives");
					put(grammarAccess.getQualifiedFeatureCallAccess().getAlternatives(), "rule__QualifiedFeatureCall__Alternatives");
					put(grammarAccess.getNegateStepExpressionAccess().getAlternatives(), "rule__NegateStepExpression__Alternatives");
					put(grammarAccess.getPrimitiveStepExpressionAccess().getAlternatives(), "rule__PrimitiveStepExpression__Alternatives");
					put(grammarAccess.getArrayConstructionOperatorAccess().getAlternatives_2(), "rule__ArrayConstructionOperator__Alternatives_2");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getUnitAccess().getAlternatives_1(), "rule__Unit__Alternatives_1");
					put(grammarAccess.getUnitNumeratorAccess().getAlternatives(), "rule__UnitNumerator__Alternatives");
					put(grammarAccess.getUnitDenominatorAccess().getAlternatives(), "rule__UnitDenominator__Alternatives");
					put(grammarAccess.getValidIntAccess().getAlternatives(), "rule__ValidInt__Alternatives");
					put(grammarAccess.getValidIDAccess().getAlternatives(), "rule__ValidID__Alternatives");
					put(grammarAccess.getTimingKindAccess().getAlternatives(), "rule__TimingKind__Alternatives");
					put(grammarAccess.getParameterVisibilityKindAccess().getAlternatives(), "rule__ParameterVisibilityKind__Alternatives");
					put(grammarAccess.getFunctionKindAccess().getAlternatives(), "rule__FunctionKind__Alternatives");
					put(grammarAccess.getAssertionStatusKindAccess().getAlternatives(), "rule__AssertionStatusKind__Alternatives");
					put(grammarAccess.getEqualityOperatorAccess().getAlternatives(), "rule__EqualityOperator__Alternatives");
					put(grammarAccess.getRelationalOperatorAccess().getAlternatives(), "rule__RelationalOperator__Alternatives");
					put(grammarAccess.getAdditiveOperatorAccess().getAlternatives(), "rule__AdditiveOperator__Alternatives");
					put(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives(), "rule__MultiplicativeOperator__Alternatives");
					put(grammarAccess.getPowerOperatorAccess().getAlternatives(), "rule__PowerOperator__Alternatives");
					put(grammarAccess.getUnaryOperatorAccess().getAlternatives(), "rule__UnaryOperator__Alternatives");
					put(grammarAccess.getMscriptBlockTypeAccess().getGroup(), "rule__MscriptBlockType__Group__0");
					put(grammarAccess.getInputDefinitionAccess().getGroup(), "rule__InputDefinition__Group__0");
					put(grammarAccess.getInputDefinitionAccess().getGroup_3(), "rule__InputDefinition__Group_3__0");
					put(grammarAccess.getInputDefinitionAccess().getGroup_3_4(), "rule__InputDefinition__Group_3_4__0");
					put(grammarAccess.getInputDefinitionAccess().getGroup_4(), "rule__InputDefinition__Group_4__0");
					put(grammarAccess.getInputDefinitionAccess().getGroup_4_1_0(), "rule__InputDefinition__Group_4_1_0__0");
					put(grammarAccess.getBooleanDirectFeedthroughPolicyAccess().getGroup(), "rule__BooleanDirectFeedthroughPolicy__Group__0");
					put(grammarAccess.getOutputDefinitionAccess().getGroup(), "rule__OutputDefinition__Group__0");
					put(grammarAccess.getOutputDefinitionAccess().getGroup_3(), "rule__OutputDefinition__Group_3__0");
					put(grammarAccess.getOutputDefinitionAccess().getGroup_3_4(), "rule__OutputDefinition__Group_3_4__0");
					put(grammarAccess.getOutputDefinitionAccess().getGroup_4(), "rule__OutputDefinition__Group_4__0");
					put(grammarAccess.getOpaqueParameterAccess().getGroup(), "rule__OpaqueParameter__Group__0");
					put(grammarAccess.getOpaqueParameterAccess().getGroup_6(), "rule__OpaqueParameter__Group_6__0");
					put(grammarAccess.getOpaqueParameterAccess().getGroup_6_3(), "rule__OpaqueParameter__Group_6_3__0");
					put(grammarAccess.getMscriptParameterAccess().getGroup(), "rule__MscriptParameter__Group__0");
					put(grammarAccess.getMscriptParameterAccess().getGroup_5(), "rule__MscriptParameter__Group_5__0");
					put(grammarAccess.getMscriptParameterAccess().getGroup_5_3(), "rule__MscriptParameter__Group_5_3__0");
					put(grammarAccess.getOpaqueParameterPredefinedValueAccess().getGroup(), "rule__OpaqueParameterPredefinedValue__Group__0");
					put(grammarAccess.getOpaqueParameterPredefinedValueAccess().getGroup_1(), "rule__OpaqueParameterPredefinedValue__Group_1__0");
					put(grammarAccess.getMscriptParameterPredefinedValueAccess().getGroup(), "rule__MscriptParameterPredefinedValue__Group__0");
					put(grammarAccess.getMscriptParameterPredefinedValueAccess().getGroup_1(), "rule__MscriptParameterPredefinedValue__Group_1__0");
					put(grammarAccess.getMscriptSystemInterfaceAccess().getGroup(), "rule__MscriptSystemInterface__Group__0");
					put(grammarAccess.getInletAccess().getGroup(), "rule__Inlet__Group__0");
					put(grammarAccess.getOutletAccess().getGroup(), "rule__Outlet__Group__0");
					put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
					put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup_1_1(), "rule__QualifiedNameWithWildcard__Group_1_1__0");
					put(grammarAccess.getModuleAccess().getGroup(), "rule__Module__Group__0");
					put(grammarAccess.getImportDeclarationAccess().getGroup(), "rule__ImportDeclaration__Group__0");
					put(grammarAccess.getEnumerationDeclarationAccess().getGroup(), "rule__EnumerationDeclaration__Group__0");
					put(grammarAccess.getEnumerationDeclarationAccess().getGroup_3(), "rule__EnumerationDeclaration__Group_3__0");
					put(grammarAccess.getEnumerationDeclarationAccess().getGroup_3_1(), "rule__EnumerationDeclaration__Group_3_1__0");
					put(grammarAccess.getTypedefDeclarationAccess().getGroup(), "rule__TypedefDeclaration__Group__0");
					put(grammarAccess.getStructDeclarationAccess().getGroup(), "rule__StructDeclaration__Group__0");
					put(grammarAccess.getStructDeclarationAccess().getGroup_4(), "rule__StructDeclaration__Group_4__0");
					put(grammarAccess.getFunctionDeclarationAccess().getGroup(), "rule__FunctionDeclaration__Group__0");
					put(grammarAccess.getFunctionDeclarationAccess().getGroup_3(), "rule__FunctionDeclaration__Group_3__0");
					put(grammarAccess.getFunctionDeclarationAccess().getGroup_3_2(), "rule__FunctionDeclaration__Group_3_2__0");
					put(grammarAccess.getFunctionDeclarationAccess().getGroup_5(), "rule__FunctionDeclaration__Group_5__0");
					put(grammarAccess.getFunctionDeclarationAccess().getGroup_5_1(), "rule__FunctionDeclaration__Group_5_1__0");
					put(grammarAccess.getFunctionDeclarationAccess().getGroup_9(), "rule__FunctionDeclaration__Group_9__0");
					put(grammarAccess.getCheckAccess().getGroup(), "rule__Check__Group__0");
					put(grammarAccess.getCheckAccess().getGroup_1(), "rule__Check__Group_1__0");
					put(grammarAccess.getCheckAccess().getGroup_1_2(), "rule__Check__Group_1_2__0");
					put(grammarAccess.getCheckAccess().getGroup_3(), "rule__Check__Group_3__0");
					put(grammarAccess.getCheckAccess().getGroup_3_1(), "rule__Check__Group_3_1__0");
					put(grammarAccess.getCheckAccess().getGroup_7(), "rule__Check__Group_7__0");
					put(grammarAccess.getAssertionAccess().getGroup(), "rule__Assertion__Group__0");
					put(grammarAccess.getStateVariableDeclarationAccess().getGroup(), "rule__StateVariableDeclaration__Group__0");
					put(grammarAccess.getConstantDeclarationAccess().getGroup(), "rule__ConstantDeclaration__Group__0");
					put(grammarAccess.getFunctionObjectDeclarationAccess().getGroup(), "rule__FunctionObjectDeclaration__Group__0");
					put(grammarAccess.getFunctionObjectDeclarationAccess().getGroup_2(), "rule__FunctionObjectDeclaration__Group_2__0");
					put(grammarAccess.getFunctionObjectDeclarationAccess().getGroup_2_2(), "rule__FunctionObjectDeclaration__Group_2_2__0");
					put(grammarAccess.getEquationAccess().getGroup(), "rule__Equation__Group__0");
					put(grammarAccess.getRealTypeAccess().getGroup(), "rule__RealType__Group__0");
					put(grammarAccess.getIntegerTypeAccess().getGroup(), "rule__IntegerType__Group__0");
					put(grammarAccess.getComplexTypeAccess().getGroup(), "rule__ComplexType__Group__0");
					put(grammarAccess.getGaussianTypeAccess().getGroup(), "rule__GaussianType__Group__0");
					put(grammarAccess.getBooleanTypeAccess().getGroup(), "rule__BooleanType__Group__0");
					put(grammarAccess.getStringTypeAccess().getGroup(), "rule__StringType__Group__0");
					put(grammarAccess.getArrayTypeAccess().getGroup_1(), "rule__ArrayType__Group_1__0");
					put(grammarAccess.getArrayTypeAccess().getGroup_1_0(), "rule__ArrayType__Group_1_0__0");
					put(grammarAccess.getArrayTypeAccess().getGroup_1_3(), "rule__ArrayType__Group_1_3__0");
					put(grammarAccess.getTensorTypeAccess().getGroup(), "rule__TensorType__Group__0");
					put(grammarAccess.getTensorTypeAccess().getGroup_3(), "rule__TensorType__Group_3__0");
					put(grammarAccess.getArrayDimensionAccess().getGroup(), "rule__ArrayDimension__Group__0");
					put(grammarAccess.getStructTypeAccess().getGroup(), "rule__StructType__Group__0");
					put(grammarAccess.getStructTypeAccess().getGroup_3(), "rule__StructType__Group_3__0");
					put(grammarAccess.getStructMemberAccess().getGroup(), "rule__StructMember__Group__0");
					put(grammarAccess.getLetExpressionAccess().getGroup(), "rule__LetExpression__Group__0");
					put(grammarAccess.getLetExpressionAccess().getGroup_2(), "rule__LetExpression__Group_2__0");
					put(grammarAccess.getLetExpressionAssignmentAccess().getGroup(), "rule__LetExpressionAssignment__Group__0");
					put(grammarAccess.getLetExpressionAssignmentAccess().getGroup_0_1(), "rule__LetExpressionAssignment__Group_0_1__0");
					put(grammarAccess.getLetExpressionAssignmentAccess().getGroup_0_1_2(), "rule__LetExpressionAssignment__Group_0_1_2__0");
					put(grammarAccess.getIfExpressionAccess().getGroup(), "rule__IfExpression__Group__0");
					put(grammarAccess.getSwitchExpressionAccess().getGroup(), "rule__SwitchExpression__Group__0");
					put(grammarAccess.getSwitchCaseAccess().getGroup(), "rule__SwitchCase__Group__0");
					put(grammarAccess.getRangeExpressionAccess().getGroup(), "rule__RangeExpression__Group__0");
					put(grammarAccess.getRangeExpressionAccess().getGroup_1(), "rule__RangeExpression__Group_1__0");
					put(grammarAccess.getRangeExpressionAccess().getGroup_1_3(), "rule__RangeExpression__Group_1_3__0");
					put(grammarAccess.getImpliesExpressionAccess().getGroup(), "rule__ImpliesExpression__Group__0");
					put(grammarAccess.getImpliesExpressionAccess().getGroup_1(), "rule__ImpliesExpression__Group_1__0");
					put(grammarAccess.getLogicalOrExpressionAccess().getGroup(), "rule__LogicalOrExpression__Group__0");
					put(grammarAccess.getLogicalOrExpressionAccess().getGroup_1(), "rule__LogicalOrExpression__Group_1__0");
					put(grammarAccess.getLogicalAndExpressionAccess().getGroup(), "rule__LogicalAndExpression__Group__0");
					put(grammarAccess.getLogicalAndExpressionAccess().getGroup_1(), "rule__LogicalAndExpression__Group_1__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup(), "rule__EqualityExpression__Group__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup_1(), "rule__EqualityExpression__Group_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1(), "rule__RelationalExpression__Group_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0(), "rule__RelationalExpression__Group_1_0_0__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_1(), "rule__RelationalExpression__Group_1_0_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
					put(grammarAccess.getPowerExpressionAccess().getGroup(), "rule__PowerExpression__Group__0");
					put(grammarAccess.getPowerExpressionAccess().getGroup_1(), "rule__PowerExpression__Group_1__0");
					put(grammarAccess.getUnaryExpressionAccess().getGroup_1(), "rule__UnaryExpression__Group_1__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup(), "rule__PostfixExpression__Group__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup_1(), "rule__PostfixExpression__Group_1__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup(), "rule__MemberFeatureCall__Group__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0(), "rule__MemberFeatureCall__Group_1_0__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_0_3(), "rule__MemberFeatureCall__Group_1_0_3__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_1(), "rule__MemberFeatureCall__Group_1_1__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2(), "rule__MemberFeatureCall__Group_1_2__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2_4(), "rule__MemberFeatureCall__Group_1_2_4__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_2_4_1(), "rule__MemberFeatureCall__Group_1_2_4_1__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3(), "rule__MemberFeatureCall__Group_1_3__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3_5(), "rule__MemberFeatureCall__Group_1_3_5__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3_6(), "rule__MemberFeatureCall__Group_1_3_6__0");
					put(grammarAccess.getMemberFeatureCallAccess().getGroup_1_3_7(), "rule__MemberFeatureCall__Group_1_3_7__0");
					put(grammarAccess.getAssignableMemberFeatureCallAccess().getGroup(), "rule__AssignableMemberFeatureCall__Group__0");
					put(grammarAccess.getAssignableMemberFeatureCallAccess().getGroup_1_0(), "rule__AssignableMemberFeatureCall__Group_1_0__0");
					put(grammarAccess.getAssignableMemberFeatureCallAccess().getGroup_1_0_3(), "rule__AssignableMemberFeatureCall__Group_1_0_3__0");
					put(grammarAccess.getAssignableMemberFeatureCallAccess().getGroup_1_1(), "rule__AssignableMemberFeatureCall__Group_1_1__0");
					put(grammarAccess.getIterationAccumulatorAccess().getGroup(), "rule__IterationAccumulator__Group__0");
					put(grammarAccess.getRealLiteralAccess().getGroup(), "rule__RealLiteral__Group__0");
					put(grammarAccess.getRealDataAccess().getGroup(), "rule__RealData__Group__0");
					put(grammarAccess.getRealDataAccess().getGroup_1_0(), "rule__RealData__Group_1_0__0");
					put(grammarAccess.getRealDataAccess().getGroup_1_0_2_2(), "rule__RealData__Group_1_0_2_2__0");
					put(grammarAccess.getRealDataAccess().getGroup_1_1_1(), "rule__RealData__Group_1_1_1__0");
					put(grammarAccess.getIntegerLiteralAccess().getGroup(), "rule__IntegerLiteral__Group__0");
					put(grammarAccess.getIntegerDataAccess().getGroup(), "rule__IntegerData__Group__0");
					put(grammarAccess.getBooleanLiteralAccess().getGroup(), "rule__BooleanLiteral__Group__0");
					put(grammarAccess.getVariableReferenceAccess().getGroup(), "rule__VariableReference__Group__0");
					put(grammarAccess.getVariableReferenceAccess().getGroup_2(), "rule__VariableReference__Group_2__0");
					put(grammarAccess.getFunctionCallAccess().getGroup(), "rule__FunctionCall__Group__0");
					put(grammarAccess.getFunctionCallAccess().getGroup_3(), "rule__FunctionCall__Group_3__0");
					put(grammarAccess.getFunctionCallAccess().getGroup_3_1(), "rule__FunctionCall__Group_3_1__0");
					put(grammarAccess.getQualifiedVariableReferenceAccess().getGroup(), "rule__QualifiedVariableReference__Group__0");
					put(grammarAccess.getQualifiedFunctionCallAccess().getGroup(), "rule__QualifiedFunctionCall__Group__0");
					put(grammarAccess.getQualifiedFunctionCallAccess().getGroup_4(), "rule__QualifiedFunctionCall__Group_4__0");
					put(grammarAccess.getQualifiedFunctionCallAccess().getGroup_4_1(), "rule__QualifiedFunctionCall__Group_4_1__0");
					put(grammarAccess.getRangeStepExpressionAccess().getGroup(), "rule__RangeStepExpression__Group__0");
					put(grammarAccess.getRangeStepExpressionAccess().getGroup_1(), "rule__RangeStepExpression__Group_1__0");
					put(grammarAccess.getAdditiveStepExpressionAccess().getGroup(), "rule__AdditiveStepExpression__Group__0");
					put(grammarAccess.getAdditiveStepExpressionAccess().getGroup_1(), "rule__AdditiveStepExpression__Group_1__0");
					put(grammarAccess.getNegateStepExpressionAccess().getGroup_1(), "rule__NegateStepExpression__Group_1__0");
					put(grammarAccess.getStepNAccess().getGroup(), "rule__StepN__Group__0");
					put(grammarAccess.getArrayConstructionOperatorAccess().getGroup(), "rule__ArrayConstructionOperator__Group__0");
					put(grammarAccess.getArrayConstructionOperatorAccess().getGroup_2_0(), "rule__ArrayConstructionOperator__Group_2_0__0");
					put(grammarAccess.getArrayConstructionOperatorAccess().getGroup_2_1(), "rule__ArrayConstructionOperator__Group_2_1__0");
					put(grammarAccess.getArrayConstructionOperatorAccess().getGroup_2_1_2(), "rule__ArrayConstructionOperator__Group_2_1_2__0");
					put(grammarAccess.getArrayConstructionIterationClauseAccess().getGroup(), "rule__ArrayConstructionIterationClause__Group__0");
					put(grammarAccess.getArrayConcatenationOperatorAccess().getGroup(), "rule__ArrayConcatenationOperator__Group__0");
					put(grammarAccess.getArrayConcatenationOperatorAccess().getGroup_2(), "rule__ArrayConcatenationOperator__Group_2__0");
					put(grammarAccess.getExpressionListAccess().getGroup(), "rule__ExpressionList__Group__0");
					put(grammarAccess.getExpressionListAccess().getGroup_1(), "rule__ExpressionList__Group_1__0");
					put(grammarAccess.getStructConstructionOperatorAccess().getGroup(), "rule__StructConstructionOperator__Group__0");
					put(grammarAccess.getStructConstructionOperatorAccess().getGroup_2(), "rule__StructConstructionOperator__Group_2__0");
					put(grammarAccess.getStructConstructionMemberAccess().getGroup(), "rule__StructConstructionMember__Group__0");
					put(grammarAccess.getUnitConstructionOperatorAccess().getGroup(), "rule__UnitConstructionOperator__Group__0");
					put(grammarAccess.getParenthesizedExpressionAccess().getGroup(), "rule__ParenthesizedExpression__Group__0");
					put(grammarAccess.getParenthesizedExpressionAccess().getGroup_2(), "rule__ParenthesizedExpression__Group_2__0");
					put(grammarAccess.getEndExpressionAccess().getGroup(), "rule__EndExpression__Group__0");
					put(grammarAccess.getAlgorithmExpressionAccess().getGroup(), "rule__AlgorithmExpression__Group__0");
					put(grammarAccess.getCompoundAccess().getGroup(), "rule__Compound__Group__0");
					put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
					put(grammarAccess.getLocalVariableDeclarationAccess().getGroup(), "rule__LocalVariableDeclaration__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup(), "rule__IfStatement__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup_5(), "rule__IfStatement__Group_5__0");
					put(grammarAccess.getWhileStatementAccess().getGroup(), "rule__WhileStatement__Group__0");
					put(grammarAccess.getForStatementAccess().getGroup(), "rule__ForStatement__Group__0");
					put(grammarAccess.getDoWhileStatementAccess().getGroup(), "rule__DoWhileStatement__Group__0");
					put(grammarAccess.getContinueStatementAccess().getGroup(), "rule__ContinueStatement__Group__0");
					put(grammarAccess.getBreakStatementAccess().getGroup(), "rule__BreakStatement__Group__0");
					put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
					put(grammarAccess.getUnitAccess().getGroup(), "rule__Unit__Group__0");
					put(grammarAccess.getUnitAccess().getGroup_1_0(), "rule__Unit__Group_1_0__0");
					put(grammarAccess.getUnitAccess().getGroup_1_1(), "rule__Unit__Group_1_1__0");
					put(grammarAccess.getUnitAccess().getGroup_1_1_2(), "rule__Unit__Group_1_1_2__0");
					put(grammarAccess.getExplicitUnitAccess().getGroup(), "rule__ExplicitUnit__Group__0");
					put(grammarAccess.getExplicitUnitAccess().getGroup_2(), "rule__ExplicitUnit__Group_2__0");
					put(grammarAccess.getUnitNumeratorAccess().getGroup_0(), "rule__UnitNumerator__Group_0__0");
					put(grammarAccess.getUnitNumeratorAccess().getGroup_1(), "rule__UnitNumerator__Group_1__0");
					put(grammarAccess.getUnitNumeratorAccess().getGroup_1_1(), "rule__UnitNumerator__Group_1_1__0");
					put(grammarAccess.getUnitDenominatorAccess().getGroup_1(), "rule__UnitDenominator__Group_1__0");
					put(grammarAccess.getUnitDenominatorAccess().getGroup_1_2(), "rule__UnitDenominator__Group_1_2__0");
					put(grammarAccess.getUnitFactorAccess().getGroup(), "rule__UnitFactor__Group__0");
					put(grammarAccess.getUnitFactorAccess().getGroup_1(), "rule__UnitFactor__Group_1__0");
					put(grammarAccess.getUnitExponentAccess().getGroup(), "rule__UnitExponent__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getRootAccess().getBlockTypesAssignment_0(), "rule__Root__BlockTypesAssignment_0");
					put(grammarAccess.getRootAccess().getSystemInterfacesAssignment_1(), "rule__Root__SystemInterfacesAssignment_1");
					put(grammarAccess.getMscriptBlockTypeAccess().getPackageNameAssignment_1(), "rule__MscriptBlockType__PackageNameAssignment_1");
					put(grammarAccess.getMscriptBlockTypeAccess().getImportDeclarationsAssignment_2(), "rule__MscriptBlockType__ImportDeclarationsAssignment_2");
					put(grammarAccess.getMscriptBlockTypeAccess().getTimingAssignment_3_0(), "rule__MscriptBlockType__TimingAssignment_3_0");
					put(grammarAccess.getMscriptBlockTypeAccess().getBoundaryAssignment_3_1(), "rule__MscriptBlockType__BoundaryAssignment_3_1");
					put(grammarAccess.getMscriptBlockTypeAccess().getNameAssignment_5(), "rule__MscriptBlockType__NameAssignment_5");
					put(grammarAccess.getMscriptBlockTypeAccess().getInputDefinitionsAssignment_7(), "rule__MscriptBlockType__InputDefinitionsAssignment_7");
					put(grammarAccess.getMscriptBlockTypeAccess().getOutputDefinitionsAssignment_8(), "rule__MscriptBlockType__OutputDefinitionsAssignment_8");
					put(grammarAccess.getMscriptBlockTypeAccess().getParametersAssignment_9(), "rule__MscriptBlockType__ParametersAssignment_9");
					put(grammarAccess.getMscriptBlockTypeAccess().getDeclarationsAssignment_10(), "rule__MscriptBlockType__DeclarationsAssignment_10");
					put(grammarAccess.getInputDefinitionAccess().getSocketAssignment_0_0(), "rule__InputDefinition__SocketAssignment_0_0");
					put(grammarAccess.getInputDefinitionAccess().getTestPointAssignment_0_1(), "rule__InputDefinition__TestPointAssignment_0_1");
					put(grammarAccess.getInputDefinitionAccess().getNameAssignment_2(), "rule__InputDefinition__NameAssignment_2");
					put(grammarAccess.getInputDefinitionAccess().getMinimumPortCountAssignment_3_1(), "rule__InputDefinition__MinimumPortCountAssignment_3_1");
					put(grammarAccess.getInputDefinitionAccess().getMaximumPortCountAssignment_3_3(), "rule__InputDefinition__MaximumPortCountAssignment_3_3");
					put(grammarAccess.getInputDefinitionAccess().getDefaultPortCountAssignment_3_4_1(), "rule__InputDefinition__DefaultPortCountAssignment_3_4_1");
					put(grammarAccess.getInputDefinitionAccess().getDirectFeedthroughPolicyAssignment_4_1_0_1(), "rule__InputDefinition__DirectFeedthroughPolicyAssignment_4_1_0_1");
					put(grammarAccess.getInputDefinitionAccess().getParametersAssignment_4_1_1(), "rule__InputDefinition__ParametersAssignment_4_1_1");
					put(grammarAccess.getBooleanDirectFeedthroughPolicyAccess().getDirectFeedthroughAssignment_1_0(), "rule__BooleanDirectFeedthroughPolicy__DirectFeedthroughAssignment_1_0");
					put(grammarAccess.getOutputDefinitionAccess().getSocketAssignment_0_0(), "rule__OutputDefinition__SocketAssignment_0_0");
					put(grammarAccess.getOutputDefinitionAccess().getTestPointAssignment_0_1(), "rule__OutputDefinition__TestPointAssignment_0_1");
					put(grammarAccess.getOutputDefinitionAccess().getNameAssignment_2(), "rule__OutputDefinition__NameAssignment_2");
					put(grammarAccess.getOutputDefinitionAccess().getMinimumPortCountAssignment_3_1(), "rule__OutputDefinition__MinimumPortCountAssignment_3_1");
					put(grammarAccess.getOutputDefinitionAccess().getMaximumPortCountAssignment_3_3(), "rule__OutputDefinition__MaximumPortCountAssignment_3_3");
					put(grammarAccess.getOutputDefinitionAccess().getDefaultPortCountAssignment_3_4_1(), "rule__OutputDefinition__DefaultPortCountAssignment_3_4_1");
					put(grammarAccess.getOutputDefinitionAccess().getParametersAssignment_4_1(), "rule__OutputDefinition__ParametersAssignment_4_1");
					put(grammarAccess.getOpaqueParameterAccess().getVisibilityAssignment_0(), "rule__OpaqueParameter__VisibilityAssignment_0");
					put(grammarAccess.getOpaqueParameterAccess().getDataTypeAssignment_1(), "rule__OpaqueParameter__DataTypeAssignment_1");
					put(grammarAccess.getOpaqueParameterAccess().getNameAssignment_3(), "rule__OpaqueParameter__NameAssignment_3");
					put(grammarAccess.getOpaqueParameterAccess().getOwnedDefaultValueAssignment_5(), "rule__OpaqueParameter__OwnedDefaultValueAssignment_5");
					put(grammarAccess.getOpaqueParameterAccess().getPredefinedValuesAssignment_6_2(), "rule__OpaqueParameter__PredefinedValuesAssignment_6_2");
					put(grammarAccess.getOpaqueParameterAccess().getPredefinedValuesAssignment_6_3_1(), "rule__OpaqueParameter__PredefinedValuesAssignment_6_3_1");
					put(grammarAccess.getMscriptParameterAccess().getVisibilityAssignment_0(), "rule__MscriptParameter__VisibilityAssignment_0");
					put(grammarAccess.getMscriptParameterAccess().getNameAssignment_2(), "rule__MscriptParameter__NameAssignment_2");
					put(grammarAccess.getMscriptParameterAccess().getOwnedDefaultValueAssignment_4(), "rule__MscriptParameter__OwnedDefaultValueAssignment_4");
					put(grammarAccess.getMscriptParameterAccess().getPredefinedValuesAssignment_5_2(), "rule__MscriptParameter__PredefinedValuesAssignment_5_2");
					put(grammarAccess.getMscriptParameterAccess().getPredefinedValuesAssignment_5_3_1(), "rule__MscriptParameter__PredefinedValuesAssignment_5_3_1");
					put(grammarAccess.getOpaqueParameterPredefinedValueAccess().getValueAssignment_0(), "rule__OpaqueParameterPredefinedValue__ValueAssignment_0");
					put(grammarAccess.getOpaqueParameterPredefinedValueAccess().getAliasAssignment_1_1(), "rule__OpaqueParameterPredefinedValue__AliasAssignment_1_1");
					put(grammarAccess.getMscriptParameterPredefinedValueAccess().getValueAssignment_0(), "rule__MscriptParameterPredefinedValue__ValueAssignment_0");
					put(grammarAccess.getMscriptParameterPredefinedValueAccess().getAliasAssignment_1_1(), "rule__MscriptParameterPredefinedValue__AliasAssignment_1_1");
					put(grammarAccess.getOpaqueTypeSpecificationAccess().getKindAssignment(), "rule__OpaqueTypeSpecification__KindAssignment");
					put(grammarAccess.getStringValueSpecificationAccess().getValueAssignment(), "rule__StringValueSpecification__ValueAssignment");
					put(grammarAccess.getMscriptValueSpecificationAccess().getExpressionAssignment(), "rule__MscriptValueSpecification__ExpressionAssignment");
					put(grammarAccess.getMscriptSystemInterfaceAccess().getPackageNameAssignment_1(), "rule__MscriptSystemInterface__PackageNameAssignment_1");
					put(grammarAccess.getMscriptSystemInterfaceAccess().getImportDeclarationsAssignment_2(), "rule__MscriptSystemInterface__ImportDeclarationsAssignment_2");
					put(grammarAccess.getMscriptSystemInterfaceAccess().getNameAssignment_4(), "rule__MscriptSystemInterface__NameAssignment_4");
					put(grammarAccess.getMscriptSystemInterfaceAccess().getInletsAssignment_6(), "rule__MscriptSystemInterface__InletsAssignment_6");
					put(grammarAccess.getMscriptSystemInterfaceAccess().getOutletsAssignment_7(), "rule__MscriptSystemInterface__OutletsAssignment_7");
					put(grammarAccess.getInletAccess().getDataTypeAssignment_1(), "rule__Inlet__DataTypeAssignment_1");
					put(grammarAccess.getInletAccess().getNameAssignment_2(), "rule__Inlet__NameAssignment_2");
					put(grammarAccess.getOutletAccess().getDataTypeAssignment_1(), "rule__Outlet__DataTypeAssignment_1");
					put(grammarAccess.getOutletAccess().getNameAssignment_2(), "rule__Outlet__NameAssignment_2");
					put(grammarAccess.getMscriptDataTypeSpecificationAccess().getSpecifierAssignment(), "rule__MscriptDataTypeSpecification__SpecifierAssignment");
					put(grammarAccess.getModuleAccess().getPackageNameAssignment_1(), "rule__Module__PackageNameAssignment_1");
					put(grammarAccess.getModuleAccess().getImportDeclarationsAssignment_2(), "rule__Module__ImportDeclarationsAssignment_2");
					put(grammarAccess.getModuleAccess().getDeclarationsAssignment_3(), "rule__Module__DeclarationsAssignment_3");
					put(grammarAccess.getImportDeclarationAccess().getImportedNamespaceAssignment_1(), "rule__ImportDeclaration__ImportedNamespaceAssignment_1");
					put(grammarAccess.getEnumerationDeclarationAccess().getNameAssignment_1(), "rule__EnumerationDeclaration__NameAssignment_1");
					put(grammarAccess.getEnumerationDeclarationAccess().getLiteralDeclarationsAssignment_3_0(), "rule__EnumerationDeclaration__LiteralDeclarationsAssignment_3_0");
					put(grammarAccess.getEnumerationDeclarationAccess().getLiteralDeclarationsAssignment_3_1_1(), "rule__EnumerationDeclaration__LiteralDeclarationsAssignment_3_1_1");
					put(grammarAccess.getEnumerationLiteralDeclarationAccess().getNameAssignment(), "rule__EnumerationLiteralDeclaration__NameAssignment");
					put(grammarAccess.getTypedefDeclarationAccess().getTypeSpecifierAssignment_1(), "rule__TypedefDeclaration__TypeSpecifierAssignment_1");
					put(grammarAccess.getTypedefDeclarationAccess().getNameAssignment_2(), "rule__TypedefDeclaration__NameAssignment_2");
					put(grammarAccess.getStructDeclarationAccess().getNameAssignment_1(), "rule__StructDeclaration__NameAssignment_1");
					put(grammarAccess.getStructDeclarationAccess().getMembersAssignment_3(), "rule__StructDeclaration__MembersAssignment_3");
					put(grammarAccess.getStructDeclarationAccess().getMembersAssignment_4_1(), "rule__StructDeclaration__MembersAssignment_4_1");
					put(grammarAccess.getFunctionDeclarationAccess().getKindAssignment_0(), "rule__FunctionDeclaration__KindAssignment_0");
					put(grammarAccess.getFunctionDeclarationAccess().getNameAssignment_2(), "rule__FunctionDeclaration__NameAssignment_2");
					put(grammarAccess.getFunctionDeclarationAccess().getTemplateParameterDeclarationsAssignment_3_1(), "rule__FunctionDeclaration__TemplateParameterDeclarationsAssignment_3_1");
					put(grammarAccess.getFunctionDeclarationAccess().getTemplateParameterDeclarationsAssignment_3_2_1(), "rule__FunctionDeclaration__TemplateParameterDeclarationsAssignment_3_2_1");
					put(grammarAccess.getFunctionDeclarationAccess().getInputParameterDeclarationsAssignment_5_0(), "rule__FunctionDeclaration__InputParameterDeclarationsAssignment_5_0");
					put(grammarAccess.getFunctionDeclarationAccess().getInputParameterDeclarationsAssignment_5_1_1(), "rule__FunctionDeclaration__InputParameterDeclarationsAssignment_5_1_1");
					put(grammarAccess.getFunctionDeclarationAccess().getOutputParameterDeclarationsAssignment_8(), "rule__FunctionDeclaration__OutputParameterDeclarationsAssignment_8");
					put(grammarAccess.getFunctionDeclarationAccess().getOutputParameterDeclarationsAssignment_9_1(), "rule__FunctionDeclaration__OutputParameterDeclarationsAssignment_9_1");
					put(grammarAccess.getFunctionDeclarationAccess().getChecksAssignment_11_0(), "rule__FunctionDeclaration__ChecksAssignment_11_0");
					put(grammarAccess.getFunctionDeclarationAccess().getAssertionsAssignment_11_1(), "rule__FunctionDeclaration__AssertionsAssignment_11_1");
					put(grammarAccess.getFunctionDeclarationAccess().getFunctionObjectDeclarationsAssignment_11_2(), "rule__FunctionDeclaration__FunctionObjectDeclarationsAssignment_11_2");
					put(grammarAccess.getFunctionDeclarationAccess().getStateVariableDeclarationsAssignment_11_3(), "rule__FunctionDeclaration__StateVariableDeclarationsAssignment_11_3");
					put(grammarAccess.getFunctionDeclarationAccess().getConstantDeclarationsAssignment_11_4(), "rule__FunctionDeclaration__ConstantDeclarationsAssignment_11_4");
					put(grammarAccess.getFunctionDeclarationAccess().getEquationsAssignment_11_5(), "rule__FunctionDeclaration__EquationsAssignment_11_5");
					put(grammarAccess.getTemplateParameterDeclarationAccess().getNameAssignment(), "rule__TemplateParameterDeclaration__NameAssignment");
					put(grammarAccess.getInputParameterDeclarationAccess().getNameAssignment(), "rule__InputParameterDeclaration__NameAssignment");
					put(grammarAccess.getOutputParameterDeclarationAccess().getNameAssignment(), "rule__OutputParameterDeclaration__NameAssignment");
					put(grammarAccess.getCheckAccess().getTemplateArgumentsAssignment_1_1(), "rule__Check__TemplateArgumentsAssignment_1_1");
					put(grammarAccess.getCheckAccess().getTemplateArgumentsAssignment_1_2_1(), "rule__Check__TemplateArgumentsAssignment_1_2_1");
					put(grammarAccess.getCheckAccess().getInputParameterTypesAssignment_3_0(), "rule__Check__InputParameterTypesAssignment_3_0");
					put(grammarAccess.getCheckAccess().getInputParameterTypesAssignment_3_1_1(), "rule__Check__InputParameterTypesAssignment_3_1_1");
					put(grammarAccess.getCheckAccess().getOutputParameterTypesAssignment_6(), "rule__Check__OutputParameterTypesAssignment_6");
					put(grammarAccess.getCheckAccess().getOutputParameterTypesAssignment_7_1(), "rule__Check__OutputParameterTypesAssignment_7_1");
					put(grammarAccess.getAssertionAccess().getStaticAssignment_0(), "rule__Assertion__StaticAssignment_0");
					put(grammarAccess.getAssertionAccess().getConditionAssignment_2(), "rule__Assertion__ConditionAssignment_2");
					put(grammarAccess.getAssertionAccess().getStatusKindAssignment_4(), "rule__Assertion__StatusKindAssignment_4");
					put(grammarAccess.getAssertionAccess().getMessageAssignment_5(), "rule__Assertion__MessageAssignment_5");
					put(grammarAccess.getStateVariableDeclarationAccess().getNameAssignment_1(), "rule__StateVariableDeclaration__NameAssignment_1");
					put(grammarAccess.getConstantDeclarationAccess().getNameAssignment_1(), "rule__ConstantDeclaration__NameAssignment_1");
					put(grammarAccess.getConstantDeclarationAccess().getInitializerAssignment_3(), "rule__ConstantDeclaration__InitializerAssignment_3");
					put(grammarAccess.getFunctionObjectDeclarationAccess().getFunctionNameAssignment_1(), "rule__FunctionObjectDeclaration__FunctionNameAssignment_1");
					put(grammarAccess.getFunctionObjectDeclarationAccess().getTemplateArgumentsAssignment_2_1(), "rule__FunctionObjectDeclaration__TemplateArgumentsAssignment_2_1");
					put(grammarAccess.getFunctionObjectDeclarationAccess().getTemplateArgumentsAssignment_2_2_1(), "rule__FunctionObjectDeclaration__TemplateArgumentsAssignment_2_2_1");
					put(grammarAccess.getFunctionObjectDeclarationAccess().getNameAssignment_3(), "rule__FunctionObjectDeclaration__NameAssignment_3");
					put(grammarAccess.getEquationAccess().getInitialAssignment_0(), "rule__Equation__InitialAssignment_0");
					put(grammarAccess.getEquationAccess().getLeftHandSideAssignment_2(), "rule__Equation__LeftHandSideAssignment_2");
					put(grammarAccess.getEquationAccess().getRightHandSideAssignment_4(), "rule__Equation__RightHandSideAssignment_4");
					put(grammarAccess.getDataTypeSpecifierAccess().getAnonymousTypeAssignment_0(), "rule__DataTypeSpecifier__AnonymousTypeAssignment_0");
					put(grammarAccess.getDataTypeSpecifierAccess().getTypeAssignment_1(), "rule__DataTypeSpecifier__TypeAssignment_1");
					put(grammarAccess.getRealTypeAccess().getUnitAssignment_2(), "rule__RealType__UnitAssignment_2");
					put(grammarAccess.getIntegerTypeAccess().getUnitAssignment_2(), "rule__IntegerType__UnitAssignment_2");
					put(grammarAccess.getComplexTypeAccess().getUnitAssignment_2(), "rule__ComplexType__UnitAssignment_2");
					put(grammarAccess.getGaussianTypeAccess().getUnitAssignment_2(), "rule__GaussianType__UnitAssignment_2");
					put(grammarAccess.getArrayTypeAccess().getAnonymousElementTypeAssignment_1_0_0_0(), "rule__ArrayType__AnonymousElementTypeAssignment_1_0_0_0");
					put(grammarAccess.getArrayTypeAccess().getElementTypeAssignment_1_0_0_1(), "rule__ArrayType__ElementTypeAssignment_1_0_0_1");
					put(grammarAccess.getArrayTypeAccess().getDimensionsAssignment_1_2(), "rule__ArrayType__DimensionsAssignment_1_2");
					put(grammarAccess.getArrayTypeAccess().getDimensionsAssignment_1_3_1(), "rule__ArrayType__DimensionsAssignment_1_3_1");
					put(grammarAccess.getTensorTypeAccess().getAnonymousElementTypeAssignment_0(), "rule__TensorType__AnonymousElementTypeAssignment_0");
					put(grammarAccess.getTensorTypeAccess().getDimensionsAssignment_2(), "rule__TensorType__DimensionsAssignment_2");
					put(grammarAccess.getTensorTypeAccess().getDimensionsAssignment_3_1(), "rule__TensorType__DimensionsAssignment_3_1");
					put(grammarAccess.getArrayDimensionAccess().getSizeAssignment_1(), "rule__ArrayDimension__SizeAssignment_1");
					put(grammarAccess.getStructTypeAccess().getMembersAssignment_2(), "rule__StructType__MembersAssignment_2");
					put(grammarAccess.getStructTypeAccess().getMembersAssignment_3_1(), "rule__StructType__MembersAssignment_3_1");
					put(grammarAccess.getStructMemberAccess().getTypeSpecifierAssignment_0(), "rule__StructMember__TypeSpecifierAssignment_0");
					put(grammarAccess.getStructMemberAccess().getNameAssignment_1(), "rule__StructMember__NameAssignment_1");
					put(grammarAccess.getLetExpressionAccess().getAssignmentsAssignment_1(), "rule__LetExpression__AssignmentsAssignment_1");
					put(grammarAccess.getLetExpressionAccess().getAssignmentsAssignment_2_1(), "rule__LetExpression__AssignmentsAssignment_2_1");
					put(grammarAccess.getLetExpressionAccess().getTargetAssignment_4(), "rule__LetExpression__TargetAssignment_4");
					put(grammarAccess.getLetExpressionAssignmentAccess().getVariablesAssignment_0_0(), "rule__LetExpressionAssignment__VariablesAssignment_0_0");
					put(grammarAccess.getLetExpressionAssignmentAccess().getVariablesAssignment_0_1_1(), "rule__LetExpressionAssignment__VariablesAssignment_0_1_1");
					put(grammarAccess.getLetExpressionAssignmentAccess().getVariablesAssignment_0_1_2_1(), "rule__LetExpressionAssignment__VariablesAssignment_0_1_2_1");
					put(grammarAccess.getLetExpressionAssignmentAccess().getAssignedExpressionAssignment_2(), "rule__LetExpressionAssignment__AssignedExpressionAssignment_2");
					put(grammarAccess.getLetExpressionVariableDeclarationAccess().getNameAssignment(), "rule__LetExpressionVariableDeclaration__NameAssignment");
					put(grammarAccess.getIfExpressionAccess().getStaticAssignment_0(), "rule__IfExpression__StaticAssignment_0");
					put(grammarAccess.getIfExpressionAccess().getConditionAssignment_2(), "rule__IfExpression__ConditionAssignment_2");
					put(grammarAccess.getIfExpressionAccess().getThenExpressionAssignment_4(), "rule__IfExpression__ThenExpressionAssignment_4");
					put(grammarAccess.getIfExpressionAccess().getElseExpressionAssignment_6(), "rule__IfExpression__ElseExpressionAssignment_6");
					put(grammarAccess.getSwitchExpressionAccess().getStaticAssignment_0(), "rule__SwitchExpression__StaticAssignment_0");
					put(grammarAccess.getSwitchExpressionAccess().getControlExpressionAssignment_2(), "rule__SwitchExpression__ControlExpressionAssignment_2");
					put(grammarAccess.getSwitchExpressionAccess().getCasesAssignment_3(), "rule__SwitchExpression__CasesAssignment_3");
					put(grammarAccess.getSwitchExpressionAccess().getDefaultExpressionAssignment_6(), "rule__SwitchExpression__DefaultExpressionAssignment_6");
					put(grammarAccess.getSwitchCaseAccess().getCaseExpressionAssignment_1(), "rule__SwitchCase__CaseExpressionAssignment_1");
					put(grammarAccess.getSwitchCaseAccess().getResultExpressionAssignment_3(), "rule__SwitchCase__ResultExpressionAssignment_3");
					put(grammarAccess.getRangeExpressionAccess().getOperandsAssignment_1_2(), "rule__RangeExpression__OperandsAssignment_1_2");
					put(grammarAccess.getRangeExpressionAccess().getOperandsAssignment_1_3_1(), "rule__RangeExpression__OperandsAssignment_1_3_1");
					put(grammarAccess.getImpliesExpressionAccess().getRightOperandAssignment_1_2(), "rule__ImpliesExpression__RightOperandAssignment_1_2");
					put(grammarAccess.getLogicalOrExpressionAccess().getRightOperandAssignment_1_2(), "rule__LogicalOrExpression__RightOperandAssignment_1_2");
					put(grammarAccess.getLogicalAndExpressionAccess().getRightOperandAssignment_1_2(), "rule__LogicalAndExpression__RightOperandAssignment_1_2");
					put(grammarAccess.getEqualityExpressionAccess().getOperatorAssignment_1_1(), "rule__EqualityExpression__OperatorAssignment_1_1");
					put(grammarAccess.getEqualityExpressionAccess().getRightOperandAssignment_1_2(), "rule__EqualityExpression__RightOperandAssignment_1_2");
					put(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_0_0_1(), "rule__RelationalExpression__OperatorAssignment_1_0_0_1");
					put(grammarAccess.getRelationalExpressionAccess().getRightOperandAssignment_1_0_0_2(), "rule__RelationalExpression__RightOperandAssignment_1_0_0_2");
					put(grammarAccess.getRelationalExpressionAccess().getTypeSpecifierAssignment_1_0_1_2(), "rule__RelationalExpression__TypeSpecifierAssignment_1_0_1_2");
					put(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_1(), "rule__AdditiveExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAdditiveExpressionAccess().getRightOperandAssignment_1_2(), "rule__AdditiveExpression__RightOperandAssignment_1_2");
					put(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_1(), "rule__MultiplicativeExpression__OperatorAssignment_1_1");
					put(grammarAccess.getMultiplicativeExpressionAccess().getRightOperandAssignment_1_2(), "rule__MultiplicativeExpression__RightOperandAssignment_1_2");
					put(grammarAccess.getPowerExpressionAccess().getOperatorAssignment_1_1(), "rule__PowerExpression__OperatorAssignment_1_1");
					put(grammarAccess.getPowerExpressionAccess().getExponentAssignment_1_2(), "rule__PowerExpression__ExponentAssignment_1_2");
					put(grammarAccess.getUnaryExpressionAccess().getOperatorAssignment_1_1(), "rule__UnaryExpression__OperatorAssignment_1_1");
					put(grammarAccess.getUnaryExpressionAccess().getOperandAssignment_1_2(), "rule__UnaryExpression__OperandAssignment_1_2");
					put(grammarAccess.getPostfixExpressionAccess().getOperatorAssignment_1_1(), "rule__PostfixExpression__OperatorAssignment_1_1");
					put(grammarAccess.getMemberFeatureCallAccess().getSubscriptsAssignment_1_0_2(), "rule__MemberFeatureCall__SubscriptsAssignment_1_0_2");
					put(grammarAccess.getMemberFeatureCallAccess().getSubscriptsAssignment_1_0_3_1(), "rule__MemberFeatureCall__SubscriptsAssignment_1_0_3_1");
					put(grammarAccess.getMemberFeatureCallAccess().getMemberVariableAssignment_1_1_2(), "rule__MemberFeatureCall__MemberVariableAssignment_1_1_2");
					put(grammarAccess.getMemberFeatureCallAccess().getFeatureAssignment_1_2_2(), "rule__MemberFeatureCall__FeatureAssignment_1_2_2");
					put(grammarAccess.getMemberFeatureCallAccess().getArgumentsAssignment_1_2_4_0(), "rule__MemberFeatureCall__ArgumentsAssignment_1_2_4_0");
					put(grammarAccess.getMemberFeatureCallAccess().getArgumentsAssignment_1_2_4_1_1(), "rule__MemberFeatureCall__ArgumentsAssignment_1_2_4_1_1");
					put(grammarAccess.getMemberFeatureCallAccess().getIdentifierAssignment_1_3_2(), "rule__MemberFeatureCall__IdentifierAssignment_1_3_2");
					put(grammarAccess.getMemberFeatureCallAccess().getIterationVariablesAssignment_1_3_4(), "rule__MemberFeatureCall__IterationVariablesAssignment_1_3_4");
					put(grammarAccess.getMemberFeatureCallAccess().getIterationVariablesAssignment_1_3_5_1(), "rule__MemberFeatureCall__IterationVariablesAssignment_1_3_5_1");
					put(grammarAccess.getMemberFeatureCallAccess().getAccumulatorAssignment_1_3_6_1(), "rule__MemberFeatureCall__AccumulatorAssignment_1_3_6_1");
					put(grammarAccess.getMemberFeatureCallAccess().getBreakConditionAssignment_1_3_7_1(), "rule__MemberFeatureCall__BreakConditionAssignment_1_3_7_1");
					put(grammarAccess.getMemberFeatureCallAccess().getExpressionAssignment_1_3_9(), "rule__MemberFeatureCall__ExpressionAssignment_1_3_9");
					put(grammarAccess.getAssignableMemberFeatureCallAccess().getSubscriptsAssignment_1_0_2(), "rule__AssignableMemberFeatureCall__SubscriptsAssignment_1_0_2");
					put(grammarAccess.getAssignableMemberFeatureCallAccess().getSubscriptsAssignment_1_0_3_1(), "rule__AssignableMemberFeatureCall__SubscriptsAssignment_1_0_3_1");
					put(grammarAccess.getAssignableMemberFeatureCallAccess().getMemberVariableAssignment_1_1_2(), "rule__AssignableMemberFeatureCall__MemberVariableAssignment_1_1_2");
					put(grammarAccess.getIterationAccumulatorAccess().getNameAssignment_0(), "rule__IterationAccumulator__NameAssignment_0");
					put(grammarAccess.getIterationAccumulatorAccess().getInitializerAssignment_2(), "rule__IterationAccumulator__InitializerAssignment_2");
					put(grammarAccess.getIterationVariableDeclarationAccess().getNameAssignment(), "rule__IterationVariableDeclaration__NameAssignment");
					put(grammarAccess.getArraySubscriptAccess().getSliceAssignment_0(), "rule__ArraySubscript__SliceAssignment_0");
					put(grammarAccess.getArraySubscriptAccess().getExpressionAssignment_1(), "rule__ArraySubscript__ExpressionAssignment_1");
					put(grammarAccess.getRealLiteralAccess().getDataAssignment_0(), "rule__RealLiteral__DataAssignment_0");
					put(grammarAccess.getRealLiteralAccess().getUnitAssignment_1(), "rule__RealLiteral__UnitAssignment_1");
					put(grammarAccess.getIntegerLiteralAccess().getDataAssignment_0(), "rule__IntegerLiteral__DataAssignment_0");
					put(grammarAccess.getIntegerLiteralAccess().getUnitAssignment_1(), "rule__IntegerLiteral__UnitAssignment_1");
					put(grammarAccess.getBooleanLiteralAccess().getTrueAssignment_1_0(), "rule__BooleanLiteral__TrueAssignment_1_0");
					put(grammarAccess.getStringLiteralAccess().getValueAssignment(), "rule__StringLiteral__ValueAssignment");
					put(grammarAccess.getVariableReferenceAccess().getFeatureAssignment_1(), "rule__VariableReference__FeatureAssignment_1");
					put(grammarAccess.getVariableReferenceAccess().getStepExpressionAssignment_2_1(), "rule__VariableReference__StepExpressionAssignment_2_1");
					put(grammarAccess.getFunctionCallAccess().getFeatureAssignment_1(), "rule__FunctionCall__FeatureAssignment_1");
					put(grammarAccess.getFunctionCallAccess().getArgumentsAssignment_3_0(), "rule__FunctionCall__ArgumentsAssignment_3_0");
					put(grammarAccess.getFunctionCallAccess().getArgumentsAssignment_3_1_1(), "rule__FunctionCall__ArgumentsAssignment_3_1_1");
					put(grammarAccess.getQualifiedVariableReferenceAccess().getFeatureAssignment_2(), "rule__QualifiedVariableReference__FeatureAssignment_2");
					put(grammarAccess.getQualifiedFunctionCallAccess().getFeatureAssignment_2(), "rule__QualifiedFunctionCall__FeatureAssignment_2");
					put(grammarAccess.getQualifiedFunctionCallAccess().getArgumentsAssignment_4_0(), "rule__QualifiedFunctionCall__ArgumentsAssignment_4_0");
					put(grammarAccess.getQualifiedFunctionCallAccess().getArgumentsAssignment_4_1_1(), "rule__QualifiedFunctionCall__ArgumentsAssignment_4_1_1");
					put(grammarAccess.getRangeStepExpressionAccess().getEndAssignment_1_2(), "rule__RangeStepExpression__EndAssignment_1_2");
					put(grammarAccess.getAdditiveStepExpressionAccess().getOperatorAssignment_1_1(), "rule__AdditiveStepExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAdditiveStepExpressionAccess().getRightOperandAssignment_1_2(), "rule__AdditiveStepExpression__RightOperandAssignment_1_2");
					put(grammarAccess.getNegateStepExpressionAccess().getOperandAssignment_1_2(), "rule__NegateStepExpression__OperandAssignment_1_2");
					put(grammarAccess.getStepLiteralAccess().getValueAssignment(), "rule__StepLiteral__ValueAssignment");
					put(grammarAccess.getArrayConstructionOperatorAccess().getExpressionsAssignment_1(), "rule__ArrayConstructionOperator__ExpressionsAssignment_1");
					put(grammarAccess.getArrayConstructionOperatorAccess().getExpressionsAssignment_2_0_1(), "rule__ArrayConstructionOperator__ExpressionsAssignment_2_0_1");
					put(grammarAccess.getArrayConstructionOperatorAccess().getIterationClausesAssignment_2_1_1(), "rule__ArrayConstructionOperator__IterationClausesAssignment_2_1_1");
					put(grammarAccess.getArrayConstructionOperatorAccess().getIterationClausesAssignment_2_1_2_1(), "rule__ArrayConstructionOperator__IterationClausesAssignment_2_1_2_1");
					put(grammarAccess.getArrayConstructionIterationClauseAccess().getVariableNameAssignment_0(), "rule__ArrayConstructionIterationClause__VariableNameAssignment_0");
					put(grammarAccess.getArrayConstructionIterationClauseAccess().getCollectionExpressionAssignment_2(), "rule__ArrayConstructionIterationClause__CollectionExpressionAssignment_2");
					put(grammarAccess.getArrayConcatenationOperatorAccess().getRowsAssignment_1(), "rule__ArrayConcatenationOperator__RowsAssignment_1");
					put(grammarAccess.getArrayConcatenationOperatorAccess().getRowsAssignment_2_1(), "rule__ArrayConcatenationOperator__RowsAssignment_2_1");
					put(grammarAccess.getExpressionListAccess().getExpressionsAssignment_0(), "rule__ExpressionList__ExpressionsAssignment_0");
					put(grammarAccess.getExpressionListAccess().getExpressionsAssignment_1_1(), "rule__ExpressionList__ExpressionsAssignment_1_1");
					put(grammarAccess.getStructConstructionOperatorAccess().getMembersAssignment_1(), "rule__StructConstructionOperator__MembersAssignment_1");
					put(grammarAccess.getStructConstructionOperatorAccess().getMembersAssignment_2_1(), "rule__StructConstructionOperator__MembersAssignment_2_1");
					put(grammarAccess.getStructConstructionMemberAccess().getNameAssignment_0(), "rule__StructConstructionMember__NameAssignment_0");
					put(grammarAccess.getStructConstructionMemberAccess().getValueAssignment_2(), "rule__StructConstructionMember__ValueAssignment_2");
					put(grammarAccess.getUnitConstructionOperatorAccess().getUnitAssignment_1(), "rule__UnitConstructionOperator__UnitAssignment_1");
					put(grammarAccess.getParenthesizedExpressionAccess().getExpressionsAssignment_1(), "rule__ParenthesizedExpression__ExpressionsAssignment_1");
					put(grammarAccess.getParenthesizedExpressionAccess().getExpressionsAssignment_2_1(), "rule__ParenthesizedExpression__ExpressionsAssignment_2_1");
					put(grammarAccess.getAlgorithmExpressionAccess().getBodyAssignment_2(), "rule__AlgorithmExpression__BodyAssignment_2");
					put(grammarAccess.getCompoundAccess().getStatementsAssignment_2(), "rule__Compound__StatementsAssignment_2");
					put(grammarAccess.getAssignmentAccess().getTargetAssignment_0(), "rule__Assignment__TargetAssignment_0");
					put(grammarAccess.getAssignmentAccess().getAssignedExpressionAssignment_2(), "rule__Assignment__AssignedExpressionAssignment_2");
					put(grammarAccess.getLocalVariableDeclarationAccess().getNameAssignment_1(), "rule__LocalVariableDeclaration__NameAssignment_1");
					put(grammarAccess.getLocalVariableDeclarationAccess().getInitializerAssignment_3(), "rule__LocalVariableDeclaration__InitializerAssignment_3");
					put(grammarAccess.getIfStatementAccess().getConditionAssignment_2(), "rule__IfStatement__ConditionAssignment_2");
					put(grammarAccess.getIfStatementAccess().getThenStatementAssignment_4(), "rule__IfStatement__ThenStatementAssignment_4");
					put(grammarAccess.getIfStatementAccess().getElseStatementAssignment_5_1(), "rule__IfStatement__ElseStatementAssignment_5_1");
					put(grammarAccess.getWhileStatementAccess().getConditionAssignment_2(), "rule__WhileStatement__ConditionAssignment_2");
					put(grammarAccess.getWhileStatementAccess().getBodyAssignment_4(), "rule__WhileStatement__BodyAssignment_4");
					put(grammarAccess.getForStatementAccess().getIterationVariableAssignment_2(), "rule__ForStatement__IterationVariableAssignment_2");
					put(grammarAccess.getForStatementAccess().getCollectionExpressionAssignment_4(), "rule__ForStatement__CollectionExpressionAssignment_4");
					put(grammarAccess.getForStatementAccess().getBodyAssignment_6(), "rule__ForStatement__BodyAssignment_6");
					put(grammarAccess.getDoWhileStatementAccess().getBodyAssignment_1(), "rule__DoWhileStatement__BodyAssignment_1");
					put(grammarAccess.getDoWhileStatementAccess().getConditionAssignment_4(), "rule__DoWhileStatement__ConditionAssignment_4");
					put(grammarAccess.getReturnStatementAccess().getExpressionAssignment_1(), "rule__ReturnStatement__ExpressionAssignment_1");
					put(grammarAccess.getUnitAccess().getNumeratorAssignment_1_1_1(), "rule__Unit__NumeratorAssignment_1_1_1");
					put(grammarAccess.getUnitAccess().getDenominatorAssignment_1_1_2_1(), "rule__Unit__DenominatorAssignment_1_1_2_1");
					put(grammarAccess.getUnitAccess().getNumeratorAssignment_1_2(), "rule__Unit__NumeratorAssignment_1_2");
					put(grammarAccess.getExplicitUnitAccess().getNumeratorAssignment_1(), "rule__ExplicitUnit__NumeratorAssignment_1");
					put(grammarAccess.getExplicitUnitAccess().getDenominatorAssignment_2_1(), "rule__ExplicitUnit__DenominatorAssignment_2_1");
					put(grammarAccess.getUnitNumeratorAccess().getFactorsAssignment_1_0(), "rule__UnitNumerator__FactorsAssignment_1_0");
					put(grammarAccess.getUnitNumeratorAccess().getFactorsAssignment_1_1_1(), "rule__UnitNumerator__FactorsAssignment_1_1_1");
					put(grammarAccess.getUnitDenominatorAccess().getFactorsAssignment_0(), "rule__UnitDenominator__FactorsAssignment_0");
					put(grammarAccess.getUnitDenominatorAccess().getFactorsAssignment_1_1(), "rule__UnitDenominator__FactorsAssignment_1_1");
					put(grammarAccess.getUnitDenominatorAccess().getFactorsAssignment_1_2_1(), "rule__UnitDenominator__FactorsAssignment_1_2_1");
					put(grammarAccess.getUnitFactorAccess().getSymbolAssignment_0(), "rule__UnitFactor__SymbolAssignment_0");
					put(grammarAccess.getUnitFactorAccess().getExponentAssignment_1_1(), "rule__UnitFactor__ExponentAssignment_1_1");
					put(grammarAccess.getMscriptBlockTypeAccess().getUnorderedGroup_3(), "rule__MscriptBlockType__UnorderedGroup_3");
					put(grammarAccess.getInputDefinitionAccess().getUnorderedGroup_0(), "rule__InputDefinition__UnorderedGroup_0");
					put(grammarAccess.getInputDefinitionAccess().getUnorderedGroup_4_1(), "rule__InputDefinition__UnorderedGroup_4_1");
					put(grammarAccess.getOutputDefinitionAccess().getUnorderedGroup_0(), "rule__OutputDefinition__UnorderedGroup_0");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.eclipselabs.damos.dmltext.ui.contentassist.antlr.internal.InternalDMLTextParser typedParser = (org.eclipselabs.damos.dmltext.ui.contentassist.antlr.internal.InternalDMLTextParser) parser;
			typedParser.entryRuleRoot();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public DMLTextGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(DMLTextGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
