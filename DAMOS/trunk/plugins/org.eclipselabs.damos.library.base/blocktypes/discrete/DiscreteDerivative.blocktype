package damos.library.base._discrete

synchronous blockType DiscreteDerivative {

	input u
	output y
	
	parameter gain = 1(s) // normalize
	parameter initialCondition = 0

	behavior {
		check(real) -> real
		
		static assert u is real(?) :
			error "Input value must be numeric"
	
		static assert initialCondition is real(?) :
			error "Initial condition must be numeric"
			
		static assert initialCondition is real(?) && u is real(?) => unit(initialCondition) == unit(u) :
			error "Initial condition and input value must have same unit"
			
		static assert gain is real(?) :
			error "Gain value must be numeric"
	
		eq u{-1} = initialCondition
		eq y{n} = fs * gain * (u{n} - u{n-1})
	}
	
}
