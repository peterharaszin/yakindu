/****************************************************************************
 * Copyright (c) 2011 Andreas Unger and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Andreas Unger - initial API and implementation 
 ****************************************************************************/

grammar org.eclipselabs.damos.mscript.computationmodel.ComputationModel with org.eclipselabs.damos.mscript.Mscript

import 'http://www.eclipse.org/emf/2002/Ecore' as ecore
import "platform:/resource/org.eclipselabs.damos.mscript/model/ComputationModel.ecore"

ComputationModel:
	'computation' qualifiedName=QualifiedName
	(numberFormats+=NumberFormat | numberFormatMappings+=NumberFormatMapping)*;

NumberFormat:
	FloatingPointFormat | FixedPointFormat;

FloatingPointFormat:
	'float' kind=FloatingPointFormatKind (name=ValidID)?;

enum FloatingPointFormatKind:
	Binary16='binary16' |
	Binary16='binary32' |
	Binary16='binary64' |
	Binary16='binary128' |
	Decimal32='decimal32' |
	Decimal64='decimal64' |
	Decimal128='decimal128';
	
FixedPointFormat:
	(('fix' integerLength=ValidInt ('.' fractionLength=ValidInt)?) | ('fract' fractionLength=FractionLiteral)) (name=ValidID)? ('{'
		(operations+=FixedPointOperation)+
	'}')?;

FixedPointOperation:
	kind=FixedPointOperationKind ':' ('intermediate' intermediateWordSize=ValidInt & (saturate?='saturate')?);

enum FixedPointOperationKind:
	Construct='construct' |
	Cast='cast' |
	Add='add' |
	Subtract='subtract' |
	Multiply='multiply' |
	Divide='divide';

FractionLiteral returns ecore::EInt:
	ValidInt;
	
NumberFormatMapping:
	'map' typeSpecifier=DataTypeSpecifier 'to' numberFormat=[NumberFormat];
