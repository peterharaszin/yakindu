/*
 * generated by Xtext
 */
package org.eclipselabs.damos.mscript.computationmodel;

import org.eclipse.xtext.conversion.IValueConverterService;
import org.eclipse.xtext.conversion.impl.AbstractIDValueConverter;
import org.eclipse.xtext.conversion.impl.QualifiedNameValueConverter;
import org.eclipse.xtext.naming.IQualifiedNameProvider;
import org.eclipselabs.damos.mscript.computationmodel.conversion.ComputationModelTerminalConverters;
import org.eclipselabs.damos.mscript.computationmodel.naming.ComputationModelQualifiedNameProvider;
import org.eclipselabs.damos.mscript.conversion.MscriptIDValueConverter;
import org.eclipselabs.damos.mscript.conversion.MscriptQualifiedNameValueConverter;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
public class ComputationModelRuntimeModule extends org.eclipselabs.damos.mscript.computationmodel.AbstractComputationModelRuntimeModule {

	public Class<? extends QualifiedNameValueConverter> bindQualifiedNameValueConverter() {
		return MscriptQualifiedNameValueConverter.class;
	}

	public Class<? extends AbstractIDValueConverter> bindAbstractIDValueConverter() {
		return MscriptIDValueConverter.class;
	}

	@Override
	public Class<? extends IValueConverterService> bindIValueConverterService() {
		return ComputationModelTerminalConverters.class;
	}
	
	/* (non-Javadoc)
	 * @see org.eclipselabs.damos.mscript.computationmodel.AbstractComputationModelRuntimeModule#bindIQualifiedNameProvider()
	 */
	@Override
	public Class<? extends IQualifiedNameProvider> bindIQualifiedNameProvider() {
		return ComputationModelQualifiedNameProvider.class;
	}
	
}
