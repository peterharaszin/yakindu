/*
 * generated by Xtext
 */
package org.eclipselabs.damos.simulation.simulationmodel.scoping;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import org.eclipselabs.damos.mscript.scoping.MscriptScopeProvider;
import org.eclipselabs.damos.simulation.simulationmodel.SolverArgument;
import org.eclipselabs.damos.simulation.simulationmodel.SolverConfiguration;
import org.eclipselabs.damos.simulation.simulationmodel.SolverParameter;
import org.eclipselabs.damos.simulation.simulationmodel.SolverType;

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#scoping
 * on how and when to use it 
 *
 */
public class SimulationModelScopeProvider extends MscriptScopeProvider {

	public IScope scope_SolverParameter(SolverArgument argument, EReference reference) {
		return scope_SolverParameter(argument.getConfiguration(), reference);
	}
	
	public IScope scope_SolverParameter(SolverConfiguration configuration, EReference reference) {
		SolverType type = configuration.getType();
		if (type == null || type.getConfigurationDefinition() == null) {
			return IScope.NULLSCOPE;
		}
		EList<SolverParameter> parameters = type.getConfigurationDefinition().getParameters();
		return Scopes.scopeFor(parameters, IScope.NULLSCOPE);
	}

}
