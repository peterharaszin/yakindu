package damos.tests

blockType StructExtractStructLiteral {

	input x
	output outX
	output outA
	output outB0
	output outB1
	
	type StructA = { int a; int[2] b }
	type StructB = { int x; StructA y }
	
	function main(x) -> outX, outA, outB0, outB1 {
		check(StructB) -> int, int, int, int

		static assert x is StructB :
			error "X must be { int x; { int a; int[2] b } y }"

		eq outX = x.x
		eq outA = x.y.a
		eq outB0 = x.y.b[0]
		eq outB1 = x.y.b[1]
	}

}
