package damos.tests

blockType StructTest {

	input x
	output y1
	output y2
	
	type StructA = { int a; int[2] b }
	type StructB = { int x; StructA y }

	type MyNamedStruct = {
		int x;
		int y;
	}

	function main(x) -> y1, y2 {
		check({ int x; int y }) -> MyNamedStruct, StructB

		static assert x is { int x; int y } :
			error "X must be { int x; int y }"

		eq y1 = x
		eq y2 = {
			x = 2,
			y = {
				a = 5,
				b = { 7, 19 }
			}
		}
	}

}
