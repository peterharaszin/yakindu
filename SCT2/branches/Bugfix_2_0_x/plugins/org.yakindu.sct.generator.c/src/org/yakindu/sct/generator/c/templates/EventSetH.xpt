«REM»

Templates for the main statechart c file.

@auther joern seger

«ENDREM»

«IMPORT sexec»
«IMPORT stext»
«IMPORT sgraph»

«EXTENSION org::yakindu::sct::generator::c::templates::Naming»

«DEFINE file FOR ExecutionFlow»

«FILE 'EventSet.h'»
«getLicenseHeader()»
#ifndef EVENTSET_H_
#define EVENTSET_H_

#include "definition.h"

#ifdef __cplusplus
extern "C" {
#endif 
 
typedef enum {
	ev_type_input,
	ev_type_output,
	ev_type_local
} EventType;

typedef struct {
	sc_boolean* _set;
	EventType* eventType;
	uint32_t maxEvents;
	sc_boolean isStaticData;
} EventSet;

/* constructor and destructor */
extern void eventSet_init(EventSet* handle, const uint32_t maxEvents);
extern void eventSet_init_staticData(EventSet* handle, const uint32_t maxEvents,
		sc_boolean* _dataSet, EventType* _eventTypes);
extern void eventSet_exit(EventSet* handle);

extern void eventSet_set_type(EventSet* handle, const uint32_t evid, const EventType type);
extern sc_boolean eventSet_is_type(EventSet* handle, const uint32_t evid, const EventType type);
extern sc_boolean eventSet_check(EventSet* handle, const uint32_t evid);
extern void eventSet_clean(EventSet* handle);
extern void eventSet_set(EventSet* handle, const uint32_t evid);
extern sc_boolean eventSet_isAny_input(EventSet* handle);
extern sc_boolean eventSet_isAny_output(EventSet* handle);
extern void eventSet_clean_single(EventSet* handle, const uint32_t evid);
extern void eventSet_clean_input(EventSet* handle);
extern void eventSet_clean_output(EventSet* handle);

#ifdef __cplusplus
}
#endif 
 
#endif /* EVENTSET_H_ */
«ENDFILE»

«ENDDEFINE»
