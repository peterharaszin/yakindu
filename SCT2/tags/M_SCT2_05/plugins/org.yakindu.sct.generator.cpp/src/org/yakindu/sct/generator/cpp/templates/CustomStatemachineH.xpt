«REM»

Templates for the main statechart cpp file.

@auther joern seger

«ENDREM»

«IMPORT sexec»
«IMPORT stext»
«IMPORT sgraph»

«EXTENSION org::yakindu::sct::generator::cpp::templates::Expression»
«EXTENSION org::yakindu::sct::generator::cpp::templates::Naming»

«DEFINE file FOR ExecutionFlow»

«FILE StName()+'.h'»
#ifndef «STNAME()»_H_
#define «STNAME()»_H_

#include "Statemachine.h"
#include "«DRName()».h"
#include "«EvName()».h"


#define MAX_PARALLEL_STATES «this.stateVector.size»

class «StName()»: public Statemachine, public «DRName()» {

public:
	enum States {
	    «FOREACH this.states AS exState-»
	      _«exState.simpleName»,
	    «ENDFOREACH»
		last_state
	};

protected:
	/* conditions */
	«FOREACH states AS state -»
	  «FOREACH state.reactions AS reaction -»
	  «IF reaction.check != null -»
	bool «reaction.check.functionName()»(const _Event& event);
	  «ENDIF»
	  «ENDFOREACH»
	«ENDFOREACH»
	
	/* actions */
	«FOREACH states AS state -»
	  «FOREACH state.reactions AS reaction -»
	void «reaction.effect.functionName()»();
	  «ENDFOREACH»
	«ENDFOREACH»

	/* cycles */
	«FOREACH states AS state -»
	void cycle_«state.simpleName»(const _Event& ev);
	«ENDFOREACH»
	
	/* entrys */
	«FOREACH states AS state -»
	«IF state.entryAction != null»
	void «state.entryAction.entryActionFunctionName()»();
	«ENDIF»
	«ENDFOREACH»
	
	/*exits */
	«FOREACH states AS state -»
	«IF state.exitAction != null»
	void «state.exitAction.exitActionFunctionName()»();
	«ENDIF»
	«ENDFOREACH»
	
	virtual void _runCycle(Event ev);

public:

	«StName()»();
	virtual ~«StName()»();

	virtual void init();

	//virtual void queueEvent(const Event& ev);

};

//}; // namespace
#endif /* «STNAME()»_H_ */

«ENDFILE»

«ENDDEFINE»

