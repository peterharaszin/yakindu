«REM»

Templates for writing a test dump file.

@auther axel terfloth

«ENDREM»

«IMPORT sexec»
«IMPORT stext»
«IMPORT sgraph»

«IMPORT org::yakindu::sct::generator::cpp::templates»


«DEFINE file FOR ExecutionFlow»

«FILE 'dump.txt'»
«EXPAND interfaces FOR this»
Execution States:
«EXPAND executionStates FOREACH this.states»

«ENDFILE»

«ENDDEFINE»


«DEFINE interfaces FOR ExecutionFlow»
Statechart-Interfaces:
«EXPAND scope FOREACH this.scopes»
«ENDDEFINE»

«DEFINE scope FOR Scope -»
«ENDDEFINE»

«DEFINE scope FOR InterfaceScope»
interface «name» : 
«EXPAND declaration FOREACH this.declarations»
«ENDDEFINE»

«DEFINE scope FOR InternalScope»
internal : 
«EXPAND declaration FOREACH this.declarations»
«ENDDEFINE»

«DEFINE declaration FOR Declaration -»
	unknown declaration «name»
«ENDDEFINE»

«DEFINE declaration FOR EventDefinition -»
	event «name»
«ENDDEFINE»

«DEFINE declaration FOR VariableDefinition -»
	var «name» : «type»
«ENDDEFINE»

«DEFINE executionStates FOR ExecutionState»
Name: «this.name»
Simple Name: «this.simpleName»

«EXPAND ReactionFunctions FOR this»

React: «EXPAND code FOR this.reactSequence»
«ENDDEFINE»


«DEFINE code FOR Sequence -»
	{ «EXPAND code FOREACH this.steps -»
	}
«ENDDEFINE»


«DEFINE code FOR If»
		if («EXPAND code FOR check») then «EXPAND code FOR this.thenStep»
		«IF this.elseStep != null -»else «EXPAND code FOR this.elseStep»«ENDIF-»
«ENDDEFINE»

«DEFINE code FOR EnterState -»
 enter «this.state.name -»
«ENDDEFINE»

«DEFINE code FOR ExitState -»
 exit «this.state.name -»
«ENDDEFINE»

«DEFINE code FOR Check -»
«EXPAND code FOR this.condition -»
«ENDDEFINE»


«DEFINE code FOR CheckRef -»
check_«this.check.name -»()
«ENDDEFINE»

«DEFINE code FOR Call -»
take_«this.step.name -»()
«ENDDEFINE»


«DEFINE code FOR Step»
!!! UNKNOWN STEP !!!
«ENDDEFINE»



«DEFINE code FOR Statement -»
«ENDDEFINE»

«DEFINE code FOR LogicalOrExpression -»
«EXPAND code FOR leftOperand» || «EXPAND code FOR rightOperand -»
«ENDDEFINE»


«DEFINE code FOR ElementReferenceExpression -»
«this.value.name -»
«ENDDEFINE»


«DEFINE ReactionFunctions FOR ExecutionState»
«FOREACH reactions AS r»
public boolean check_«r.name»() {
	«EXPAND code FOR r.check»
}

public void take_«r.name»() {
	«EXPAND code FOR r.effect»
}
«ENDFOREACH»
«ENDDEFINE»
