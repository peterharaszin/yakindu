«REM»

Templates for the main statechart cpp file.

@auther joern seger

«ENDREM»

«IMPORT sexec»
«IMPORT stext»
«IMPORT sgraph»
«IMPORT base»

«EXTENSION org::yakindu::sct::generator::cpp::templates::Expression»
«EXTENSION org::yakindu::sct::generator::cpp::templates::Naming»


«DEFINE interfaces FOR ExecutionFlow»
«EXPAND scope FOREACH this.scopes»
«ENDDEFINE»

«DEFINE scope FOR Scope -»
«ENDDEFINE»

«DEFINE scope FOR InterfaceScope»
«EXPAND declaration FOREACH this.declarations»
«ENDDEFINE»

«DEFINE scope FOR InternalScope»
«EXPAND declaration FOREACH this.declarations»
«ENDDEFINE»

«DEFINE declaration FOR Declaration -»
	// unknown declaration «name()»
«ENDDEFINE»

«DEFINE declaration FOR EventDefinition -» 
«ENDDEFINE»

«DEFINE declaration FOR VariableDefinition -»
	«type» «name»; 
«ENDDEFINE»


«DEFINE file FOR ExecutionFlow»

«FILE DRName()+'.h'»
#ifndef «DRNAME()»_H_
#define «DRNAME()»_H_

#include "definition.h"
#include "DataRepository.h"

class «DRName()» : public DataRepository {

«FOREACH this.declaredVariables() AS variable»
    «((VariableDefinition)variable).type» «((VariableDefinition)variable).name»;
«ENDFOREACH»

public:

	«DRName()»() : 
«FOREACH this.declaredVariables() AS variable SEPARATOR ','-»
 «((VariableDefinition)variable).name»(0)«
ENDFOREACH»
	{};
	virtual ~«DRName()»() {};
	
«FOREACH this.declaredVariables() AS variable»
    «((VariableDefinition)variable).type» get_«((VariableDefinition)variable).name»()
    { «((VariableDefinition)variable).type» value; lock(); value = «((VariableDefinition)variable).name»; unlock(); return value; }
«ENDFOREACH»

«FOREACH this.declaredVariables() AS variable»
    void set_«((VariableDefinition)variable).name»(const «((VariableDefinition)variable).type»& value)
    { lock(); «((VariableDefinition)variable).name» =  value; unlock(); }
«ENDFOREACH»

};

#endif /* «DRNAME()»_H_ */
«ENDFILE»

«ENDDEFINE»