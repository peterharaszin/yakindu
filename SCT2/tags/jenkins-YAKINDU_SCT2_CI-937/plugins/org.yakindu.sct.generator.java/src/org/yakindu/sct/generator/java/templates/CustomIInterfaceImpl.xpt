«REM»
Copyright (c) 2011 committers of YAKINDU and others.
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html
Contributors:
	Markus Muehlbrandt - Initial contribution and API
«ENDREM»
«IMPORT stext»
«IMPORT types»

«EXTENSION org::yakindu::sct::generator::java::templates::ExecutionModelExtensions»
«EXTENSION org::yakindu::sct::generator::java::templates::TypeModelExtensions»
«EXTENSION org::yakindu::sct::generator::java::templates::Expression»
«EXTENSION org::yakindu::sct::generator::java::templates::GenmodelEntries»
«EXTENSION org::yakindu::sct::generator::java::templates::Naming»

«DEFINE file(sgen::GeneratorEntry entry) FOR InterfaceScope»
«FILE getImplementationPackagePath(entry)+"/"+getIInterfaceImplName() + '.java'-»
«getLicenseHeader(entry)»
package «getImplementationPackageName(entry)»;

«IF hasUnvaluedEvents()-»
import «entry.getBasePackageName()».Event;
«ENDIF-»
«IF hasIncomingValuedEvents()-»
import «entry.getBasePackageName()».ValuedEvent;
«ENDIF-»

public interface «getIInterfaceImplName()» extends «getInterfaceName()» {
		
	«FOREACH declarations.typeSelect(EventDefinition) AS event-»
	«IF event.direction == Direction::OUT-»
		«IF !event.type.isVoid()-»
		public void raise«event.name.toFirstUpper()»(«event.type.getJavaType()» value);
		«ELSE»
		public void raise«event.name.toFirstUpper()»();
		«ENDIF-»
	«ELSE-»
		public «event.getEventType()» «event.getter()»;
	«ENDIF»
	«ENDFOREACH»
}
«ENDFILE-»
«ENDDEFINE»