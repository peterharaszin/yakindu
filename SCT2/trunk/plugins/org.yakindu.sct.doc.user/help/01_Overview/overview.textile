h1. Overview

h2. What are the YAKINDU Statechart Tools 2

The statechart tools are one central part of YAKINDU: the modular toolkit for model driven development of embedded systems. It is based on the open source development platform Eclipse. The YAKINDU Statechart tools provide the following tools to deal with state machine diagramms:

* *YAKINDU SCT editor* to create and edit state charts
* *YAKINDU simulator* to simulate the behavior of state charts
* *YAKINDU Xpand generator projects* to create a transformation of the state chart in Xpand
* *YAKINDU Xtend/Java generator projects* to create a transformation in Xtend/Java
* integrated validation

The following graph shows these features and their relation to each other:

!images/overview_yakindu.jpg! 

h2. How does it work?

The YAKINDU SCT 2 are integrated in Eclipse and use the textual modeling toolkit Xtext and the graphical modeling toolkit GMF. Behind the scenes of the statechart tools there are some meta models: 

* *SText* the meta model for the state machines and their behavior
* *SGraph* the meta model for the graphical representation of the state machine models
* *SExec* an intermediate model for execution
* *SGen* an intermediate model used for generating

The following graph shows these meta models, which are all defined as languages and their position in the SCT 2 work flow:

!images/overview_yakindu_modules_tech.jpg!

The statechart editor uses *SText* and *SGraph*. The actual model of the state machine is defined in *SText*. *SGraph* only describes the graphical representation in the editor. *SExec* is an intermediate execution model. It is used behind the scenes as a foundation for the code generators and the simulation engine. This guarantees that the simulation behaves in the same way as the generated statechart implementations. It captures the execution behavior and may also serve as the basis of custom code generators. *SGen* is a generator model. All generators can be customized with such a generator model. In fact it is a textual model file where generator features, like i.e. the outlet path, can be specified.

The YAKINDU SCT 2 can be installed in a full blown Eclipse-IDE specifically tailored for your language. It already provides great default functionality for all aspects and allows to configure  the most common things very easily. 


h2. Who is behind YAKINDU Statechart Tools 2?

The main part of YAKINDU SCT 2 is an open source project ("www.yakindu.org":http://www.yakindu.org ). Most of the developers work for itemis, a well known consulting company specialized on model based development.  

You may ask: Where does the money for Open-Source development come from? Well, we provide professional services around Yakindu. Be it training or on-site consulting, be it development of prototypes or implementation of full-blown IDEs for programming languages. We do not only know the framework very well but we are also experts in programming and domain-specific language design. If you need an advice get in contact with us ("www.yakindu.de":http://www.yakindu.de ). 


h2. Who uses the YAKINDU Statechart Tools 2?

Initially the YAKINDU SCT 2 were designed for the embedded systems industry: automotive, system controls, vending machines etc. But it brings benefit to everyone who needs to design, simulate and develop behavior. People can use the YAKINDU SCT 2 to generate Java, C, or C++.