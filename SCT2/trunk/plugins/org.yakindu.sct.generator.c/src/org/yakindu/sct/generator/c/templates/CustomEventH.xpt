«REM»

Templates for the main statechart cpp file.

@auther joern seger

«ENDREM»

«IMPORT sexec»
«IMPORT stext»
«IMPORT sgraph»

«EXTENSION org::yakindu::sct::generator::c::templates::Expression»
«EXTENSION org::yakindu::sct::generator::c::templates::TypeModelExtensions»
«EXTENSION org::yakindu::sct::generator::c::templates::Naming»


«DEFINE file FOR ExecutionFlow»

«FILE EvName()+'.h'»
«getLicenseHeader()»
#ifndef «EVNAME()»_H_
#define «EVNAME()»_H_

 
#include "Event.h"

#ifdef __cplusplus
extern "C" {
#endif 

«REM» lost things:
  ev_«((EventDefinition)ev).name.toLowerCase()»,
  ev_«((TimeEvent)ev).name.toLowerCase()»,
«ENDREM»

typedef enum {
«FOREACH this.declaredEvents() AS ev -»
  «((EventDefinition)ev).getEventEnumName()»,
«ENDFOREACH -»
«FOREACH this.declaredTimerEvents() AS ev -»
  «((TimeEvent)ev).getEventEnumName()»,
«ENDFOREACH -»
  event_last
} EventID;
 
«FOREACH this.declaredEvents() AS ev»
typedef struct { 
  _Event baseEvent;
  «IF !((EventDefinition)ev).type.isVoid() -»
  «asCType(((EventDefinition)ev).type)» value;    
  «ENDIF -»
} «((EventDefinition)ev).getEventName()»;
«ENDFOREACH -»
«FOREACH this.declaredTimerEvents() AS ev»
typedef struct { 
  _Event baseEvent;
} «((TimeEvent)ev).name»;
«ENDFOREACH»
 
extern uint32_t «scName()»_getSizeofEvent(uint32_t evid);

#ifdef __cplusplus
}
#endif 
 
#endif /* «name.toUpperCase()»_H_ */

«ENDFILE»

«ENDDEFINE»