«REM»

Templates for the main statechart cpp file.

@auther joern seger

«ENDREM»

«IMPORT sexec»
«IMPORT stext»
«IMPORT sgraph»

«EXTENSION org::yakindu::sct::generator::c::templates::Expression»
«EXTENSION org::yakindu::sct::generator::c::templates::Constants»
«EXTENSION org::yakindu::sct::generator::c::templates::Naming»

«DEFINE file FOR ExecutionFlow»

«FILE StName()+'.h'»
«this.getLicenseHeader()»

#ifndef «STNAME()»_H_
#define «STNAME()»_H_
 
«FOREACH this.scopes.getUsableScopes() AS interface -»
#include "«interface.interfaceClassName()».h"
«ENDFOREACH»
#include "Statemachine_cy.h"
#include "«EvName()».h"
#include "EventPool.h"
#include "States.h"

#ifdef __cplusplus
extern "C" {
#endif 

#define MAX_PARALLEL_STATES «this.stateVector.size»
«IF historyVector == null»
#define MAX_HISTORY_STATES 0
«ELSE»
#define MAX_HISTORY_STATES «historyVector.size»
«ENDIF»

typedef void(*raiseEventFPtr)(_Event* evPtr);

typedef struct {

	Statemachine_cy base;
«FOREACH this.scopes.getUsableScopes() AS interface -»
	«interface.interfaceClassName()» «interface.interfaceObjectName().toFirstLower()»;
«ENDFOREACH -»
	raiseEventFPtr raiseEvent;
	
} «StName()»;

/* Explicit Constructor & Destructor */
extern void «stName()»_init(«this.handleAdditionComma()» Timer* timer, EventPool* eventPool);
extern void «stName()»_enter(«this.handleAddition()»);
extern void «stName()»_exit(«this.handleAddition()»);
extern void «stName()»_destruct(«this.handleAddition()»);
extern void «stName()»_runCycle(«this.handleAddition()»);
extern sc_boolean «stName()»_eventWaiting(«this.handleAddition()»);

«FOREACH this.scopes.typeSelect(InterfaceScope) AS interface -»
extern «interface.interfaceClassName()»* «stName()»_get_«interface.interfaceObjectName()»(«this.handleAddition()»);
«ENDFOREACH -»

«IF this.isSingleton() == true»
«StName()»* «scName()»_get_handle();
«ENDIF»


#define «scName()»_eventPool_init_heap(handle, maxElemPerEvent) eventPool_init_heap(handle, event_last, maxElemPerEvent, &«scName()»_getSizeofEvent )

/* only friends can see these functions */
#ifdef «STNAME()»_FRIENDS

extern void «stName()»_setEvent(«this.handleAdditionComma()»_Event* ev);


/* virtual function form state machine must be implemented here */
extern void statemachine_cy__runCycle(Statemachine_cy* handle);

#endif /* «STNAME()»_FRIENDS */

#ifdef __cplusplus
}
#endif 
 
#endif /* «STNAME()»_H_ */

«ENDFILE»

«ENDDEFINE»

