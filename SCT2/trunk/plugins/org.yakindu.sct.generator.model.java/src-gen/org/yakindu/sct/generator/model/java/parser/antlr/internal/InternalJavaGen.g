/*
* generated by Xtext
*/
grammar InternalJavaGen;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.yakindu.sct.generator.model.java.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.yakindu.sct.generator.model.java.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.yakindu.sct.generator.model.java.services.JavaGenGrammarAccess;

}

@parser::members {

 	private JavaGenGrammarAccess grammarAccess;
 	
    public InternalJavaGenParser(TokenStream input, JavaGenGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "BaseGeneratorModel";	
   	}
   	
   	@Override
   	protected JavaGenGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleBaseGeneratorModel
entryRuleBaseGeneratorModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBaseGeneratorModelRule()); }
	 iv_ruleBaseGeneratorModel=ruleBaseGeneratorModel 
	 { $current=$iv_ruleBaseGeneratorModel.current; } 
	 EOF 
;

// Rule BaseGeneratorModel
ruleBaseGeneratorModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='JavaGenerator' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBaseGeneratorModelAccess().getJavaGeneratorKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBaseGeneratorModelAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseGeneratorModelAccess().getStatechartReferencesStatechartReferencesParserRuleCall_2_0()); 
	    }
		lv_statechartReferences_2_0=ruleStatechartReferences		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseGeneratorModelRule());
	        }
       		set(
       			$current, 
       			"statechartReferences",
        		lv_statechartReferences_2_0, 
        		"StatechartReferences");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBaseGeneratorModelAccess().getConfigurationGeneratorConfigurationParserRuleCall_3_0()); 
	    }
		lv_configuration_3_0=ruleGeneratorConfiguration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBaseGeneratorModelRule());
	        }
       		set(
       			$current, 
       			"configuration",
        		lv_configuration_3_0, 
        		"GeneratorConfiguration");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBaseGeneratorModelAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleConfigurations
entryRuleConfigurations returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConfigurationsRule()); }
	 iv_ruleConfigurations=ruleConfigurations 
	 { $current=$iv_ruleConfigurations.current; } 
	 EOF 
;

// Rule Configurations
ruleConfigurations returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConfigurationsAccess().getOutletConfigurationParserRuleCall_0()); 
    }
    this_OutletConfiguration_0=ruleOutletConfiguration
    { 
        $current = $this_OutletConfiguration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConfigurationsAccess().getNamingConfigurationParserRuleCall_1()); 
    }
    this_NamingConfiguration_1=ruleNamingConfiguration
    { 
        $current = $this_NamingConfiguration_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConfigurationsAccess().getExecutionTypeConfigurationParserRuleCall_2()); 
    }
    this_ExecutionTypeConfiguration_2=ruleExecutionTypeConfiguration
    { 
        $current = $this_ExecutionTypeConfiguration_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNamingConfiguration
entryRuleNamingConfiguration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamingConfigurationRule()); }
	 iv_ruleNamingConfiguration=ruleNamingConfiguration 
	 { $current=$iv_ruleNamingConfiguration.current; } 
	 EOF 
;

// Rule NamingConfiguration
ruleNamingConfiguration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getNamingConfigurationAccess().getNamingConfigurationAction_0(),
            $current);
    }
)	otherlv_1='naming' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNamingConfigurationAccess().getNamingKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNamingConfigurationAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='interfacePackage' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNamingConfigurationAccess().getInterfacePackageKeyword_3());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNamingConfigurationAccess().getEqualsSignKeyword_4());
    }
(
(
		lv_interfacePackageName_5_0=RULE_STRING
		{
			newLeafNode(lv_interfacePackageName_5_0, grammarAccess.getNamingConfigurationAccess().getInterfacePackageNameSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamingConfigurationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"interfacePackageName",
        		lv_interfacePackageName_5_0, 
        		"STRING");
	    }

)
)	otherlv_6='implementationPackage' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getNamingConfigurationAccess().getImplementationPackageKeyword_6());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getNamingConfigurationAccess().getEqualsSignKeyword_7());
    }
(
(
		lv_implementationPackageName_8_0=RULE_STRING
		{
			newLeafNode(lv_implementationPackageName_8_0, grammarAccess.getNamingConfigurationAccess().getImplementationPackageNameSTRINGTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamingConfigurationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"implementationPackageName",
        		lv_implementationPackageName_8_0, 
        		"STRING");
	    }

)
)	otherlv_9='copyrightHeader' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getNamingConfigurationAccess().getCopyrightHeaderKeyword_9());
    }
	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getNamingConfigurationAccess().getEqualsSignKeyword_10());
    }
(
(
		lv_copyright_11_0=RULE_STRING
		{
			newLeafNode(lv_copyright_11_0, grammarAccess.getNamingConfigurationAccess().getCopyrightSTRINGTerminalRuleCall_11_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamingConfigurationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"copyright",
        		lv_copyright_11_0, 
        		"STRING");
	    }

)
)	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getNamingConfigurationAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleExecutionTypeConfiguration
entryRuleExecutionTypeConfiguration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExecutionTypeConfigurationRule()); }
	 iv_ruleExecutionTypeConfiguration=ruleExecutionTypeConfiguration 
	 { $current=$iv_ruleExecutionTypeConfiguration.current; } 
	 EOF 
;

// Rule ExecutionTypeConfiguration
ruleExecutionTypeConfiguration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getExecutionTypeConfigurationAccess().getExecutionTypeConfigurationAction_0(),
            $current);
    }
)	otherlv_1='executionType' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExecutionTypeConfigurationAccess().getExecutionTypeKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExecutionTypeConfigurationAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='type' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExecutionTypeConfigurationAccess().getTypeKeyword_3());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExecutionTypeConfigurationAccess().getEqualsSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExecutionTypeConfigurationAccess().getTypeExecutionTypeEnumRuleCall_5_0()); 
	    }
		lv_type_5_0=ruleExecutionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExecutionTypeConfigurationRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"ExecutionType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExecutionTypeConfigurationAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleStatechartReferences
entryRuleStatechartReferences returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatechartReferencesRule()); }
	 iv_ruleStatechartReferences=ruleStatechartReferences 
	 { $current=$iv_ruleStatechartReferences.current; } 
	 EOF 
;

// Rule StatechartReferences
ruleStatechartReferences returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='statecharts ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStatechartReferencesAccess().getStatechartsKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStatechartReferencesAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStatechartReferencesRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getStatechartReferencesAccess().getStatechartsStatechartCrossReference_2_0()); 
	}

)
)+(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStatechartReferencesAccess().getCommaKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStatechartReferencesRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getStatechartReferencesAccess().getStatechartsStatechartCrossReference_3_1_0()); 
	}

)
))*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStatechartReferencesAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleGeneratorConfiguration
entryRuleGeneratorConfiguration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeneratorConfigurationRule()); }
	 iv_ruleGeneratorConfiguration=ruleGeneratorConfiguration 
	 { $current=$iv_ruleGeneratorConfiguration.current; } 
	 EOF 
;

// Rule GeneratorConfiguration
ruleGeneratorConfiguration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getGeneratorConfigurationAccess().getConfigurationsConfigurationsParserRuleCall_0()); 
	    }
		lv_configurations_0_0=ruleConfigurations		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGeneratorConfigurationRule());
	        }
       		add(
       			$current, 
       			"configurations",
        		lv_configurations_0_0, 
        		"Configurations");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleOutletConfiguration
entryRuleOutletConfiguration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutletConfigurationRule()); }
	 iv_ruleOutletConfiguration=ruleOutletConfiguration 
	 { $current=$iv_ruleOutletConfiguration.current; } 
	 EOF 
;

// Rule OutletConfiguration
ruleOutletConfiguration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getOutletConfigurationAccess().getOutletConfigurationCustomAction_0(),
            $current);
    }
)	otherlv_1='outlet' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOutletConfigurationAccess().getOutletKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOutletConfigurationAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='projectName' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOutletConfigurationAccess().getProjectNameKeyword_3());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOutletConfigurationAccess().getEqualsSignKeyword_4());
    }
(
(
		lv_projectName_5_0=RULE_STRING
		{
			newLeafNode(lv_projectName_5_0, grammarAccess.getOutletConfigurationAccess().getProjectNameSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutletConfigurationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"projectName",
        		lv_projectName_5_0, 
        		"STRING");
	    }

)
)	otherlv_6='folder' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOutletConfigurationAccess().getFolderKeyword_6());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOutletConfigurationAccess().getEqualsSignKeyword_7());
    }
(
(
		lv_targetFolder_8_0=RULE_STRING
		{
			newLeafNode(lv_targetFolder_8_0, grammarAccess.getOutletConfigurationAccess().getTargetFolderSTRINGTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutletConfigurationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"targetFolder",
        		lv_targetFolder_8_0, 
        		"STRING");
	    }

)
)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOutletConfigurationAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Rule ExecutionType
ruleExecutionType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='cycleBased' 
	{
        $current = grammarAccess.getExecutionTypeAccess().getCYCLE_BASEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getExecutionTypeAccess().getCYCLE_BASEDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='eventDriven' 
	{
        $current = grammarAccess.getExecutionTypeAccess().getEVENT_DRIVENEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getExecutionTypeAccess().getEVENT_DRIVENEnumLiteralDeclaration_1()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


