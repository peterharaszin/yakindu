/*
* generated by Xtext
*/

package org.yakindu.sct.generator.model.java.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.yakindu.sct.generator.model.base.services.BaseGenGrammarAccess;

@Singleton
public class JavaGenGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class BaseGeneratorModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BaseGeneratorModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJavaGeneratorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cStatechartReferencesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStatechartReferencesStatechartReferencesParserRuleCall_2_0 = (RuleCall)cStatechartReferencesAssignment_2.eContents().get(0);
		private final Assignment cConfigurationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cConfigurationGeneratorConfigurationParserRuleCall_3_0 = (RuleCall)cConfigurationAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		/// *
		// * @author Andreas Muelder
		// * / BaseGeneratorModel returns gen::GeneratorModel:
		//	"JavaGenerator" "{" statechartReferences=StatechartReferences configuration=GeneratorConfiguration "}";
		public ParserRule getRule() { return rule; }

		//"JavaGenerator" "{" statechartReferences=StatechartReferences configuration=GeneratorConfiguration "}"
		public Group getGroup() { return cGroup; }

		//"JavaGenerator"
		public Keyword getJavaGeneratorKeyword_0() { return cJavaGeneratorKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//statechartReferences=StatechartReferences
		public Assignment getStatechartReferencesAssignment_2() { return cStatechartReferencesAssignment_2; }

		//StatechartReferences
		public RuleCall getStatechartReferencesStatechartReferencesParserRuleCall_2_0() { return cStatechartReferencesStatechartReferencesParserRuleCall_2_0; }

		//configuration=GeneratorConfiguration
		public Assignment getConfigurationAssignment_3() { return cConfigurationAssignment_3; }

		//GeneratorConfiguration
		public RuleCall getConfigurationGeneratorConfigurationParserRuleCall_3_0() { return cConfigurationGeneratorConfigurationParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class ConfigurationsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Configurations");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cOutletConfigurationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNamingConfigurationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cExecutionTypeConfigurationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Configurations returns gen::Configuration:
		//	OutletConfiguration | NamingConfiguration | ExecutionTypeConfiguration;
		public ParserRule getRule() { return rule; }

		//OutletConfiguration | NamingConfiguration | ExecutionTypeConfiguration
		public Alternatives getAlternatives() { return cAlternatives; }

		//OutletConfiguration
		public RuleCall getOutletConfigurationParserRuleCall_0() { return cOutletConfigurationParserRuleCall_0; }

		//NamingConfiguration
		public RuleCall getNamingConfigurationParserRuleCall_1() { return cNamingConfigurationParserRuleCall_1; }

		//ExecutionTypeConfiguration
		public RuleCall getExecutionTypeConfigurationParserRuleCall_2() { return cExecutionTypeConfigurationParserRuleCall_2; }
	}

	public class NamingConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NamingConfiguration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNamingConfigurationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cNamingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cInterfacePackageKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInterfacePackageNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInterfacePackageNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cInterfacePackageNameAssignment_5.eContents().get(0);
		private final Keyword cImplementationPackageKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cImplementationPackageNameAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cImplementationPackageNameSTRINGTerminalRuleCall_8_0 = (RuleCall)cImplementationPackageNameAssignment_8.eContents().get(0);
		private final Keyword cCopyrightHeaderKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cEqualsSignKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cCopyrightAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cCopyrightSTRINGTerminalRuleCall_11_0 = (RuleCall)cCopyrightAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//NamingConfiguration returns gen::Configuration:
		//	{NamingConfiguration} "naming" "{" "interfacePackage" "=" interfacePackageName=STRING "implementationPackage" "="
		//	implementationPackageName=STRING "copyrightHeader" "=" copyright=STRING "}";
		public ParserRule getRule() { return rule; }

		//{NamingConfiguration} "naming" "{" "interfacePackage" "=" interfacePackageName=STRING "implementationPackage" "="
		//implementationPackageName=STRING "copyrightHeader" "=" copyright=STRING "}"
		public Group getGroup() { return cGroup; }

		//{NamingConfiguration}
		public Action getNamingConfigurationAction_0() { return cNamingConfigurationAction_0; }

		//"naming"
		public Keyword getNamingKeyword_1() { return cNamingKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"interfacePackage"
		public Keyword getInterfacePackageKeyword_3() { return cInterfacePackageKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//interfacePackageName=STRING
		public Assignment getInterfacePackageNameAssignment_5() { return cInterfacePackageNameAssignment_5; }

		//STRING
		public RuleCall getInterfacePackageNameSTRINGTerminalRuleCall_5_0() { return cInterfacePackageNameSTRINGTerminalRuleCall_5_0; }

		//"implementationPackage"
		public Keyword getImplementationPackageKeyword_6() { return cImplementationPackageKeyword_6; }

		//"="
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }

		//implementationPackageName=STRING
		public Assignment getImplementationPackageNameAssignment_8() { return cImplementationPackageNameAssignment_8; }

		//STRING
		public RuleCall getImplementationPackageNameSTRINGTerminalRuleCall_8_0() { return cImplementationPackageNameSTRINGTerminalRuleCall_8_0; }

		//"copyrightHeader"
		public Keyword getCopyrightHeaderKeyword_9() { return cCopyrightHeaderKeyword_9; }

		//"="
		public Keyword getEqualsSignKeyword_10() { return cEqualsSignKeyword_10; }

		//copyright=STRING
		public Assignment getCopyrightAssignment_11() { return cCopyrightAssignment_11; }

		//STRING
		public RuleCall getCopyrightSTRINGTerminalRuleCall_11_0() { return cCopyrightSTRINGTerminalRuleCall_11_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class ExecutionTypeConfigurationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExecutionTypeConfiguration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExecutionTypeConfigurationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cExecutionTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeExecutionTypeEnumRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ExecutionTypeConfiguration returns gen::Configuration:
		//	{ExecutionTypeConfiguration} "executionType" "{" "type" "=" type=ExecutionType "}";
		public ParserRule getRule() { return rule; }

		//{ExecutionTypeConfiguration} "executionType" "{" "type" "=" type=ExecutionType "}"
		public Group getGroup() { return cGroup; }

		//{ExecutionTypeConfiguration}
		public Action getExecutionTypeConfigurationAction_0() { return cExecutionTypeConfigurationAction_0; }

		//"executionType"
		public Keyword getExecutionTypeKeyword_1() { return cExecutionTypeKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"type"
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//type=ExecutionType
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }

		//ExecutionType
		public RuleCall getTypeExecutionTypeEnumRuleCall_5_0() { return cTypeExecutionTypeEnumRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	
	public class ExecutionTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ExecutionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cCYCLE_BASEDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cCYCLE_BASEDCycleBasedKeyword_0_0 = (Keyword)cCYCLE_BASEDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cEVENT_DRIVENEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cEVENT_DRIVENEventDrivenKeyword_1_0 = (Keyword)cEVENT_DRIVENEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ExecutionType:
		//	CYCLE_BASED="cycleBased" | EVENT_DRIVEN="eventDriven";
		public EnumRule getRule() { return rule; }

		//CYCLE_BASED="cycleBased" | EVENT_DRIVEN="eventDriven"
		public Alternatives getAlternatives() { return cAlternatives; }

		//CYCLE_BASED="cycleBased"
		public EnumLiteralDeclaration getCYCLE_BASEDEnumLiteralDeclaration_0() { return cCYCLE_BASEDEnumLiteralDeclaration_0; }

		//"cycleBased"
		public Keyword getCYCLE_BASEDCycleBasedKeyword_0_0() { return cCYCLE_BASEDCycleBasedKeyword_0_0; }

		//EVENT_DRIVEN="eventDriven"
		public EnumLiteralDeclaration getEVENT_DRIVENEnumLiteralDeclaration_1() { return cEVENT_DRIVENEnumLiteralDeclaration_1; }

		//"eventDriven"
		public Keyword getEVENT_DRIVENEventDrivenKeyword_1_0() { return cEVENT_DRIVENEventDrivenKeyword_1_0; }
	}
	
	private BaseGeneratorModelElements pBaseGeneratorModel;
	private ConfigurationsElements pConfigurations;
	private NamingConfigurationElements pNamingConfiguration;
	private ExecutionTypeConfigurationElements pExecutionTypeConfiguration;
	private ExecutionTypeElements unknownRuleExecutionType;
	
	private final GrammarProvider grammarProvider;

	private BaseGenGrammarAccess gaBaseGen;

	@Inject
	public JavaGenGrammarAccess(GrammarProvider grammarProvider,
		BaseGenGrammarAccess gaBaseGen) {
		this.grammarProvider = grammarProvider;
		this.gaBaseGen = gaBaseGen;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public BaseGenGrammarAccess getBaseGenGrammarAccess() {
		return gaBaseGen;
	}

	
	/// *
	// * @author Andreas Muelder
	// * / BaseGeneratorModel returns gen::GeneratorModel:
	//	"JavaGenerator" "{" statechartReferences=StatechartReferences configuration=GeneratorConfiguration "}";
	public BaseGeneratorModelElements getBaseGeneratorModelAccess() {
		return (pBaseGeneratorModel != null) ? pBaseGeneratorModel : (pBaseGeneratorModel = new BaseGeneratorModelElements());
	}
	
	public ParserRule getBaseGeneratorModelRule() {
		return getBaseGeneratorModelAccess().getRule();
	}

	//Configurations returns gen::Configuration:
	//	OutletConfiguration | NamingConfiguration | ExecutionTypeConfiguration;
	public ConfigurationsElements getConfigurationsAccess() {
		return (pConfigurations != null) ? pConfigurations : (pConfigurations = new ConfigurationsElements());
	}
	
	public ParserRule getConfigurationsRule() {
		return getConfigurationsAccess().getRule();
	}

	//NamingConfiguration returns gen::Configuration:
	//	{NamingConfiguration} "naming" "{" "interfacePackage" "=" interfacePackageName=STRING "implementationPackage" "="
	//	implementationPackageName=STRING "copyrightHeader" "=" copyright=STRING "}";
	public NamingConfigurationElements getNamingConfigurationAccess() {
		return (pNamingConfiguration != null) ? pNamingConfiguration : (pNamingConfiguration = new NamingConfigurationElements());
	}
	
	public ParserRule getNamingConfigurationRule() {
		return getNamingConfigurationAccess().getRule();
	}

	//ExecutionTypeConfiguration returns gen::Configuration:
	//	{ExecutionTypeConfiguration} "executionType" "{" "type" "=" type=ExecutionType "}";
	public ExecutionTypeConfigurationElements getExecutionTypeConfigurationAccess() {
		return (pExecutionTypeConfiguration != null) ? pExecutionTypeConfiguration : (pExecutionTypeConfiguration = new ExecutionTypeConfigurationElements());
	}
	
	public ParserRule getExecutionTypeConfigurationRule() {
		return getExecutionTypeConfigurationAccess().getRule();
	}

	//enum ExecutionType:
	//	CYCLE_BASED="cycleBased" | EVENT_DRIVEN="eventDriven";
	public ExecutionTypeElements getExecutionTypeAccess() {
		return (unknownRuleExecutionType != null) ? unknownRuleExecutionType : (unknownRuleExecutionType = new ExecutionTypeElements());
	}
	
	public EnumRule getExecutionTypeRule() {
		return getExecutionTypeAccess().getRule();
	}

	//StatechartReferences returns gen::StatechartReferences:
	//	"statecharts " "{" statecharts+=[sct::Statechart]+ ("," statecharts+=[sct::Statechart])* "}";
	public BaseGenGrammarAccess.StatechartReferencesElements getStatechartReferencesAccess() {
		return gaBaseGen.getStatechartReferencesAccess();
	}
	
	public ParserRule getStatechartReferencesRule() {
		return getStatechartReferencesAccess().getRule();
	}

	//GeneratorConfiguration returns gen::GeneratorConfiguration:
	//	configurations+=Configurations+;
	public BaseGenGrammarAccess.GeneratorConfigurationElements getGeneratorConfigurationAccess() {
		return gaBaseGen.getGeneratorConfigurationAccess();
	}
	
	public ParserRule getGeneratorConfigurationRule() {
		return getGeneratorConfigurationAccess().getRule();
	}

	//OutletConfiguration returns gen::OutletConfiguration:
	//	{OutletConfigurationCustom} "outlet" "{" "projectName" "=" projectName=STRING "folder" "=" targetFolder=STRING "}";
	public BaseGenGrammarAccess.OutletConfigurationElements getOutletConfigurationAccess() {
		return gaBaseGen.getOutletConfigurationAccess();
	}
	
	public ParserRule getOutletConfigurationRule() {
		return getOutletConfigurationAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaBaseGen.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaBaseGen.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaBaseGen.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaBaseGen.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaBaseGen.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaBaseGen.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaBaseGen.getANY_OTHERRule();
	} 
}
