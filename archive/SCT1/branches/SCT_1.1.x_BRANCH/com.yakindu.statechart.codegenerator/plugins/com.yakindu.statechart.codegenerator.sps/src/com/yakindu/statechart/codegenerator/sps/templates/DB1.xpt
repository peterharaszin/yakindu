«REM» Copyright
> Copyright (c) 2010 committers of YAKINDU and others.
> All rights reserved. This program and the accompanying materials
> are made available under the terms of the Eclipse Public License v1.0
> which accompanies this distribution, and is available at
> http://www.eclipse.org/legal/epl-v10.html
>
> Contributors:
>     committers of YAKINDU - initial API and implementation
«ENDREM»
«IMPORT statemachine»

«EXTENSION com::yakindu::statechart::codegenerator::sps::extensions::IDs»
«EXTENSION com::yakindu::statechart::codegenerator::sps::extensions::Sps»
«EXTENSION com::yakindu::statechart::codegenerator::sps::extensions::Names»
«EXTENSION com::yakindu::statechart::codegenerator::sps::extensions::Variable»

«DEFINE main FOR Statechart»
«FILE awlDirectory()+'DB1.AWL'»
	«EXPAND head FOR this-»
//Events
	«FOREACH dataElement.select(e|Event.isInstance(e)).sortBy(e|e.name) AS e-»
		«EXPAND dataElement FOR e-»
	«ENDFOREACH-»
//Lokale Variablen
	«FOREACH dataElement.select(e|Variable.isInstance(e)).sortBy(e|e.name) AS e-»
		«EXPAND dataElement FOR e-»
	«ENDFOREACH-»
	«EXPAND tail FOR this-»
«ENDFILE»
«ENDDEFINE»

«DEFINE head FOR Statechart»
DATA_BLOCK DB1
VERSION: 1.0
//Allgemeiner Datenblock. Hier werden lokale Variablen abgelegt.

«EXPAND com::yakindu::statechart::codegenerator::sps::templates::Statemachine::intro FOR this»

  STRUCT 
//Events
	«FOREACH dataElement.select(e|Event.isInstance(e)).sortBy(e|e.name) AS e-»
		«EXPAND dataElementStruct FOR e-»
	«ENDFOREACH-»
//Lokale Variablen
	«FOREACH dataElement.select(e|Variable.isInstance(e)).sortBy(e|e.name) AS e-»
		«EXPAND dataElementStruct FOR e-»
	«ENDFOREACH-»
       END_STRUCT ;

BEGIN
«ENDDEFINE»

«DEFINE dataElementStruct FOR Event-»
«IF ioType.toString()=="local" || ioType.toString()=="output" || ioType.toString()=="input"-»
   «getEventName()» : BOOL ;
	«IF trigger.toString()=="rising" || trigger.toString()=="falling"-»
   «getEventTriggerName()» : BOOL ;
	«ENDIF-»
«ENDIF-»
«ENDDEFINE»

«DEFINE dataElementStruct FOR DataElement»
«ENDDEFINE»

«DEFINE dataElementStruct FOR Variable-»
«IF ioType.toString()=="local" || ioType.toString()=="output" || ioType.toString()=="input"-»
   «getVarName()» : «spsType()»«REM»:=«switch (dataType.toString()) {
							case "boolean" : "FALSE"
							case "int" : "0"
							case "double" : "0.0"
							default : "NULL"}»«ENDREM» ;
«ENDIF-»
«ENDDEFINE»

«DEFINE dataElement FOR Event-»
«IF ioType.toString()=="local" || ioType.toString()=="output" || ioType.toString()=="input"-»
       «getEventName()» := FALSE ;
	«IF trigger.toString()=="rising" || trigger.toString()=="falling"-»
       «getEventTriggerName()» := FALSE ;
	«ENDIF-»
«ENDIF-»
«ENDDEFINE»

«DEFINE dataElement FOR DataElement»
«ENDDEFINE»

«DEFINE dataElement FOR Variable-»
«IF ioType.toString()=="local" || ioType.toString()=="output" || ioType.toString()=="input"-»
       «getVarName()» := «initialValue()» ;
«ENDIF-»
«ENDDEFINE»

«DEFINE tail FOR Statechart-»
END_DATA_BLOCK
«ENDDEFINE»
