/*
* generated by Xtext
*/
grammar InternalWorkflow;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.yakindu.statechart.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.yakindu.statechart.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import com.yakindu.statechart.services.WorkflowGrammarAccess;

}

@parser::members {
 
 	private WorkflowGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(WorkflowGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleWorkflow
entryRuleWorkflow :
{ before(grammarAccess.getWorkflowRule()); }
	 ruleWorkflow
{ after(grammarAccess.getWorkflowRule()); } 
	 EOF 
;

// Rule Workflow
ruleWorkflow 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getWorkflowAccess().getGroup()); }
(rule__Workflow__Group__0)
{ after(grammarAccess.getWorkflowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModel
entryRuleModel :
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTarget
entryRuleTarget :
{ before(grammarAccess.getTargetRule()); }
	 ruleTarget
{ after(grammarAccess.getTargetRule()); } 
	 EOF 
;

// Rule Target
ruleTarget 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTargetAccess().getGroup()); }
(rule__Target__Group__0)
{ after(grammarAccess.getTargetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTargetPlatform
entryRuleTargetPlatform :
{ before(grammarAccess.getTargetPlatformRule()); }
	 ruleTargetPlatform
{ after(grammarAccess.getTargetPlatformRule()); } 
	 EOF 
;

// Rule TargetPlatform
ruleTargetPlatform 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTargetPlatformAccess().getGroup()); }
(rule__TargetPlatform__Group__0)
{ after(grammarAccess.getTargetPlatformAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlatform
entryRulePlatform :
{ before(grammarAccess.getPlatformRule()); }
	 rulePlatform
{ after(grammarAccess.getPlatformRule()); } 
	 EOF 
;

// Rule Platform
rulePlatform 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPlatformAccess().getAlternatives()); }
(rule__Platform__Alternatives)
{ after(grammarAccess.getPlatformAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Platform__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlatformAccess().getCKeyword_0()); }

	'c' 

{ after(grammarAccess.getPlatformAccess().getCKeyword_0()); }
)

    |(
{ before(grammarAccess.getPlatformAccess().getJavaKeyword_1()); }

	'java' 

{ after(grammarAccess.getPlatformAccess().getJavaKeyword_1()); }
)

    |(
{ before(grammarAccess.getPlatformAccess().getJavameKeyword_2()); }

	'javame' 

{ after(grammarAccess.getPlatformAccess().getJavameKeyword_2()); }
)

    |(
{ before(grammarAccess.getPlatformAccess().getLejosKeyword_3()); }

	'lejos' 

{ after(grammarAccess.getPlatformAccess().getLejosKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Workflow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWorkflowAccess().getModelsAssignment_0()); }
(rule__Workflow__ModelsAssignment_0)
{ after(grammarAccess.getWorkflowAccess().getModelsAssignment_0()); }
)
(
{ before(grammarAccess.getWorkflowAccess().getModelsAssignment_0()); }
(rule__Workflow__ModelsAssignment_0)*
{ after(grammarAccess.getWorkflowAccess().getModelsAssignment_0()); }
)
)

	rule__Workflow__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorkflowAccess().getTargetAssignment_1()); }
(rule__Workflow__TargetAssignment_1)
{ after(grammarAccess.getWorkflowAccess().getTargetAssignment_1()); }
)

	rule__Workflow__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Workflow__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorkflowAccess().getPlatformAssignment_2()); }
(rule__Workflow__PlatformAssignment_2)
{ after(grammarAccess.getWorkflowAccess().getPlatformAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelFileKeyword_0()); }

	'modelFile' 

{ after(grammarAccess.getModelAccess().getModelFileKeyword_0()); }
)

	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelAssignment_1()); }
(rule__Model__ModelAssignment_1)
{ after(grammarAccess.getModelAccess().getModelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Target__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetAccess().getTargetDirKeyword_0()); }

	'targetDir' 

{ after(grammarAccess.getTargetAccess().getTargetDirKeyword_0()); }
)

	rule__Target__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Target__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetAccess().getTargetAssignment_1()); }
(rule__Target__TargetAssignment_1)
{ after(grammarAccess.getTargetAccess().getTargetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TargetPlatform__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetPlatformAccess().getTargetPlatformKeyword_0()); }

	'targetPlatform' 

{ after(grammarAccess.getTargetPlatformAccess().getTargetPlatformKeyword_0()); }
)

	rule__TargetPlatform__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TargetPlatform__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetPlatformAccess().getTargetplatformAssignment_1()); }
(rule__TargetPlatform__TargetplatformAssignment_1)
{ after(grammarAccess.getTargetPlatformAccess().getTargetplatformAssignment_1()); }
)

	rule__TargetPlatform__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__TargetPlatform__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetPlatformAccess().getDefensiveAssignment_2()); }
(rule__TargetPlatform__DefensiveAssignment_2)?
{ after(grammarAccess.getTargetPlatformAccess().getDefensiveAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Workflow__ModelsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorkflowAccess().getModelsModelParserRuleCall_0_0()); }
	ruleModel{ after(grammarAccess.getWorkflowAccess().getModelsModelParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorkflowAccess().getTargetTargetParserRuleCall_1_0()); }
	ruleTarget{ after(grammarAccess.getWorkflowAccess().getTargetTargetParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Workflow__PlatformAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorkflowAccess().getPlatformTargetPlatformParserRuleCall_2_0()); }
	ruleTargetPlatform{ after(grammarAccess.getWorkflowAccess().getPlatformTargetPlatformParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ModelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getModelAccess().getModelSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Target__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetAccess().getTargetSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getTargetAccess().getTargetSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TargetPlatform__TargetplatformAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetPlatformAccess().getTargetplatformPlatformParserRuleCall_1_0()); }
	rulePlatform{ after(grammarAccess.getTargetPlatformAccess().getTargetplatformPlatformParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TargetPlatform__DefensiveAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTargetPlatformAccess().getDefensiveDefensiveKeyword_2_0()); }
(
{ before(grammarAccess.getTargetPlatformAccess().getDefensiveDefensiveKeyword_2_0()); }

	'defensive' 

{ after(grammarAccess.getTargetPlatformAccess().getDefensiveDefensiveKeyword_2_0()); }
)

{ after(grammarAccess.getTargetPlatformAccess().getDefensiveDefensiveKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


