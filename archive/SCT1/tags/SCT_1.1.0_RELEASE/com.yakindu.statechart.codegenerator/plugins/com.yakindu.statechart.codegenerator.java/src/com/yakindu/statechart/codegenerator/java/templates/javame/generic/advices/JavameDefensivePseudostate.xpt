«REM» Copyright
> Copyright (c) 2010 committers of YAKINDU and others.
> All rights reserved. This program and the accompanying materials
> are made available under the terms of the Eclipse Public License v1.0
> which accompanies this distribution, and is available at
> http://www.eclipse.org/legal/epl-v10.html
>
> Contributors:
>     committers of YAKINDU - initial API and implementation
«ENDREM»
«IMPORT statemachine»
«IMPORT statechartexpressions»

«EXTENSION com::yakindu::statechart::codegenerator::java::extensions::Extensions»

«AROUND com::yakindu::statechart::codegenerator::java::templates::generic::Pseudostate::PseudostateClassBody FOR Object» 
	«targetDef.proceed()»	
	
	private void assertEnabledOutgoingTransitionExists() {
		// choose the first outgoing transition that can be taken and take it
		if(getEnabledOutgoingTransitionOfHighestPriority() == null) {
			throw new IllegalStateException("At least one outgoing transition must be enabled.");
		}
	}
«ENDAROUND»	

«AROUND com::yakindu::statechart::codegenerator::java::templates::generic::Pseudostate::enterMethodBody FOR Object» 
	// defensive code, check that there is one outgoing transition that can be taken	
	if (kind == PseudostateKind.CHOICE) {
		assertEnabledOutgoingTransitionExists();	
	}	
	
	«targetDef.proceed()»	
«ENDAROUND»