«REM» Copyright
> Copyright (c) 2010 committers of YAKINDU and others.
> All rights reserved. This program and the accompanying materials
> are made available under the terms of the Eclipse Public License v1.0
> which accompanies this distribution, and is available at
> http://www.eclipse.org/legal/epl-v10.html
>
> Contributors:
>     committers of YAKINDU - initial API and implementation
«ENDREM»
«IMPORT statemachine»
«IMPORT statechartexpressions»

«EXTENSION com::yakindu::statechart::codegenerator::java::extensions::Extensions»

«AROUND com::yakindu::statechart::codegenerator::java::templates::generic::Pseudostate::PseudostateClassBody FOR Object» 
	int kind;

	public Pseudostate(String id, Region owningRegion, int kind) {
		super(id, owningRegion);
		this.kind = kind;
	}

	public int getKind() {
		return kind;
	}

	«EXPAND com::yakindu::statechart::codegenerator::java::templates::generic::Pseudostate::enterMethod»
	
	«EXPAND com::yakindu::statechart::codegenerator::java::templates::generic::Pseudostate::leaveMethod»
«ENDAROUND»

«AROUND com::yakindu::statechart::codegenerator::java::templates::generic::Pseudostate::enterMethodBody FOR Object»
		if (kind == PseudostateKind.INITIAL) {
			// go directly into the next state (special transition needs no
			// event
			((Transition) outgoingTransitions.elementAt(0)).take();
		} else if (kind == PseudostateKind.SHALLOWHISTORY || kind == PseudostateKind.DEEPHISTORY) {
			// if this is the first time we enter this state, prolong the
			// default transition, else reenter the region
			if (owningRegion.getCurrentState() == null) {
				((Transition) outgoingTransitions.elementAt(0)).take();
			} else {
				owningRegion.reenter(kind == PseudostateKind.SHALLOWHISTORY ? HistoryMode.SHALLOW : HistoryMode.DEEP);
			}
		} else if (kind == PseudostateKind.CHOICE) {
			// choose the first outgoing transition that can be taken and take it
			getEnabledOutgoingTransitionOfHighestPriority().take();			
		} 
		else if(kind == PseudostateKind.JUNCTION){
			// just take the single outgoing transition to the next state
			((Transition) outgoingTransitions.elementAt(0)).take();
		}
		else {
			throw new IllegalArgumentException("UNSUPPORTED Pseudostate Kind");
		}
«ENDAROUND»
 