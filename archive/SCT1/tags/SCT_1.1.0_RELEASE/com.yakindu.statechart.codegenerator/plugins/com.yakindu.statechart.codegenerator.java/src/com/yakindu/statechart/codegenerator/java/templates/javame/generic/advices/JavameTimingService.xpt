«REM» Copyright
> Copyright (c) 2010 committers of YAKINDU and others.
> All rights reserved. This program and the accompanying materials
> are made available under the terms of the Eclipse Public License v1.0
> which accompanies this distribution, and is available at
> http://www.eclipse.org/legal/epl-v10.html
>
> Contributors:
>     committers of YAKINDU - initial API and implementation
«ENDREM»
«IMPORT statemachine»
«IMPORT statechartexpressions»

«EXTENSION com::yakindu::statechart::codegenerator::java::extensions::Extensions»

«AROUND com::yakindu::statechart::codegenerator::java::templates::generic::TimingService::Imports FOR Object»
import java.util.Timer;
import java.util.TimerTask;
import java.util.Vector;
«ENDAROUND»
 
«AROUND com::yakindu::statechart::codegenerator::java::templates::generic::TimingService::canceledRequestedEventsVariable FOR Object»
	private Vector canceledRequestedEvents = new Vector();
«ENDAROUND»

«AROUND com::yakindu::statechart::codegenerator::java::templates::generic::TimingService::requestTimeEventMethodBody FOR Object»
		canceledRequestedEvents.removeElement(timeEvent);
	
		// run a timer (there is an own thread for this);
		Timer timer = new Timer();
		timer.schedule(new TimerTask() {

			public void run() {
				if (canceledRequestedEvents.contains(timeEvent)) {
					canceledRequestedEvents.removeElement(timeEvent);
				} else {
					statechart.setEvent(timeEvent);
				}
			}

		}, timeEvent.getDuration());
«ENDAROUND»

«AROUND com::yakindu::statechart::codegenerator::java::templates::generic::TimingService::cancelTimeEventMethodBody FOR Object»
		canceledRequestedEvents.addElement(timeEvent);
«ENDAROUND»