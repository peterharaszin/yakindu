<?xml version="1.0" encoding="UTF-8"?>
<gmfmap:Mapping xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:gmfmap="http://www.eclipse.org/gmf/2008/mappings"
    xmlns:gmftool="http://www.eclipse.org/gmf/2005/ToolDefinition">
  <nodes>
    <containmentFeature
        href="statemachine.ecore#//Statechart/region"/>
    <ownedChild>
      <domainMetaElement
          href="statemachine.ecore#//Region"/>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          viewPattern="">
        <diagramLabel
            href="statemachine.gmfgraph#RegionPriority"/>
        <features
            href="statemachine.ecore#//Region/priority"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="statemachine.gmftool#//@palette/@tools.0/@tools.0"/>
      <diagramNode
          href="statemachine.gmfgraph#Region"/>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.0/@ownedChild/@children.0/@ownedChild">
        <containmentFeature
            href="statemachine.ecore#//Region/state"/>
        <ownedChild>
          <domainMetaElement
              href="statemachine.ecore#//State"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="statemachine.ecore#//Node/id"/>
              <value
                  body="&#x9;&#x9;return getNextNodeID(self);&#xA;&#x9;}&#xA;&#xD;&#x9;/**&#xD;&#x9; * generated as part of state/state initializer&#xD;&#x9;*/&#xA;&#x9;private static java.lang.Integer getNextNodeID(Node self) {&#xA;&#x9;&#x9;int biggestId = 0;&#xA;&#x9;&#x9;EObject parent = self.eContainer();&#xA;&#x9;&#x9;while (parent!= null &amp;&amp; !(parent instanceof Statechart)){&#xA;&#x9;&#x9;    parent = parent.eContainer();&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;if (parent==null){&#xA;&#x9;&#x9;    return new Integer(0);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;for (Iterator&lt;EObject> iter = parent.eAllContents();iter.hasNext();){&#xA;&#x9;&#x9;    EObject e = iter.next();&#xA;&#x9;&#x9;    if (e instanceof Node){&#xA;&#x9;&#x9;        Node n = (Node) e;&#xA;&#x9;&#x9;        if (n != self &amp;&amp; n.getId() > biggestId) {&#xA;                            biggestId = n.getId();&#xA;&#x9;&#x9;        }&#xA;&#x9;&#x9;    }&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return new Integer(biggestId + 1);"
                  language="java"/>
            </initializers>
          </domainInitializer>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              viewPattern="">
            <diagramLabel
                href="statemachine.gmfgraph#StateName"/>
            <features
                href="statemachine.ecore#//Node/name"/>
          </labelMappings>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              viewPattern="">
            <diagramLabel
                href="statemachine.gmfgraph#StateEntry"/>
            <features
                href="statemachine.ecore#//State/entry"/>
          </labelMappings>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              viewPattern="">
            <diagramLabel
                href="statemachine.gmfgraph#StateDo"/>
            <features
                href="statemachine.ecore#//State/do"/>
          </labelMappings>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              viewPattern="">
            <diagramLabel
                href="statemachine.gmfgraph#StateExit"/>
            <features
                href="statemachine.ecore#//State/exit"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="statemachine.gmftool#//@palette/@tools.0/@tools.1"/>
          <diagramNode
              href="statemachine.gmfgraph#State"/>
          <children
              compartment="//@nodes.0/@ownedChild/@children.0/@ownedChild/@compartments.0"
              referencedChild="//@nodes.0/@ownedChild">
            <containmentFeature
                href="statemachine.ecore#//State/region"/>
          </children>
          <compartments
              children="//@nodes.0/@ownedChild/@children.0/@ownedChild/@children.0">
            <compartment
                href="statemachine.gmfgraph#StateCompartment"/>
          </compartments>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.0/@ownedChild/@children.1/@ownedChild">
        <containmentFeature
            href="statemachine.ecore#//Region/state"/>
        <ownedChild>
          <domainMetaElement
              href="statemachine.ecore#//Pseudostate"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="statemachine.ecore#//Pseudostate/pseudoType"/>
              <value
                  body="PseudoTypes::initial"/>
            </initializers>
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="statemachine.ecore#//Node/id"/>
              <value
                  body="&#x9;&#x9;return getNextNodeID(self);"
                  language="java"/>
            </initializers>
          </domainInitializer>
          <tool
              xsi:type="gmftool:CreationTool"
              href="statemachine.gmftool#//@palette/@tools.2/@tools.0"/>
          <diagramNode
              href="statemachine.gmfgraph#InitialState"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.0/@ownedChild/@children.2/@ownedChild">
        <containmentFeature
            href="statemachine.ecore#//Region/state"/>
        <ownedChild>
          <domainMetaElement
              href="statemachine.ecore#//FinalState"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="statemachine.ecore#//Node/name"/>
              <value
                  body="'FinalState'"/>
            </initializers>
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="statemachine.ecore#//Node/id"/>
              <value
                  body="return getNextNodeID(self);"
                  language="java"/>
            </initializers>
          </domainInitializer>
          <tool
              xsi:type="gmftool:CreationTool"
              href="statemachine.gmftool#//@palette/@tools.2/@tools.1"/>
          <diagramNode
              href="statemachine.gmfgraph#Final"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.0/@ownedChild/@children.3/@ownedChild">
        <containmentFeature
            href="statemachine.ecore#//Region/state"/>
        <ownedChild>
          <domainMetaElement
              href="statemachine.ecore#//Pseudostate"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="statemachine.ecore#//Pseudostate/pseudoType"/>
              <value
                  body="PseudoTypes::choice"/>
            </initializers>
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="statemachine.ecore#//Node/id"/>
              <value
                  body="return getNextNodeID(self);"
                  language="java"/>
            </initializers>
          </domainInitializer>
          <tool
              xsi:type="gmftool:CreationTool"
              href="statemachine.gmftool#//@palette/@tools.1/@tools.1"/>
          <diagramNode
              href="statemachine.gmfgraph#Choice"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.0/@ownedChild/@children.4/@ownedChild">
        <containmentFeature
            href="statemachine.ecore#//Region/state"/>
        <ownedChild>
          <domainMetaElement
              href="statemachine.ecore#//Pseudostate"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="statemachine.ecore#//Pseudostate/pseudoType"/>
              <value
                  body="PseudoTypes::deepHistory"/>
            </initializers>
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="statemachine.ecore#//Node/id"/>
              <value
                  body="return getNextNodeID(self);"
                  language="java"/>
            </initializers>
          </domainInitializer>
          <tool
              xsi:type="gmftool:CreationTool"
              href="statemachine.gmftool#//@palette/@tools.2/@tools.3"/>
          <diagramNode
              href="statemachine.gmfgraph#DeepHistory"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.0/@ownedChild/@children.5/@ownedChild">
        <containmentFeature
            href="statemachine.ecore#//Region/state"/>
        <ownedChild>
          <domainMetaElement
              href="statemachine.ecore#//Pseudostate"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="statemachine.ecore#//Pseudostate/pseudoType"/>
              <value
                  body="PseudoTypes::shallowHistory"/>
            </initializers>
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="statemachine.ecore#//Node/id"/>
              <value
                  body="return getNextNodeID(self);"
                  language="java"/>
            </initializers>
          </domainInitializer>
          <tool
              xsi:type="gmftool:CreationTool"
              href="statemachine.gmftool#//@palette/@tools.2/@tools.2"/>
          <diagramNode
              href="statemachine.gmfgraph#ShallowHistory"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0"
          referencedChild="//@nodes.0/@ownedChild/@children.6/@ownedChild">
        <containmentFeature
            href="statemachine.ecore#//Region/state"/>
        <ownedChild>
          <domainMetaElement
              href="statemachine.ecore#//Pseudostate"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="statemachine.ecore#//Pseudostate/pseudoType"/>
              <value
                  body="PseudoTypes::junction"/>
            </initializers>
            <initializers
                xsi:type="gmfmap:FeatureValueSpec">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="statemachine.ecore#//Node/id"/>
              <value
                  body="return getNextNodeID(self);"
                  language="java"/>
            </initializers>
          </domainInitializer>
          <tool
              xsi:type="gmftool:CreationTool"
              href="statemachine.gmftool#//@palette/@tools.1/@tools.2"/>
          <diagramNode
              href="statemachine.gmfgraph#Junction"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.0/@ownedChild/@children.0 //@nodes.0/@ownedChild/@children.1 //@nodes.0/@ownedChild/@children.5 //@nodes.0/@ownedChild/@children.2 //@nodes.0/@ownedChild/@children.3 //@nodes.0/@ownedChild/@children.4 //@nodes.0/@ownedChild/@children.6">
        <compartment
            href="statemachine.gmfgraph#RegionCompartment"/>
      </compartments>
    </ownedChild>
  </nodes>
  <links>
    <domainMetaElement
        href="statemachine.ecore#//Transition"/>
    <domainInitializer
        xsi:type="gmfmap:FeatureSeqInitializer">
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EAttribute"
            href="statemachine.ecore#//Transition/id"/>
        <value
            body="&#x9;&#x9;int biggestId = 0;&#xA;&#x9;&#x9;for (Transition t : ((statemachine.Statechart)self.eContainer()).getTransition()) {&#xA;&#x9;&#x9;&#x9;if (t.getId() > biggestId) {&#xA;&#x9;&#x9;&#x9;&#x9;biggestId = t.getId();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return new Integer(biggestId + 1);"
            language="java"/>
      </initializers>
      <initializers
          xsi:type="gmfmap:FeatureValueSpec">
        <feature
            xsi:type="ecore:EAttribute"
            href="statemachine.ecore#//Transition/priority"/>
        <value
            body="int biggestPriority=0;&#xA;&#x9;&#x9;for (Transition t:((statemachine.Statechart)self.eContainer()).getTransition()){&#xA;&#x9;&#x9;&#x9;if (t.getSourceNode()==self.getSourceNode() &amp;&amp; t.getId()>biggestPriority){&#xA;&#x9;&#x9;&#x9;&#x9;biggestPriority = t.getPriority();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;return new Integer(biggestPriority+1);"
            language="java"/>
      </initializers>
    </domainInitializer>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="statemachine.gmfgraph#TransitionExpression"/>
      <features
          href="statemachine.ecore#//Transition/expression"/>
    </labelMappings>
    <labelMappings
        xsi:type="gmfmap:FeatureLabelMapping">
      <diagramLabel
          href="statemachine.gmfgraph#TransitionPriority"/>
      <features
          href="statemachine.ecore#//Transition/priority"/>
    </labelMappings>
    <containmentFeature
        href="statemachine.ecore#//Statechart/transition"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="statemachine.gmftool#//@palette/@tools.1/@tools.0"/>
    <diagramLink
        href="statemachine.gmfgraph#Transition"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="statemachine.ecore#//Transition/sourceNode"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="statemachine.ecore#//Transition/targetNode"/>
  </links>
  <diagram>
    <diagramCanvas
        href="statemachine.gmfgraph#Statemachine"/>
    <domainModel
        href="statemachine.ecore#/"/>
    <domainMetaElement
        href="statemachine.ecore#//Statechart"/>
    <palette
        href="statemachine.gmftool#//@palette"/>
  </diagram>
  <audits
      id="com.yakindu.statechart.checks"
      name="checks"
      description="Checks"/>
</gmfmap:Mapping>
