/**
 * Copyright (c) 2010 committers of YAKINDU and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     committers of YAKINDU - initial API and implementation
 */
import statemachine;
import statechartexpressions;

/*
 * This extension file is intended to be used for defining
 * general extensions for the domain model.
 * It inherits generated extensions from GenExtensions.
 * You can overwrite or specialize them here
 */
TriggerExpression parseTriggerExpression(String triggerExpressionString) : 
   JAVA com.yakindu.statechart.model.expressions.JavaExtensions.parseTriggerExpressionObject(java.lang.String);
 
GuardExpression parseGuardExpression(String guardExpressionString) : 
   JAVA com.yakindu.statechart.model.expressions.JavaExtensions.parseGuardExpressionObject(java.lang.String);
 
ActionExpression parseActionExpression(String actionExpressionString) : 
   JAVA com.yakindu.statechart.model.expressions.JavaExtensions.parseActionExpressionObject(java.lang.String);
 
List[Trigger] getTriggers(TriggerExpression this) : 
    this != null ? this.triggers : {};

Trigger getTimeTrigger(TriggerExpression this) : 
	this.triggers.select(e|TimeEvent.isInstance(e.event)).first(); 
	
List[Trigger] getSignalTriggers(TriggerExpression this) : 
   this.triggers.select(e|SignalEvent.isInstance(e.event));
	
boolean isTimeTrigger(Trigger this) : 
    TimeEvent.isInstance(this.event);
    
boolean isConstantTimeTrigger(Trigger this) : 
    this.isTimeTrigger() && TimeConstant.isInstance(((TimeEvent)this.event).duration);
   
boolean isVariableTimeTrigger(Trigger this) :
    this.isTimeTrigger() && VariableReference.isInstance(((TimeEvent)this.event).duration);
   
TimeConstant getConstantTimeTriggerDuration(Trigger this) :
    this.isConstantTimeTrigger() ? ((TimeConstant)((TimeEvent)this.event).duration) : null;
    
Integer getInMilliseconds(TimeConstant this) : 
	unit.toString().matches("ms") ? value : (unit.toString().matches("s") ? value * 1000 : (unit.toString().matches("ns") ? value / 1000 : value));
	
String getVariableTimeTriggerVariableIdentifier(Trigger this) : 
    this.isVariableTimeTrigger() ? ((VariableReference)((TimeEvent)this.event).duration).variable.identifier : null;
