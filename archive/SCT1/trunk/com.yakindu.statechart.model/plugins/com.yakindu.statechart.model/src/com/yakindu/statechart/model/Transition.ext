/**
 * Copyright (c) 2010 committers of YAKINDU and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     committers of YAKINDU - initial API and implementation
 */
import statechart;
import expressions;

extension org::yakindu::sct::codegenerator::base::extensions::Extensions;

String getId(Transition this):
  getId(this.eContainer) + "_TRANSITION_" + this.ID();

// TODO: check if this calculated id is appropriate
cached int ID(Transition this): this.eRootContainer.eAllContents.typeSelect(Transition).indexOf(this);


// TODO: refactor : eliminate extension
Trigger getTriggerExpression(Transition this) : 
    this.trigger;
  
// TODO : we don't use guards on this level anymore
// GuardExpression getGuardExpression(Transition this) : 
//   this.expression != null && extractGuardExpressionString(this.expression) != null ? parseGuardExpression(extractGuardExpressionString(this.expression)) : null;

// TODO: refactor : eliminate extension
Effect getActionExpression(Transition this) : 
    this.effect;

// List[Trigger] getTriggers(Transition this) : 
//    this.getTriggerExpression() != null ? this.getTriggerExpression().getTriggers() : {};
    
// Trigger getTimeTrigger(Transition this) : 
//	this.getTriggers().select(e|TimeEvent.isInstance(e.event)).first(); 
	
// List[Trigger] getSignalTriggers(Transition this) : 
//   this.getTriggers().select(e|SignalEvent.isInstance(e.event));
 
//boolean hasTriggers(Transition this) :
//    !this.getTriggers().isEmpty;
  
// TODO eleimitae if not required  
//boolean hasGuard(Transition this) : 
//    this.getGuardExpression() != null;
    
    
boolean isTimeTriggered(Transition this) : 
	this.trigger.isTimeTriggered();

// hook that must be overwritten for concrete subtypes.
boolean isTimeTriggered(Trigger this) : false;
	
boolean isSignalTriggered(Transition this) :
	this.trigger.isSignalTriggered();

// hook that must be overwritten for concrete subtypes.
boolean isSignalTriggered(Trigger this) : false;
    
boolean hasAction(Transition this) : 
    this.getActionExpression() != null;